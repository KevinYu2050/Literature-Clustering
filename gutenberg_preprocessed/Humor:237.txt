 bare-metal programming involves things like building boot proms and
 bios chips, implementing basic monitors used to test device
 drivers, and writing the assemblers that will be used to write the
 compiler back ends that will give the new machine a real
 development environment. . `programming on the bare metal' is
 also used to describe a style of {hand-hacking} that relies on
 bit-level peculiarities of a particular hardware design, esp.
 tricks for speed and space optimization that rely on crocks such as
 overlapping instructions (or, as in the famous case described in
 {the story of mel, a real programmer} (in {appendix a}),
 interleaving of opcodes on a magnetic drum to minimize fetch delays
 due to the device's rotational latency). this sort of thing has
 become less common as the relative costs of programming time and
 machine resources have changed, but is still found in heavily
 constrained environments such as industrial embedded systems. see
 {real programmer}.
 in the world of personal computing, bare metal programming
 (especially in sense  but sometimes also in sense ) is often
 considered a {good thing}, or at least a necessary evil
 (because these machines have often been sufficiently slow and
 poorly designed to make it necessary; see {ill-behaved}).
 there, the term usually refers to bypassing the bios or os
 interface and writing the application to directly access device
 registers and machine addresses. "to get . kilobaud on the
 serial port, you need to get down to the bare metal." people who
 can do this sort of thing are held in high regard.
:barf: /barf/ [from mainstream slang meaning `vomit']
 . interj. term of disgust. this is the closest hackish
 equivalent of the val\-speak "gag me with a spoon". (like, euwww!)
 see {bletch}. . vi. to say "barf!" or emit some similar
 expression of disgust. "i showed him my latest hack and he
 barfed" means only that he complained about it, not that he
 literally vomited. . vi. to fail to work because of unacceptable
 input. may mean to give an error message. examples: "the
 division operation barfs if you try to divide by ." (that is,
 the division operation checks for an attempt to divide by zero, and
 if one is encountered it causes the operation to fail in some
 unspecified, but generally obvious, manner.) "the text editor
 barfs if you try to read in a new file before writing out the old
 one." see {choke}, {gag}. in commonwealth hackish,
 `barf' is generally replaced by `puke' or `vom'. {barf}
 is sometimes also used as a {metasyntactic variable}, like {foo} or
 {bar}.
:barfmail: n. multiple {bounce message}s accumulating to the
level of serious annoyance, or worse. the sort of thing that
happens when an inter-network mail gateway goes down or
wonky.
:barfulation: /bar`fyoo-lay'sh*n/ interj. variation of {barf}
used around the stanford area. an exclamation, expressing disgust.
on seeing some particularly bad code one might exclaim,
"barfulation! who wrote this, quux?"
:barfulous: /bar'fyoo-l*s/ adj. (alt. `barfucious',
 /bar-fyoo-sh*s/) said of something that would make anyone barf,
 if only for esthetic reasons.
:barney: n. in commonwealth hackish, `barney' is to {fred}
 (sense #) as {bar} is to {foo}. that is, people who
 commonly use `fred' as their first metasyntactic variable will
 often use `barney' second. the reference is, of course, to fred
 flintstone and barney rubble in the flintstones cartoons.
:baroque: adj. feature-encrusted; complex; gaudy; verging on
 excessive. said of hardware or (esp.) software designs, this has
 many of the connotations of {elephantine} or {monstrosity} but is
 less extreme and not pejorative in itself. "metafont even has
 features to introduce random variations to its letterform output.
 now *that* is baroque!" see also {rococo}.
:bartlemud: /bar'tl-muhd/ n. any of the muds derived from the
 original mud game by richard bartle and roy trubshaw (see
 {mud}). bartlemuds are noted for their (usually slightly
 offbeat) humor, dry but friendly syntax, and lack of adjectives in
 object descriptions, so a player is likely to come across
 `brand', for instance (see {brand brand brand}). bartle has
 taken a bad rap in some mudding circles for supposedly originating
 this term, but (like the story that mud is a trademark) this
 appears to be a myth; he uses `mud'.
:basic: n. a programming language, originally designed for
 dartmouth's experimental timesharing system in the early s,
 which has since become the leading cause of brain-damage in
 proto-hackers. this is another case (like {pascal}) of the bad
 things that happen when a language deliberately designed as an
 educational toy gets taken too seriously. a novice can write short
 basic programs (on the order of — lines) very easily; writing
 anything longer is (a) very painful, and (b) encourages bad habits
 that will bite him/her later if he/she tries to hack in a real
 language. this wouldn't be so bad if historical accidents hadn't
 made basic so common on low-end micros. as it is, it ruins
 thousands of potential wizards a year.
:batch: adj. . non-interactive. hackers use this somewhat more
 loosely than the traditional technical definitions justify; in
 particular, switches on a normally interactive program that prepare
 it to receive non-interactive command input are often referred to
 as `batch mode' switches. a `batch file' is a series of
 instructions written to be handed to an interactive program running
 in batch mode. . performance of dreary tasks all at one sitting.
 "i finally sat down in batch mode and wrote out checks for all
 those bills; i guess they'll turn the electricity back on next
 week…" . accumulation of a number of small tasks that can be
 lumped together for greater efficiency. "i'm batching up those
 letters to send sometime" "i'm batching up bottles to take to the
 recycling center."
:bathtub curve: n. common term for the curve (resembling an
 end-to-end section of one of those claw-footed antique bathtubs)
 that describes the expected failure rate of electronics with time:
 initially high, dropping to near  for most of the system's
 lifetime, then rising again as it `tires out'. see also {burn-in
 period}, {infant mortality}.
:baud: /bawd/ [simplified from its technical meaning] n. bits per
second. hence kilobaud or kbaud, thousands of bits per second.
the technical meaning is `level transitions per second'; this
coincides with bps only for two-level modulation with no framing or
stop bits. most hackers are aware of these nuances but blithely
ignore them.
 histotical note: this was originally a unit of telegraph signalling
 speed, set at one pulse per second. it was proposed at the
 international telegraph conference of , and named after j.m.e.
 baudot (-), the french engineer who constructed the first
 successful teleprinter.
:baud barf: /bawd barf/ n. the garbage one gets on the monitor
 when using a modem connection with some protocol setting (esp.
 line speed) incorrect, or when someone picks up a voice extension
 on the same line, or when really bad line noise disrupts the
 connection. baud barf is not completely {random}, by the way;
 hackers with a lot of serial-line experience can usually tell
 whether the device at the other end is expecting a higher or lower
 speed than the terminal is set to. *really* experienced ones
 can identify particular speeds.
:baz: /baz/ n. . the third {metasyntactic variable} "suppose we
 have three functions: foo, bar, and baz. foo calls bar, which
 calls baz…." (see also {fum}) . interj. a term of mild
 annoyance. in this usage the term is often drawn out for  or 
 seconds, producing an effect not unlike the bleating of a sheep;
 /baaaaaaz/. . occasionally appended to {foo} to produce
 `foobaz'.
 earlier versions of this lexicon derived `baz' as a stanford
 corruption of {bar}. however, pete samson (compiler of the
 {tmrc} lexicon) reports it was already current when he joined tmrc
 in . he says "it came from `pogo'. albert the alligator,
 when vexed or outraged, would shout `bazz fazz!' or `rowrbazzle!'
 the club layout was said to model the (mythical) new england
 counties of rowrfolk and bassex (rowrbazzle mingled with
 (norfolk/suffolk/middlesex/essex)."
:bboard: /bee'bord/ [contraction of `bulletin board'] n.
 . any electronic bulletin board; esp. used of {bbs} systems
 running on personal micros, less frequently of a usenet
 {newsgroup} (in fact, use of the term for a newsgroup generally
 marks one either as a {newbie} fresh in from the bbs world or as
 a real old-timer predating usenet). . at cmu and other colleges
 with similar facilities, refers to campus-wide electronic bulletin
 boards. . the term `physical bboard' is sometimes used to
 refer to a old-fashioned, non-electronic cork memo board. at cmu,
 it refers to a particular one outside the cs lounge.
 in either of senses  or , the term is usually prefixed by the
 name of the intended board (`the moonlight casino bboard' or
 `market bboard'); however, if the context is clear, the better-read
 bboards may be referred to by name alone, as in (at cmu) "don't
 post for-sale ads on general".
:bbs: /b-b-s/ [abbreviation, `bulletin board system'] n. an electronic
 bulletin board system; that is, a message database where people can
 log in and leave broadcast messages for others grouped (typically)
 into {topic group}s. thousands of local bbs systems are in
 operation throughout the u.s., typically run by amateurs for fun
 out of their homes on ms-dos boxes with a single modem line each.
 fans of usenet and internet or the big commercial timesharing
 bboards such as compuserve and genie tend to consider local bbses
 the low-rent district of the hacker culture, but they serve a
 valuable function by knitting together lots of hackers and users in
 the personal-micro world who would otherwise be unable to exchange
 code at all.
:beam: [from star trek classic's "beam me up, scotty!"] vt. to
 transfer {softcopy} of a file electronically; most often in
 combining forms such as `beam me a copy' or `beam that over to
 his site'. compare {blast}, {snarf}, {blt}.
:beanie key: [mac users] n. see {command key}.
:beep: n.,v. syn. {feep}. this term seems to be preferred among micro
hobbyists.
:beige toaster: n. a macintosh. see {toaster}; compare
{macintrash}, {maggotbox}.
:bells and whistles: [by analogy with the toyboxes on theater
 organs] n. features added to a program or system to make it more
 {flavorful} from a hacker's point of view, without necessarily
 adding to its utility for its primary function. distinguished from
 {chrome}, which is intended to attract users. "now that we've
 got the basic program working, let's go back and add some bells and
 whistles." no one seems to know what distinguishes a bell from a
 whistle.
:bells, whistles, and gongs: n. a standard elaborated form of
 {bells and whistles}; typically said with a pronounced and ironic
 accent on the `gongs'.
:benchmark: [techspeak] n. an inaccurate measure of computer
 performance. "in the computer industry, there are three kinds of
 lies: lies, damn lies, and benchmarks." well-known ones include
 whetstone, dhrystone, rhealstone (see {h}), the gabriel lisp
 benchmarks (see {gabriel}), the specmark suite, and linpack. see
 also {machoflops}, {mips}, {smoke and mirrors}.
:berkeley quality software: adj. (often abbreviated `bqs') term used
 in a pejorative sense to refer to software that was apparently
 created by rather spaced-out hackers late at night to solve some
 unique problem. it usually has nonexistent, incomplete, or
 incorrect documentation, has been tested on at least two examples,
 and core dumps when anyone else attempts to use it. this term was
 frequently applied to early versions of the `dbx()' debugger.
 see also {berzerkeley}.
:berklix: /berk'liks/ n.,adj. [contraction of `berkeley unix'] see
 {bsd}. not used at berkeley itself. may be more common among
 {suit}s attempting to sound like cognoscenti than among hackers,
 who usually just say `bsd'.
:berserking: vi. a {mud} term meaning to gain points *only*
 by killing other players and mobiles (non-player characters).
 hence, a berserker-wizard is a player character that has achieved
 enough points to become a wizard, but only by killing other
 characters. berserking is sometimes frowned upon because of its
 inherently antisocial nature, but some muds have a `berserker
 mode' in which a player becomes *permanently* berserk, can
 never flee from a fight, cannot use magic, gets no score for
 treasure, but does get double kill points. "berserker
 wizards can seriously damage your elf!"
:berzerkeley: /b*r-zer'klee/ [from `berserk', via the name of a
 now-deceased record label] n. humorous distortion of `berkeley'
 used esp. to refer to the practices or products of the
 {bsd} unix hackers. see {software bloat}, {missed'em-five},
 {berkeley quality software}.
 mainstream use of this term in reference to the cultural and
 political peculiarities of uc berkeley as a whole has been reported
 from as far back as the s.
:beta: /bay't*/, /be't*/ or (commonwealth) /bee't*/ n. . in
 the {real world}, software often goes through two stages of
 testing: alpha (in-house) and beta (out-house?). software is said
 to be `in beta'. . anything that is new and experimental is in
 beta. "his girlfriend is in beta" means that he is still testing
 for compatibility and reserving judgment. . beta software is
 notoriously buggy, so `in beta' connotes flakiness.
 historical note: more formally, to beta-test is to test a
 pre-release (potentially unreliable) version of a piece of software
 by making it available to selected customers and users. this term
 derives from early s terminology for product cycle checkpoints,
 first used at ibm but later standard throughout the industry.
 `alpha test' was the unit, module, or component test phase; `beta
 test' was initial system test. these themselves came from earlier
 a- and b-tests for hardware. the a-test was a feasibility and
 manufacturability evaluation done before any commitment to design
 and development. the b-test was a demonstration that the
 engineering model functioned as specified. the c-test
 (corresponding to today's beta) was the b-test performed on early
 samples of the production design.
:bfi: /b-f-i/ n. see {brute force and ignorance}. also
encountered in the variants `bfmi', `brute force and
*massive* ignorance' and `bfbi' `brute force and bloody
ignorance'.
:bible: n. . one of a small number of fundamental source books
such as {knuth} and {k&r}. . the most detailed and
authoritative reference for a particular language, operating
system, or other complex software system.
:bicapitalization: n. the act said to have been performed on
 trademarks (such as {postscript}, next, {news}, visicalc,
 framemaker, tk!solver, easywriter) that have been raised above the
 ruck of common coinage by nonstandard capitalization. too many
 {marketroid} types think this sort of thing is really cute, even
 the ,th time they do it. compare {studlycaps}.
:biff: /bif/ [usenet] n. the most famous {pseudo}, and the
 prototypical {newbie}. articles from biff are characterized by
 all uppercase letters sprinkled liberally with bangs, typos,
 `cute' misspellings (evry budy luvs good old biff cuz he"s a
 this!!!), use (and often misuse) of fragments of {talk mode}
 abbreviations, a long {sig block} (sometimes even a {doubled
 sig}), and unbounded na"ivet'e. biff posts articles using his
 elder brother's vic-. biff's location is a mystery, as his
 articles appear to come from a variety of sites. however,
 {bitnet} seems to be the most frequent origin. the theory that
 biff is a denizen of bitnet is supported by biff's (unfortunately
 invalid) electronic mail address: biff@bit.net.
:biff: /bif/ vt. to notify someone of incoming mail. from the
 bsd utility `biff()', which was in turn named after a
 friendly golden labrador who used to chase frisbees in the halls at
 ucb while .bsd was in development (it had a well-known habit of
 barking whenever the mailman came). no relation to
:big gray wall: n. what faces a {vms} user searching for
 documentation. a full vms kit comes on a pallet, the documentation
 taking up around  feet of shelf space before the addition of
 layered products such as compilers, databases, multivendor
 networking, and programming tools. recent (since vms version )
 dec documentation comes with gray binders; under vms version  the
 binders were orange (`big orange wall'), and under version  they
 were blue. see {vms}. often contracted to `gray wall'.
:big iron: n. large, expensive, ultra-fast computers. used generally
 of {number-crunching} supercomputers such as crays, but can include
 more conventional big commercial ibmish mainframes. term of
 approval; compare {heavy metal}, oppose {dinosaur}.
:big red switch: [ibm] n. the power switch on a computer, esp. the
 `emergency pull' switch on an ibm {mainframe} or the power switch
 on an ibm pc where it really is large and red. "this !@%$%
 {bitty box} is hung again; time to hit the big red switch."
 sources at ibm report that, in tune with the company's passion for
 {tla}s, this is often abbreviated as `brs' (this has also
 become established on fidonet and in the pc {clone} world). it
 is alleged that the emergency pull switch on an ibm / actually
 fired a non-conducting bolt into the main power feed; the brses on
 more recent machines physically drop a block into place so that
 they can't be pushed back in. people get fired for pulling them,
 especially inappropriately (see also {molly-guard}). compare
 {power cycle}, {three-finger salute}, { reset}; see
 also {scram switch}.
:big room, the: n. the extremely large room with the blue ceiling
 and intensely bright light (during the day) or black ceiling with
 lots of tiny night-lights (during the night) found outside all
 computer installations. "he can't come to the phone right now,
 he's somewhere out in the big room."
:big win: n. serendipity. "yes, those two physicists discovered
 high-temperature superconductivity in a batch of ceramic that had
 been prepared incorrectly according to their experimental schedule.
 small mistake; big win!" see {win big}.
:big-endian: [from swift's `gulliver's travels' via the famous
 paper `on holy wars and a plea for peace' by danny cohen,
 usc/isi ien , dated april , ] adj. . describes a computer
 architecture in which, within a given multi-byte numeric
 representation, the most significant byte has the lowest address
 (the word is stored `big-end-first'). most processors,
 including the ibm  family, the {pdp-}, the motorola
 microprocessor families, and most of the various risc designs
 current in mid-, are big-endian. see {little-endian},
 {middle-endian}, {nuxi problem}. . an {{internet address}}
 the wrong way round. most of the world follows the internet
 standard and writes email addresses starting with the name of the
 computer and ending up with the name of the country. in the u.k.
 the joint networking team had decided to do it the other way round
 before the internet domain standard was established; e.g.,
 me@uk.ac.wigan.cs. most gateway sites have {ad-hockery} in
 their mailers to handle this, but can still be confused. in
 particular, the address above could be in the u.k. (domain uk)
 or czechoslovakia (domain cs).
:bignum: /big'nuhm/ [orig. from mit maclisp] n. . [techspeak] a
 multiple-precision computer representation for very large integers.
 more generally, any very large number. "have you ever looked at
 the united states budget? there's bignums for you!"
 . [stanford] in backgammon, large numbers on the dice are called
 `bignums', especially a roll of double fives or double sixes
 (compare {moby}, sense ). see also {el camino bignum}.
 sense  may require some explanation. most computer languages
 provide a kind of data called `integer', but such computer
 integers are usually very limited in size; usually they must be
 smaller than than ^() (,,,) or (on a losing
 {bitty box}) ^() (,). if you want to work with
 numbers larger than that, you have to use floating-point numbers,
 which are usually accurate to only six or seven decimal places.
 computer languages that provide bignums can perform exact
 calculations on very large numbers, such as ! (the factorial
 of , which is  times  times  times … times 
 times ). for example, this value for ! was computed by the
 maclisp system using bignums:
:bigot: n. a person who is religiously attached to a particular
 computer, language, operating system, editor, or other tool (see
 {religious issues}). usually found with a specifier; thus,
 `cray bigot', `its bigot', `apl bigot', `vms bigot',
 `berkeley bigot'. true bigots can be distinguished from mere
 partisans or zealots by the fact that they refuse to learn
 alternatives even when the march of time and/or technology is
 threatening to obsolete the favored tool. it is said "you can
 tell a bigot, but you can't tell him much." compare
 {weenie}.
:bit: [from the mainstream meaning and `binary digit'] n.
 . [techspeak] the unit of information; the amount of information
 obtained by asking a yes-or-no question for which the two outcomes
 are equally probable. . [techspeak] a computational quantity that
 can take on one of two values, such as true and false or  and .
 . a mental flag: a reminder that something should be done
 eventually. "i have a bit set for you." (i haven't seen you for
 a while, and i'm supposed to tell or ask you something.) . more
 generally, a (possibly incorrect) mental state of belief. "i have
 a bit set that says that you were the last guy to hack on emacs."
 (meaning "i think you were the last guy to hack on emacs, and what
 i am about to say is predicated on this, so please stop me if this
 isn't true.")
 "i just need one bit from you" is a polite way of indicating that
 you intend only a short interruption for a question that can
 presumably be answered yes or no.
 a bit is said to be `set' if its value is true or , and
 `reset' or `clear' if its value is false or . one speaks of
 setting and clearing bits. to {toggle} or `invert' a bit is
 to change it, either from  to  or from  to . see also
 {flag}, {trit}, {mode bit}.
 the term `bit' first appeared in print in the computer-science
 sense in , and seems to have been coined by early computer
 scientist john tukey. tukey records that it evolved over a lunch
 table as a handier alternative to `bigit' or `binit'.
:bit bang: n. transmission of data on a serial line, when
 accomplished by rapidly tweaking a single output bit at the
 appropriate times. the technique is a simple
 loop with eight out and shift instruction pairs for each byte.
 input is more interesting. and full duplex (doing input and output
 at the same time) is one way to separate the real hackers from the
 {wannabee}s.
 bit bang was used on certain early models of prime computers,
 presumably when uarts were too expensive, and on archaic z micros
 with a zilog pio but no sio. in an interesting instance of the
 {cycle of reincarnation}, this technique is now () coming
 back into use on some risc architectures because it consumes such
 an infinitesimal part of the processor that it actually makes sense
 not to have a uart.
:bit bashing: n. (alt. `bit diddling' or {bit twiddling}) term
 used to describe any of several kinds of low-level programming
 characterized by manipulation of {bit}, {flag}, {nybble},
 and other smaller-than-character-sized pieces of data; these
 include low-level device control, encryption algorithms, checksum
 and error-correcting codes, hash functions, some flavors of
 graphics programming (see {bitblt}), and assembler/compiler code
 generation. may connote either tedium or a real technical
 challenge (more usually the former). "the command decoding for
 the new tape driver looks pretty solid but the bit-bashing for the
 control registers still has bugs." see also {bit bang},
 {mode bit}.
:bit bucket: n. . the universal data sink (originally, the
 mythical receptacle used to catch bits when they fall off the end
 of a register during a shift instruction). discarded, lost, or
 destroyed data is said to have `gone to the bit bucket'. on
 {{unix}}, often used for {/dev/null}. sometimes amplified as
 `the great bit bucket in the sky'. . the place where all lost
 mail and news messages eventually go. the selection is performed
 according to {finagle's law}; important mail is much more likely
 to end up in the bit bucket than junk mail, which has an almost
 % probability of getting delivered. routing to the bit bucket
 is automatically performed by mail-transfer agents, news systems,
 and the lower layers of the network. . the ideal location for all
 unwanted mail responses: "flames about this article to the bit
 bucket." such a request is guaranteed to overflow one's mailbox
 with flames. . excuse for all mail that has not been sent. "i
 mailed you those figures last week; they must have ended in the bit
 bucket." compare {black hole}.
 this term is used purely in jest. it is based on the fanciful
 notion that bits are objects that are not destroyed but only
 misplaced. this appears to have been a mutation of an earlier term
 `bit box', about which the same legend was current; old-time
 hackers also report that trainees used to be told that when the cpu
 stored bits into memory it was actually pulling them `out of the
 bit box'. see also {chad box}.
 another variant of this legend has it that, as a consequence of the
 `parity preservation law', the number of  bits that go to the bit
 bucket must equal the number of  bits. any imbalance results in
 bits filling up the bit bucket. a qualified computer technician
 can empty a full bit bucket as part of scheduled maintenance.
:bit decay: n. see {bit rot}. people with a physics background
 tend to prefer this one for the analogy with particle decay. see
 also {computron}, {quantum bogodynamics}.
:bit rot: n. also {bit decay}. hypothetical disease the existence
 of which has been deduced from the observation that unused programs
 or features will often stop working after sufficient time has
 passed, even if `nothing has changed'. the theory explains that
 bits decay as if they were radioactive. as time passes, the
 contents of a file or the code in a program will become
 increasingly garbled.
 there actually are physical processes that produce such effects
 (alpha particles generated by trace radionuclides in ceramic chip
 packages, for example, can change the contents of a computer memory
 unpredictably, and various kinds of subtle media failures can
 corrupt files in mass storage), but they are quite rare (and
 computers are built with error-detecting circuitry to compensate
 for them). the notion long favored among hackers that cosmic
 rays are among the causes of such events turns out to be a myth;
 see the {cosmic rays} entry for details.
 the term {software rot} is almost synonymous. software rot is
 the effect, bit rot the notional cause.
:bit twiddling: n. . (pejorative) an exercise in tuning (see
 {tune}) in which incredible amounts of time and effort go to
 produce little noticeable improvement, often with the result that
 the code has become incomprehensible. . aimless small
 modification to a program, esp. for some pointless goal.
 . approx. syn. for {bit bashing}; esp. used for the act of
 frobbing the device control register of a peripheral in an attempt
 to get it back to a known state.
:bit-paired keyboard: n. obs. (alt. `bit-shift keyboard') a
 non-standard keyboard layout that seems to have originated with the
 teletype asr- and remained common for several years on early
 computer equipment. the asr- was a mechanical device (see
 {eou}), so the only way to generate the character codes from
 keystrokes was by some physical linkage. the design of the asr-
 assigned each character key a basic pattern that could be modified
 by flipping bits if the shift or the ctrl key was pressed. in
 order to avoid making the thing more of a rube goldberg kluge than
 it already was, the design had to group characters that shared the
 same basic bit pattern on one key.
 looking at the ascii chart, we find:
high low bits
bits          
 this is why the characters !"#$%&'() appear where they do on a
 teletype (thankfully, they didn't use shift- for space). this was
 *not* the weirdest variant of the {qwerty} layout widely
 seen, by the way; that prize should probably go to one of several
 (differing) arrangements on ibm's even clunkier  and  card
 punches.
 when electronic terminals became popular, in the early s, there
 was no agreement in the industry over how the keyboards should be
 laid out. some vendors opted to emulate the teletype keyboard,
 while others used the flexibility of electronic circuitry to make
 their product look like an office typewriter. these alternatives
 became known as `bit-paired' and `typewriter-paired' keyboards. to
 a hacker, the bit-paired keyboard seemed far more logical —- and
 because most hackers in those days had never learned to touch-type,
 there was little pressure from the pioneering users to adapt
 keyboards to the typewriter standard.
 the doom of the bit-paired keyboard was the large-scale
 introduction of the computer terminal into the normal office
 environment, where out-and-out technophobes were expected to use
 the equipment. the `typewriter-paired' standard became universal,
 `bit-paired' hardware was quickly junked or relegated to dusty
 corners, and both terms passed into disuse.
:bitblt: /bit'blit/ n. [from {blt}, q.v.] . any of a family
 of closely related algorithms for moving and copying rectangles of
 bits between main and display memory on a bit-mapped device, or
 between two areas of either main or display memory (the requirement
 to do the {right thing} in the case of overlapping source and
 destination rectangles is what makes bitblt tricky). . synonym
 for {blit} or {blt}. both uses are borderline techspeak.
:bitnet: /bit'net/ [acronym: because it's time network] n.
 everybody's least favorite piece of the network (see {network,
 the}). the bitnet hosts are a collection of ibm dinosaurs and
 vaxen (the latter with lobotomized comm hardware) that communicate
 using -character {{ebcdic}} card images (see {eighty-column
 mind}); thus, they tend to mangle the headers and text of
 third-party traffic from the rest of the ascii/rfc- world with
 annoying regularity. bitnet is also notorious as the apparent home
 of {biff}.
:bits: n.pl. . information. examples: "i need some bits about file
 formats." ("i need to know about file formats.") compare {core
 dump}, sense . . machine-readable representation of a document,
 specifically as contrasted with paper: "i have only a photocopy
 of the jargon file; does anyone know where i can get the bits?".
 see {softcopy}, {source of all good bits} see also {bit}.
:bitty box: /bit'ee boks/ n. . a computer sufficiently small,
 primitive, or incapable as to cause a hacker acute claustrophobia
 at the thought of developing software on or for it. especially
 used of small, obsolescent, single-tasking-only personal machines
 such as the atari , osborne, sinclair, vic-, trs-, or
 ibm pc. . [pejorative] more generally, the opposite of `real
 computer' (see {get a real computer!}). see also {mess-dos},
 {toaster}, and {toy}.
:bixie: /bik'see/ n. variant {emoticon}s used on bix (the byte
 information exchange). the {smiley} bixie is <@_@>, apparently
 intending to represent two cartoon eyes and a mouth. a few others
 have been reported.
:black art: n. a collection of arcane, unpublished, and (by
 implication) mostly ad-hoc techniques developed for a particular
 application or systems area (compare {black magic}). vlsi design
 and compiler code optimization were (in their beginnings)
 considered classic examples of black art; as theory developed they
 became {deep magic}, and once standard textbooks had been written,
 became merely {heavy wizardry}. the huge proliferation of formal
 and informal channels for spreading around new computer-related
 technologies during the last twenty years has made both the term
 `black art' and what it describes less common than formerly. see
 also {voodoo programming}.
:black hole: n. when a piece of email or netnews disappears
 mysteriously between its origin and destination sites (that is,
 without returning a {bounce message}) it is commonly said to have
 `fallen into a black hole'. "i think there's a black hole at
 foovax!" conveys suspicion that site foovax has been dropping
 a lot of stuff on the floor lately (see {drop on the floor}).
 the implied metaphor of email as interstellar travel is interesting
 in itself. compare {bit bucket}.
:black magic: n. a technique that works, though nobody really
 understands why. more obscure than {voodoo programming}, which
 may be done by cookbook. compare also {black art}, {deep
 magic}, and {magic number} (sense ).
:blargh: /blarg/ [mit] n. the opposite of {ping}, sense ; an
 exclamation indicating that one has absorbed or is emitting a
 quantum of unhappiness. less common than {ping}.
:blast: . vt.,n. synonym for {blt}, used esp. for large data
 sends over a network or comm line. opposite of {snarf}. usage:
 uncommon. the variant `blat' has been reported. . vt.
 [hp/apollo] synonymous with {nuke} (sense ). sometimes the
 message `unable to kill all processes. blast them (y/n)?' would
 appear in the command window upon logout.
:blat: n. . syn. {blast}, sense . . see {thud}.
:bletch: /blech/ [from yiddish/german `brechen', to vomit, poss.
 via comic-strip exclamation `blech'] interj. term of disgust.
 often used in "ugh, bletch". compare {barf}.
:bletcherous: /blech'*-r*s/ adj. disgusting in design or function;
 esthetically unappealing. this word is seldom used of people.
 "this keyboard is bletcherous!" (perhaps the keys don't work very
 well, or are misplaced.) see {losing}, {cretinous},
 {bagbiter}, {bogus}, and {random}. the term {bletcherous}
 applies to the esthetics of the thing so described; similarly for
 {cretinous}. by contrast, something that is `losing' or
 `bagbiting' may be failing to meet objective criteria. see also
 {bogus} and {random}, which have richer and wider shades of
 meaning than any of the above.
:blinkenlights: /blink'*n-li:tz/ n. front-panel diagnostic lights
 on a computer, esp. a {dinosaur}. derives from the last word
 of the famous blackletter-gothic sign in mangled pseudo-german that
 once graced about half the computer rooms in the english-speaking
 world. one version ran in its entirety as follows:
 achtung! alles lookenspeepers! das
 computermachine ist nicht fuer gefingerpoken und mittengrabben.
 ist easy schnappen der springenwerk, blowenfusen und poppencorken
 mit spitzensparken. ist nicht fuer gewerken bei das dumpkopfen.
 das rubbernecken sichtseeren keepen das cotten-pickenen hans in das
 pockets muss; relaxen und watchen das blinkenlichten.
 this silliness dates back at least as far as  at stanford
 university and had already gone international by the early s,
 when it was reported at london university's atlas computing site.
 there are several variants of it in circulation, some of which
 actually do end with the word `blinkenlights'.
 in an amusing example of turnabout-is-fair-play, german hackers
 have developed their own versions of the blinkenlights poster in
 fractured english, one of which is reproduced here:
 this room is fullfilled mit special electronische equippment.
 fingergrabbing and pressing the cnoeppkes from the computers is
 allowed for die experts only! so all the "lefthanders" stay away
 and do not disturben the brainstorming von here working
 intelligencies. otherwise you will be out thrown and kicked
 anderswhere! also: please keep still and only watchen astaunished
 the blinkenlights.
 see also {geef}.
:blit: /blit/ vt. . to copy a large array of bits from one part
 of a computer's memory to another part, particularly when the
 memory is being used to determine what is shown on a display
 screen. "the storage allocator picks through the table and copies
 the good parts up into high memory, and then blits it all back
 down again." see {bitblt}, {blt}, {dd}, {cat},
 {blast}, {snarf}. more generally, to perform some operation
 (such as toggling) on a large array of bits while moving them.
 . all-capitalized as `blit': an early experimental bit-mapped
 terminal designed by rob pike at bell labs, later commercialized as
 the at&t . (the folk etymology from `bell labs intelligent
 terminal' is incorrect.)
:blitter: /blit'r/ n. a special-purpose chip or hardware system
 built to perform {blit} operations, esp. used for fast
 implementation of bit-mapped graphics. the commodore amiga and a
 few other micros have these, but in  the trend is away from
 them (however, see {cycle of reincarnation}). syn. {raster
 blaster}.
:blivet: /bliv'*t/ [allegedly from a world war ii military term
 meaning "ten pounds of manure in a five-pound bag"] n. . an
 intractable problem. . a crucial piece of hardware that can't be
 fixed or replaced if it breaks. . a tool that has been hacked
 over by so many incompetent programmers that it has become an
 unmaintainable tissue of hacks. . an out-of-control but
 unkillable development effort. . an embarrassing bug that pops up
 during a customer demo.
 this term has other meanings in other technical cultures; among
 experimental physicists and hardware engineers of various kinds it
 seems to mean any random object of unknown purpose (similar to
 hackish use of {frob}). it has also been used to describe an
 amusing trick-the-eye drawing resembling a three-pronged fork that
 appears to depict a three-dimensional object until one realizes
 that the parts fit together in an impossible way.
:blob: [acronym, binary large object] n. used by database people to
refer to any random large block of bits which needs to be stored in
a database, such as a picture or sound file. the essential point
about a blob is that it's an object you can't interpret within the
database itself.
:block: [from process scheduling terminology in os theory] . vi.
to delay or sit idle while waiting for something. "we're blocking
until everyone gets here." compare {busy-wait}. . `block
on' vt. to block, waiting for (something). "lunch is blocked on
phil's arrival."
:block transfer computations: n. from the television series
"dr. who", in which it referred to computations so fiendishly
subtle and complex that they could not be performed by machines.
used to refer to any task that should be expressible as an
algorithm in theory, but isn't.
:blow an eprom: /bloh *n ee'prom/ v. (alt. `blast an eprom',
 `burn an eprom') to program a read-only memory, e.g. for use
 with an embedded system. this term arises because the programming
 process for the programmable read-only memories (proms) that
 preceded present-day erasable programmable read-only memories
 (eproms) involved intentionally blowing tiny electrical fuses on
 the chip. thus, one was said to `blow' (or `blast') a prom, and
 the terminology carried over even though the write process on
 eproms is nondestructive.
:blow away: vt. to remove (files and directories) from permanent
storage, generally by accident. "he reformatted the wrong
partition and blew away last night's netnews." oppose {nuke}.
:blow out: vi. of software, to fail spectacularly; almost as
serious as {crash and burn}. see {blow past}, {blow up},
{die horribly}.
:blow past: vt. to {blow out} despite a safeguard. "the server blew
 past the k reserve buffer."
:blow up: vi. . [scientific computation] to become unstable. suggests
 that the computation is diverging so rapidly that it will soon
 overflow or at least go {nonlinear}. . syn. {blow out}.
:blt: /b-l-t/, /bl*t/ or (rarely) /belt/ n.,vt. synonym for
 {blit}. this is the original form of {blit} and the ancestor
 of {bitblt}. it referred to any large bit-field copy or move
 operation (one resource-intensive memory-shuffling operation done
 on pre-paged versions of its, waits, and tops- was sardonically
 referred to as `the big blt'). the jargon usage has outlasted the
 {pdp-} block transfer instruction from which {blt} derives;
 nowadays, the assembler mnemonic {blt} almost always means
 `branch if less than zero'.
:blue book: n. . informal name for one of the three standard
 references on the page-layout and graphics-control language
 {postscript} (`postscript language tutorial and cookbook',
 adobe systems, addison-wesley , qa..pp, isbn
 ---); the other two official guides are known as the
 {green book}, the {red book}, and the {white book} (sense
 ). . informal name for one of the three standard references on
 smalltalk: `smalltalk-: the language and its
 implementation', david robson, addison-wesley , qa..sg,
 isbn --- (this is also associated with green and red
 books). . any of the  standards issued by the ccitt's
 ninth plenary assembly. until now, they have changed color each
 review cycle ( was {red book},  would be {green
 book}); however, it is rumored that this convention is going to be
 dropped before . these include, among other things, the
 x. email spec and the group  through  fax standards. see also
 {{book titles}}.
:blue glue: [ibm] n. ibm's sna (systems network architecture), an
 incredibly {losing} and {bletcherous} communications protocol
 widely favored at commercial shops that don't know any better. the
 official ibm definition is "that which binds blue boxes
 together." see {fear and loathing}. it may not be irrelevant
 that {blue glue} is the trade name of a m product that is
 commonly used to hold down the carpet squares to the removable
 panel floors common in {dinosaur pen}s. a correspondent at
 u. minn. reports that the cs department there has about  bottles
 of the stuff hanging about, so they often refer to any messy work
 to be done as `using the blue glue'.
:blue goo: n. term for `police' {nanobot}s intended to prevent
 {gray goo}, denature hazardous waste, destroy pollution, put
 ozone back into the stratosphere, prevent halitosis, and promote
 truth, justice, and the american way, etc. see
 {{nanotechnology}}.
:blue wire: [ibm] n. patch wires added to circuit boards at the factory to
 correct design or fabrication problems. this may be necessary if
 there hasn't been time to design and qualify another board version.
 compare {purple wire}, {red wire}, {yellow wire}.
:blurgle: /bler'gl/ [great britain] n. spoken {metasyntactic
 variable}, to indicate some text which is obvious from context, or
 which is already known. if several words are to be replaced,
 blurgle may well be doubled or trebled. "to look for something in
 several files use `grep string blurgle blurgle'." in each case,
 "blurgle blurgle" would be understood to be replaced by the file
 you wished to search. compare {mumble}, sense .
:bnf: /b-n-f/ n. . [techspeak] acronym for `backus-naur form', a
 metasyntactic notation used to specify the syntax of programming
 languages, command sets, and the like. widely used for language
 descriptions but seldom documented anywhere, so that it must
 usually be learned by osmosis from other hackers. consider this
 bnf for a u.s. postal address:
 <postal-address> ::= <name-part> <street-address> <zip-part>
 <personal-part> ::= <name> | <initial> "."
 <name-part> ::= <personal-part> <last-name> [<jr-part>] <eol>
 | <personal-part> <name-part>
 <street-address> ::= [<apt>] <house-num> <street-name> <eol>
 <zip-part> ::= <town-name> "," <state-code> <zip-code> <eol>
 this translates into english as: "a postal-address consists of a
 name-part, followed by a street-address part, followed by a
 zip-code part. a personal-part consists of either a first name or
 an initial followed by a dot. a name-part consists of either: a
 personal-part followed by a last name followed by an optional
 `jr-part' (jr., sr., or dynastic number) and end-of-line, or a
 personal part followed by a name part (this rule illustrates the
 use of recursion in bnfs, covering the case of people who use
 multiple first and middle names and/or initials). a street address
 consists of an optional apartment specifier, followed by a street
 number, followed by a street name. a zip-part consists of a
 town-name, followed by a comma, followed by a state code, followed
 by a zip-code followed by an end-of-line." note that many things
 (such as the format of a personal-part, apartment specifier, or
 zip-code) are left unspecified. these are presumed to be obvious
 from context or detailed somewhere nearby. see also {parse}.
 . the term is also used loosely for any number of variants and
 extensions, possibly containing some or all of the {regexp}
 wildcards such as `*' or `+'. in fact the example above
 isn't the pure form invented for the algol- report; it uses
 `[]', which was introduced a few years later in ibm's pl/i
 definition but is now universally recognized. . in
 {{science-fiction fandom}}, bnf means `big-name fan'
 (someone famous or notorious). years ago a fan started handing out
 black-on-green bnf buttons at sf conventions; this confused the
 hacker contingent terribly.
:boa: [ibm] n. any one of the fat cables that lurk under the floor
 in a {dinosaur pen}. possibly so called because they display a
 ferocious life of their own when you try to lay them straight and
 flat after they have been coiled for some time. it is rumored
 within ibm that channel cables for the  are limited to  feet
 because beyond that length the boas get dangerous —- and it is
 worth noting that one of the major cable makers uses the trademark
 `anaconda'.
:board: n. . in-context synonym for {bboard}; sometimes used
 even for usenet newsgroups. . an electronic circuit board
 (compare {card}).
:boat anchor: n. . like {doorstop} but more severe; implies that
 the offending hardware is irreversibly dead or useless. "that was
 a working motherboard once. one lightning strike later, instant
 boat anchor!" . a person who just takes up space.
:bof: /b-o-f/ or /bof/ n. abbreviation for the phrase "birds
 of a feather" (flocking together), an informal discussion group
 and/or bull session scheduled on a conference program. it is not
 clear where or when this term originated, but it is now associated
 with the usenix conferences for unix techies and was already
 established there by . it was used earlier than that at decus
 conferences, and is reported to have been common at share meetings
 as far back as the early s.
:bogo-sort: /boh`goh-sort'/ n. (var. `stupid-sort') the
 archetypical perversely awful algorithm (as opposed to {bubble
 sort}, which is merely the generic *bad* algorithm).
 bogo-sort is equivalent to repeatedly throwing a deck of cards in
 the air, picking them up at random, and then testing whether they
 are in order. it serves as a sort of canonical example of
 awfulness. looking at a program and seeing a dumb algorithm, one
 might say "oh, i see, this program uses bogo-sort." compare
 {bogus}, {brute force}.
:bogometer: /boh-gom'-*t-er/ n. see {bogosity}. compare the
 `wankometer' described in the {wank} entry; see also
 {bogus}.
:bogon: /boh'gon/ [by analogy with proton/electron/neutron, but
 doubtless reinforced after  by the similarity to douglas
 adams's `vogons'; see the bibliography in {appendix c}] n.
 . the elementary particle of bogosity (see {quantum
 bogodynamics}). for instance, "the ethernet is emitting bogons
 again" means that it is broken or acting in an erratic or bogus
 fashion. . a query packet sent from a tcp/ip domain resolver to a
 root server, having the reply bit set instead of the query bit.
 . any bogus or incorrectly formed packet sent on a network. . by
 synecdoche, used to refer to any bogus thing, as in "i'd like to
 go to lunch with you but i've got to go to the weekly staff
 bogon". . a person who is bogus or who says bogus things. this
 was historically the original usage, but has been overtaken by its
 derivative senses —. see also {bogosity}, {bogus};
 compare {psyton}, {fat electrons}, {magic smoke}.
 the bogon has become the type case for a whole bestiary of nonce
 particle names, including the `clutron' or `cluon' (indivisible
 particle of cluefulness, obviously the antiparticle of the bogon)
 and the futon (elementary particle of {randomness}). these are
 not so much live usages in themselves as examples of a live
 meta-usage: that is, it has become a standard joke or linguistic
 maneuver to "explain" otherwise mysterious circumstances by inventing
 nonce particle names. and these imply nonce particle theories, with
 all their dignity or lack thereof (we might note *parenthetically* that
 this is a generalization from "(bogus particle) theories" to "bogus
 (particle theories)"!). perhaps such particles are the modern-day
 equivalents of trolls and wood-nymphs as standard starting-points
 around which to construct explanatory myths. of course, playing on
 an existing word (as in the `futon') yields additional flavor.
 compare {magic smoke}.
:bogon filter: /boh'gon fil'tr/ n. any device, software or hardware,
that limits or suppresses the flow and/or emission of bogons.
"engineering hacked a bogon filter between the cray and
the vaxen, and now we're getting fewer dropped packets." see
also {bogosity}, {bogus}.
:bogon flux: /boh'gon fluhks/ n. a measure of a supposed field of
{bogosity} emitted by a speaker, measured by a {bogometer};
as a speaker starts to wander into increasing bogosity a listener
might say "warning, warning, bogon flux is rising". see
{quantum bogodynamics}.
:bogosity: /boh-go's*-tee/ n. . the degree to which something is
 {bogus}. at cmu, bogosity is measured with a {bogometer}; in
 a seminar, when a speaker says something bogus, a listener might
 raise his hand and say "my bogometer just triggered". more
 extremely, "you just pinned my bogometer" means you just said or
 did something so outrageously bogus that it is off the scale,
 pinning the bogometer needle at the highest possible reading (one
 might also say "you just redlined my bogometer"). the
 agreed-upon unit of bogosity is the microlenat /mi:k`roh-len'*t/
 (ul). the consensus is that this is the largest unit practical
 for everyday use. . the potential field generated by a {bogon
 flux}; see {quantum bogodynamics}. see also {bogon flux},
 {bogon filter}, {bogus}.
 historical note: the microlenat was invented as an attack against
 noted computer scientist doug lenat by a {tenured graduate
 student}. doug had failed the student on an important exam for
 giving only "ai is bogus" as his answer to the questions. the
 slur is generally considered unmerited, but it has become a running
 gag nevertheless. some of doug's friends argue that *of
 course* a microlenat is bogus, since it is only one millionth of a
 lenat. others have suggested that the unit should be redesignated
 after the grad student, as the microreid.
:bogotify: /boh-go't*-fi:/ vt. to make or become bogus. a
 program that has been changed so many times as to become completely
 disorganized has become bogotified. if you tighten a nut too hard
 and strip the threads on the bolt, the bolt has become bogotified
 and you had better not use it any more. this coinage led to the
 notional `autobogotiphobia' defined as `the fear of becoming
 bogotified'; but is not clear that the latter has ever been
 `live' jargon rather than a self-conscious joke in jargon about
 jargon. see also {bogosity}, {bogus}.
:bogue out: /bohg owt/ vi. to become bogus, suddenly and
 unexpectedly. "his talk was relatively sane until somebody asked
 him a trick question; then he bogued out and did nothing but
 {flame} afterwards." see also {bogosity}, {bogus}.
:bogus: adj. . non-functional. "your patches are bogus."
 . useless. "opcon is a bogus program." . false. "your
 arguments are bogus." . incorrect. "that algorithm is bogus."
 . unbelievable. "you claim to have solved the halting problem
 for turing machines? that's totally bogus." . silly. "stop
 writing those bogus sagas."
 astrology is bogus. so is a bolt that is obviously about to break.
 so is someone who makes blatantly false claims to have solved a
 scientific problem. (this word seems to have some, but not all, of
 the connotations of {random} —- mostly the negative ones.)
 it is claimed that `bogus' was originally used in the hackish sense
 at princeton in the late s. it was spread to cmu and yale by
 michael shamos, a migratory princeton alumnus. a glossary of bogus
 words was compiled at yale when the word was first popularized (see
 {autobogotiphobia} under {bogotify}). the word spread into
 hackerdom from cmu and mit. by the early s it was also
 current in something like the hackish sense in west coast teen
 slang, and it had gone mainstream by . a correspondent from
 cambridge reports, by contrast, that these uses of `bogus' grate on
 british nerves; in britain the word means, rather specifically,
 `counterfeit', as in "a bogus -pound note".
:bohr bug: /bohr buhg/ [from quantum physics] n. a repeatable
 {bug}; one that manifests reliably under a possibly unknown but
 well-defined set of conditions. antonym of {heisenbug}; see also
 {mandelbug}, {schroedinbug}.
:boink: /boynk/ [usenet: ascribed there to the tv series
 "cheers" and "moonlighting"] . to have sex with;
 compare {bounce}, sense . (this is mainstream slang.) in
 commonwealth hackish the variant `bonk' is more common. . after
 the original peter korn `boinkon' {usenet} parties, used for
 almost any net social gathering, e.g., miniboink, a small boink
 held by nancy gillett in ; minniboink, a boinkcon in minnesota
 in ; humpdayboinks, wednesday get-togethers held in the san
 francisco bay area. compare {@-party}. . var of `bonk';
 see {bonk/oif}.
:bomb: . v. general synonym for {crash} (sense ) except that
 it is not used as a noun; esp. used of software or os failures.
 "don't run empire with less than k stack, it'll bomb."
 . n.,v. atari st and macintosh equivalents of a unix `panic' or
 amiga {guru} (sense ), where icons of little black-powder bombs
 or mushroom clouds are displayed, indicating that the system has
 died. on the mac, this may be accompanied by a decimal (or
 occasionally hexadecimal) number indicating what went wrong,
 similar to the amiga {guru meditation} number. {{ms-dos}}
 machines tend to get {locked up} in this situation.
:bondage-and-discipline language: a language (such as pascal, ada,
 apl, or prolog) that, though ostensibly general-purpose, is
 designed so as to enforce an author's theory of `right
 programming' even though said theory is demonstrably inadequate for
 systems hacking or even vanilla general-purpose programming. often
 abbreviated `b&d'; thus, one may speak of things "having the
 b&d nature". see {{pascal}}; oppose {languages of choice}.
:bonk/oif: /bonk/, /oyf/ interj. in the {mud} community, it has
 become traditional to express pique or censure by `bonking' the
 offending person. there is a convention that one should
 acknowledge a bonk by saying `oif!' and a myth to the effect that
 failing to do so upsets the cosmic bonk/oif balance, causing much
 trouble in the universe. some muds have implemented special
 commands for bonking and oifing. see also {talk mode},
 {posing}.
:book titles:: there is a tradition in hackerdom of informally
 tagging important textbooks and standards documents with the
 dominant color of their covers or with some other conspicuous
 feature of the cover. many of these are described in this lexicon
 under their own entries. see {aluminum book}, {blue book},
 {cinderella book}, {devil book}, {dragon book}, {green
 book}, {orange book}, {pink-shirt book}, {purple book},
 {red book}, {silver book}, {white book}, {wizard book},
 {yellow book}, and {bible}; see also {rainbow
 series}.
:boot: [techspeak; from `by one's bootstraps'] v.,n. to load and
 initialize the operating system on a machine. this usage is no
 longer jargon (having passed into techspeak) but has given rise to
 some derivatives that are still jargon.
 the derivative `reboot' implies that the machine hasn't been
 down for long, or that the boot is a {bounce} intended to clear
 some state of {wedgitude}. this is sometimes used of human
 thought processes, as in the following exchange: "you've lost
 me." "ok, reboot. here's the theory…."
 this term is also found in the variants `cold boot' (from
 power-off condition) and `warm boot' (with the cpu and all
 devices already powered up, as after a hardware reset or software
 crash).
 another variant: `soft boot', reinitialization of only part of a
 system, under control of other software still running: "if
 you're running the {mess-dos} emulator, control-alt-insert will
 cause a soft-boot of the emulator, while leaving the rest of the
 system running."
 opposed to this there is `hard boot', which connotes hostility
 towards or frustration with the machine being booted: "i'll have
 to hard-boot this losing sun." "i recommend booting it
 hard." one often hard-boots by performing a {power cycle}.
 historical note: this term derives from `bootstrap loader', a short
 program that was read in from cards or paper tape, or toggled in
 from the front panel switches. this program was always very short
 (great efforts were expended on making it short in order to
 minimize the labor and chance of error involved in toggling it in),
 but was just smart enough to read in a slightly more complex
 program (usually from a card or paper tape reader), to which it
 handed control; this program in turn was smart enough to read the
 application or operating system from a magnetic tape drive or disk
 drive. thus, in successive steps, the computer `pulled itself up
 by its bootstraps' to a useful operating state. nowadays the
 bootstrap is usually found in rom or eprom, and reads the first
 stage in from a fixed location on the disk, called the `boot
 block'. when this program gains control, it is powerful enough to
 load the actual os and hand control over to it.
:bottom feeder: n. syn. for {slopsucker} derived from the
 fisherman's and naturalist's term for finny creatures who subsist
 on the primordial ooze.
:bottom-up implementation: n. hackish opposite of the techspeak term
 `top-down design'. it is now received wisdom in most
 programming cultures that it is best to design from higher levels
 of abstraction down to lower, specifying sequences of action in
 increasing detail until you get to actual code. hackers often find
 (especially in exploratory designs that cannot be closely
 specified in advance) that it works best to *build* things in
 the opposite order, by writing and testing a clean set of primitive
 operations and then knitting them together.
:bounce: v. . [perhaps from the image of a thrown ball bouncing
 off a wall] an electronic mail message that is undeliverable and
 returns an error notification to the sender is said to `bounce'.
 see also {bounce message}. . [stanford] to play volleyball.
 at the now-demolished {d. c. power lab} building used by the
 stanford ai lab in the s, there was a volleyball court on the
 front lawn. from  p.m. to  p.m. was the scheduled
 maintenance time for the computer, so every afternoon at  the
 computer would become unavailable, and over the intercom a voice
 would cry, "now hear this: bounce, bounce!" followed by brian
 mccune loudly bouncing a volleyball on the floor outside the
 offices of known volleyballers. . to engage in sexual
 intercourse; prob. from the expression `bouncing the mattress',
 but influenced by roo's psychosexually loaded "try bouncing me,
 tigger!" from the "winnie-the-pooh" books. compare
 {boink}. . to casually reboot a system in order to clear up a
 transient problem. reported primarily among {vms} users.
 . [ibm] to {power cycle} a peripheral in order to reset it.
:bounce message: [unix] n. notification message returned to sender by
 a site unable to relay {email} to the intended {{internet address}}
 recipient or the next link in a {bang path} (see {bounce}).
 reasons might include a nonexistent or misspelled username or a
 {down} relay site. bounce messages can themselves fail, with
 occasionally ugly results; see {sorcerer's apprentice mode}.
 the terms `bounce mail' and `barfmail' are also common.
:boustrophedon: [from a greek word for turning like an ox while
 plowing] n. an ancient method of writing using alternate
 left-to-right and right-to-left lines. this term is actually
 philologists' techspeak and typesetter's jargon. erudite hackers
 use it for an optimization performed by some computer typesetting
 software (notably unix `troff()'). the adverbial form
 `boustrophedonically' is also found (hackers purely love
 constructions like this).
:box: n. . a computer; esp. in the construction `foo box'
 where foo is some functional qualifier, like `graphics', or
 the name of an os (thus, `unix box', `ms-dos box', etc.) "we
 preprocess the data on unix boxes before handing it up to the
 mainframe." . [within ibm] without qualification but within an
 sna-using site, this refers specifically to an ibm front-end
 processor or fep /f-e-p/. an fep is a small computer necessary
 to enable an ibm {mainframe} to communicate beyond the limits of
 the {dinosaur pen}. typically used in expressions like the cry
 that goes up when an sna network goes down: "looks like the
 {box} has fallen over." (see {fall over}.) see also
 {ibm}, {fear and loathing}, {fepped out}, {blue
 glue}.
:boxed comments: n. comments (explanatory notes attached to program
 instructions) that occupy several lines by themselves; so called
 because in assembler and c code they are often surrounded by a box
 in a style something like this:
* this is a boxed comment in c style
 common variants of this style omit the asterisks in column  or add
 a matching row of asterisks closing the right side of the box. the
 sparest variant omits all but the comment delimiters themselves;
 the `box' is implied. oppose {winged comments}.
:boxen: /bok'sn/ [by analogy with {vaxen}] pl.n. fanciful
plural of {box} often encountered in the phrase `unix boxen',
used to describe commodity {{unix}} hardware. the connotation is
that any two unix boxen are interchangeable.
:boxology: /bok-sol'*-jee/ n. syn. {ascii art}. this term
implies a more restricted domain, that of box-and-arrow drawings.
"his report has a lot of boxology in it." compare
{macrology}.
:bozotic: /boh-zoh'tik/ or /boh-zo'tik/ [from the name of a tv
 clown even more losing than ronald mcdonald] adj. resembling or
 having the quality of a bozo; that is, clownish, ludicrously wrong,
 unintentionally humorous. compare {wonky}, {demented}. note
 that the noun `bozo' occurs in slang, but the mainstream
 adjectival form would be `bozo-like' or (in new england)
 `bozoish'.
:bqs: /b-q-s/ adj. syn. {berkeley quality software}.
:brain dump: n. the act of telling someone everything one knows
 about a particular topic or project. typically used when someone
 is going to let a new party maintain a piece of code. conceptually
 analogous to an operating system {core dump} in that it saves a
 lot of useful {state} before an exit. "you'll have to
 give me a brain dump on foobar before you start your new job at
 hackercorp." see {core dump} (sense ). at sun, this is also
 known as `toi' (transfer of information).
:brain fart: n. the actual result of a {braino}, as opposed to
 the mental glitch which is the braino itself. e.g. typing
 `dir' on a unix box after a session with dos.
:brain-damaged: . [generalization of `honeywell brain damage'
 (hbd), a theoretical disease invented to explain certain utter
 cretinisms in honeywell {{multics}}] adj. obviously wrong;
 {cretinous}; {demented}. there is an implication that the
 person responsible must have suffered brain damage, because he
 should have known better. calling something brain-damaged is
 really bad; it also implies it is unusable, and that its failure to
 work is due to poor design rather than some accident. "only six
 monocase characters per file name? now *that's*
 brain-damaged!" . [esp. in the mac world] may refer to free
 demonstration software that has been deliberately crippled in some
 way so as not to compete with the commercial product it is
 intended to sell. syn. {crippleware}.
:brain-dead: adj. brain-damaged in the extreme. it tends to imply
 terminal design failure rather than malfunction or simple
 stupidity. "this comm program doesn't know how to send a break
 —- how brain-dead!"
:braino: /bray'no/ n. syn. for {thinko}. see also {brain
 fart}.
:branch to fishkill: [ibm: from the location of one of the
 corporation's facilities] n. any unexpected jump in a program that
 produces catastrophic or just plain weird results. see {jump
 off into never-never land}, {hyperspace}.
:brand brand brand: n. humorous catch-phrase from {bartlemud}s, in
which players were described carrying a list of objects, the most
common of which would usually be a brand. often used as a joke in
{talk mode} as in "fred the wizard is here, carrying brand ruby
brand brand brand kettle broadsword flamethrower". a brand is a
torch, of course; one burns up a lot of those exploring dungeons.
prob. influenced by the famous monty python "spam" skit.
:bread crumbs: n. debugging statements inserted into a program that
 emit output or log indicators of the program's {state} to a file
 so you can see where it dies, or pin down the cause of surprising
 behavior. the term is probably a reference to the hansel and gretel
 story from the brothers grimm; in several variants, a character
 leaves a trail of breadcrumbs so as not to get lost in the
 woods.
:break: . vt. to cause to be broken (in any sense). "your latest
 patch to the editor broke the paragraph commands." . v. (of a
 program) to stop temporarily, so that it may debugged. the place
 where it stops is a `breakpoint'. . [techspeak] vi. to send an
 rs- break (two character widths of line high) over a serial comm
 line. . [unix] vi. to strike whatever key currently causes the
 tty driver to send sigint to the current process. normally, break
 (sense ) or delete does this. . `break break' may be said to
 interrupt a conversation (this is an example of verb doubling).
 this usage comes from radio communications, which in turn probably
 came from landline telegraph/teleprinter usage, as badly abused in
 the citizen's band craze a few years ago.
:break-even point: n. in the process of implementing a new computer
 language, the point at which the language is sufficiently effective
 that one can implement the language in itself. that is, for a new
 language called, hypothetically, foogol, one has reached break-even
 when one can write a demonstration compiler for foogol in foogol,
 discard the original implementation language, and thereafter use
 older versions of foogol to develop newer ones. this is an
 important milestone; see {mftl}.
:breath-of-life packet: [xerox parc] n. an ethernet packet that
 contained bootstrap (see {boot}) code, periodically sent out
 from a working computer to infuse the `breath of life' into any
 computer on the network that had happened to crash. machines
 depending on such packets have sufficient hardware or firmware code
 to wait for (or request) such a packet during the reboot process.
 see also {dickless workstation}.
:breedle: n. see {feep}.
:bring x to its knees: v. to present a machine, operating system,
 piece of software, or algorithm with a load so extreme or
 {pathological} that it grinds to a halt. "to bring a microvax
 to its knees, try twenty users running {vi} —- or four running
 {emacs}." compare {hog}.
:brittle: adj. said of software that is functional but easily broken
 by changes in operating environment or configuration, or by any
 minor tweak to the software itself. also, any system that
 responds inappropriately and disastrously to expected external
 stimuli; e.g., a file system that is usually totally scrambled by a
 power failure is said to be brittle. this term is often used to
 describe the results of a research effort that were never intended
 to be robust, but it can be applied to commercially developed
 software, which displays the quality far more often than it ought
 to. oppose {robust}.
:broadcast storm: n. an incorrect packet broadcast on a network that
 causes most hosts to respond all at once, typically with wrong
 answers that start the process over again. see {network
 meltdown}.
:broken: adj. . not working properly (of programs). . behaving
 strangely; especially (when used of people) exhibiting extreme
 depression.
:broken arrow: [ibm] n. the error code displayed on line  of a
  terminal (or a pc emulating a ) for various kinds of
 protocol violations and "unexpected" error conditions (including
 connection to a {down} computer). on a pc, simulated with
 `->/_', with the two center characters overstruck. in true
 {luser} fashion, the original documentation of these codes
 (visible on every  terminal, and necessary for debugging
 network problems) was confined to an ibm customer engineering
 manual.
 note: to appreciate this term fully, it helps to know that `broken
 arrow' is also military jargon for an accident involving nuclear
 weapons….
:broket: /broh'k*t/ or /broh'ket`/ [by analogy with `bracket': a
 `broken bracket'] n. either of the characters `<' and `>',
 when used as paired enclosing delimiters. this word
 originated as a contraction of the phrase `broken bracket', that
 is, a bracket that is bent in the middle. (at mit, and apparently
 in the {real world} as well, these are usually called {angle
 brackets}.)
:brooks's law: prov. "adding manpower to a late software project
 makes it later" —- a result of the fact that the advantage from
 splitting work among n programmers is o(n) (that is,
 proportional to n), but the complexity and communications
 cost associated with coordinating and then merging their work
 is o(n^) (that is, proportional to the square of n).
 the quote is from fred brooks, a manager of ibm's os/ project
 and author of `the mythical man-month' (addison-wesley, ,
 isbn ---), an excellent early book on software
 engineering. the myth in question has been most tersely expressed
 as "programmer time is fungible" and brooks established
 conclusively that it is not. hackers have never forgotten his
 advice; too often, {management} does. see also
 {creationism}, {second-system effect}.
:brs: /b-r-s/ n. syn. {big red switch}. this abbreviation is
 fairly common on-line.
:brute force: adj. describes a primitive programming style, one in
 which the programmer relies on the computer's processing power
 instead of using his or her own intelligence to simplify the
 problem, often ignoring problems of scale and applying na"ive
 methods suited to small problems directly to large ones.
 the {canonical} example of a brute-force algorithm is associated
 with the `traveling salesman problem' (tsp), a classical {np-}hard
 problem: suppose a person is in, say, boston, and wishes to drive
 to n other cities. in what order should he or she visit
 them in order to minimize the distance travelled? the brute-force
 method is to simply generate all possible routes and compare the
 distances; while guaranteed to work and simple to implement, this
 algorithm is clearly very stupid in that it considers even
 obviously absurd routes (like going from boston to houston via san
 francisco and new york, in that order). for very small n it
 works well, but it rapidly becomes absurdly inefficient when
 n increases (for n = , there are already
 ,,,, possible routes to consider, and for
 n =  —- well, see {bignum}). see
 also {np-}.
 a more simple-minded example of brute-force programming is finding
 the smallest number in a large list by first using an existing
 program to sort the list in ascending order, and then picking the
 first number off the front.
 whether brute-force programming should be considered stupid or not
 depends on the context; if the problem isn't too big, the extra cpu
 time spent on a brute-force solution may cost less than the
 programmer time it would take to develop a more `intelligent'
 algorithm. additionally, a more intelligent algorithm may imply
 more long-term complexity cost and bug-chasing than are justified
 by the speed improvement.
 ken thompson, co-inventor of unix, is reported to have uttered the
 epigram "when in doubt, use brute force". he probably intended
 this as a {ha ha only serious}, but the original unix kernel's
 preference for simple, robust, and portable algorithms over
 {brittle} `smart' ones does seem to have been a significant
 factor in the success of that os. like so many other tradeoffs in
 software design, the choice between brute force and complex,
 finely-tuned cleverness is often a difficult one that requires both
 engineering savvy and delicate esthetic judgment.
:brute force and ignorance: n. a popular design technique at many
 software houses —- {brute force} coding unrelieved by any
 knowledge of how problems have been previously solved in elegant
 ways. dogmatic adherence to design methodologies tends to
 encourage it. characteristic of early {larval stage}
 programming; unfortunately, many never outgrow it. often
 abbreviated bfi: "gak, they used a bubble sort! that's strictly
 from bfi." compare {bogosity}.
:bsd: /b-s-d/ n. [abbreviation for `berkeley system distribution'] a
 family of {{unix}} versions for the dec {vax} and pdp-
 developed by bill joy and others at {berzerkeley} starting
 around , incorporating paged virtual memory, tcp/ip networking
 enhancements, and many other features. the bsd versions (., .,
 and .) and the commercial versions derived from them (sunos,
 ultrix, and mt. xinu) held the technical lead in the unix world
 until at&t's successful standardization efforts after about ,
 and are still widely popular. see {{unix}}, {usg unix}.
:buaf: // [abbreviation, from the alt.fan.warlord] n. big
 ugly ascii font —- a special form of {ascii art}. various
 programs exist for rendering text strings into block, bloob, and
 pseudo-script fonts in cells between four and six character cells
 on a side; this is smaller than the letters generated by older
 {banner} (sense ) programs. these are sometimes used to render
 one's name in a {sig block}, and are critically referred to as
 `buaf's. see {warlording}.
:buag: // [abbreviation, from the alt.fan.warlord] n. big
 ugly ascii graphic. pejorative term for ugly {ascii art},
 especially as found in {sig block}s. for some reason, mutations
 of the head of bart simpson are particularly common in the least
 imaginative {sig block}s. see {warlording}.
:bubble sort: n. techspeak for a particular sorting technique in
 which pairs of adjacent values in the list to be sorted are
 compared and interchanged if they are out of order; thus, list
 entries `bubble upward' in the list until they bump into one with a
 lower sort value. because it is not very good relative to other
 methods and is the one typically stumbled on by {na"ive} and
 untutored programmers, hackers consider it the {canonical}
 example of a na"ive algorithm. the canonical example of a really
 *bad* algorithm is {bogo-sort}. a bubble sort might be used
 out of ignorance, but any use of bogo-sort could issue only from
 brain damage or willful perversity.
:bucky bits: /buh'kee bits/ n. . obs. the bits produced by the
 control and meta shift keys on a sail keyboard (octal  and 
 respectively), resulting in a -bit keyboard character set. the
 mit ai tv (knight) keyboards extended this with top and separate
 left and right control and meta keys, resulting in a -bit
 character set; later, lisp machines added such keys as super,
 hyper, and greek (see {space-cadet keyboard}). . by extension,
 bits associated with `extra' shift keys on any keyboard, e.g.,
 the alt on an ibm pc or command and option keys on a macintosh.
 it is rumored that `bucky bits' were named for buckminster fuller
 during a period when he was consulting at stanford. actually,
 `bucky' was niklaus wirth's nickname when *he* was at
 stanford; he first suggested the idea of an edit key to set the
 th bit of an otherwise -bit ascii character. this was used in a
 number of editors written at stanford or in its environs (tv-edit
 and nls being the best-known). the term spread to mit and cmu
 early and is now in general use. see {double bucky},
 {quadruple bucky}.
:buffer overflow: n. what happens when you try to stuff more data
 into a buffer (holding area) than it can handle. this may be due
 to a mismatch in the processing rates of the producing and
 consuming processes (see {overrun} and {firehose syndrome}),
 or because the buffer is simply too small to hold all the data that
 must accumulate before a piece of it can be processed. for example,
 in a text-processing tool that {crunch}es a line at a time, a
 short line buffer can result in {lossage} as input from a long
 line overflows the buffer and trashes data beyond it. good
 defensive programming would check for overflow on each character
 and stop accepting data when the buffer is full up. the term is
 used of and by humans in a metaphorical sense. "what time did i
 agree to meet you? my buffer must have overflowed." or "if i
 answer that phone my buffer is going to overflow." see also
 {spam}, {overrun screw}.
:bug: n. an unwanted and unintended property of a program or piece
 of hardware, esp. one that causes it to malfunction. antonym of
 {feature}. examples: "there's a bug in the editor: it writes
 things out backwards." "the system crashed because of a hardware
 bug." "fred is a winner, but he has a few bugs" (i.e., fred is
 a good guy, but he has a few personality problems).
 historical note: some have said this term came from telephone
 company usage, in which "bugs in a telephone cable" were blamed
 for noisy lines, but this appears to be an incorrect folk
 etymology. admiral grace hopper (an early computing pioneer better
 known for inventing {cobol}) liked to tell a story in which a
 technician solved a persistent {glitch} in the harvard mark ii
 machine by pulling an actual insect out from between the contacts
 of one of its relays, and she subsequently promulgated {bug} in
 its hackish sense as a joke about the incident (though, as she was
 careful to admit, she was not there when it happened). for many
 years the logbook associated with the incident and the actual bug
 in question (a moth) sat in a display case at the naval surface
 warfare center. the entire story, with a picture of the logbook
 and the moth taped into it, is recorded in the `annals of the
 history of computing', vol. , no.  (july ), pp. —.
 the text of the log entry (from september , ), reads "
 relay # panel f (moth) in relay. first actual case of bug being
 found". this wording seems to establish that the term was already
 in use at the time in its current specific sense —- and hopper
 herself reports that the term `bug' was regularly applied to
 problems in radar electronics during wwii. indeed, the use of
 `bug' to mean an industrial defect was already established in
 thomas edison's time, and `bug' in the sense of an disruptive
 event goes back to shakespeare! in the first edition of samuel
 johnson's dictionary one meaning of `bug' is "a frightful
 object; a walking spectre"; this is traced to `bugbear', a welsh
 term for a variety of mythological monster which (to complete the
 circle) has recently been reintroduced into the popular lexicon
 through fantasy role-playing games.
in any case, in jargon the word almost never refers to insects.
here is a plausible conversation that never actually happened:
 "there is a bug in this ant farm!"
 "what do you mean? i don't see any ants in it."
 "that's the bug."
 [there has been a widespread myth that the original bug was moved
 to the smithsonian, and an earlier version of this entry so
 asserted. a correspondent who thought to check discovered that the
 bug was not there. while investigating this in late , your
 editor discovered that the nswc still had the bug, but had
 unsuccessfully tried to get the smithsonian to accept it —- and
 that the present curator of their history of american technology
 museum didn't know this and agreed that it would make a worthwhile
 exhibit. it was moved to the smithsonian in mid-. thus, the
 process of investigating the original-computer-bug bug fixed it in
 an entirely unexpected way, by making the myth true! —- esr]
 [ update: the plot thickens! a usually reliable source reports
 having seen the bug at the smithsonian in . i am unable to
 reconcile the conflicting histories i have been offered, and merely
 report this fact here. —- esr.]
:bug-compatible: adj. said of a design or revision that has been
 badly compromised by a requirement to be compatible with
 {fossil}s or {misfeature}s in other programs or (esp.)
 previous releases of itself. "ms-dos . used \ as a path
 separator to be bug-compatible with some cretin's choice of / as an
 option character in .."
:bug-for-bug compatible: n. same as {bug-compatible}, with the
 additional implication that much tedious effort went into ensuring
 that each (known) bug was replicated.
:buglix: /buhg'liks/ n. pejorative term referring to dec's ultrix
 operating system in its earlier *severely* buggy versions.
 still used to describe ultrix, but without venom. compare
 {aidx}, {hp-sux}, {nominal semidestructor}, {telerat},
 {sun-stools}.
:bulletproof: adj. used of an algorithm or implementation considered
 extremely {robust}; lossage-resistant; capable of correctly
 recovering from any imaginable exception condition. this is a rare
 and valued quality. syn. {armor-plated}.
:bum: . vt. to make highly efficient, either in time or space,
 often at the expense of clarity. "i managed to bum three more
 instructions out of that code." "i spent half the night bumming
 the interrupt code." in {elder days}, john mccarthy (inventor
 of {lisp}) used to compare some efficiency-obsessed hackers
 among his students to "ski bums"; thus, optimization became
 "program bumming", and eventually just "bumming". . to
 squeeze out excess; to remove something in order to improve
 whatever it was removed from (without changing function; this
 distinguishes the process from a {featurectomy}). . n. a small
 change to an algorithm, program, or hardware device to make it more
 efficient. "this hardware bum makes the jump instruction
 faster." usage: now uncommon, largely superseded by v. {tune}
 (and n. {tweak}, {hack}), though none of these exactly
 capture sense . all these uses are rare in commonwealth hackish,
 because in the parent dialects of english `bum' is a rude synonym
 for `buttocks'.
:bump: vt. synonym for increment. has the same meaning as
 c's ++ operator. used esp. of counter variables, pointers, and
 index dummies in `for', `while', and `do-while'
 loops.
:burble: [from lewis carroll's "jabberwocky"] v. like {flame},
 but connotes that the source is truly clueless and ineffectual
 (mere flamers can be competent). a term of deep contempt.
 "there's some guy on the phone burbling about how he got a disk
 full error and it's all our comm software's fault."
:buried treasure: n. a surprising piece of code found in some
 program. while usually not wrong, it tends to vary from {crufty}
 to {bletcherous}, and has lain undiscovered only because it was
 functionally correct, however horrible it is. used sarcastically,
 because what is found is anything *but* treasure. buried
 treasure almost always needs to be dug up and removed. "i just
 found that the scheduler sorts its queue using {bubble sort}!
 buried treasure!"
:burn-in period: n. . a factory test designed to catch systems
 with {marginal} components before they get out the door; the
 theory is that burn-in will protect customers by outwaiting the
 steepest part of the {bathtub curve} (see {infant
 mortality}). . a period of indeterminate length in which a person
 using a computer is so intensely involved in his project that he
 forgets basic needs such as food, drink, sleep, etc. warning:
 excessive burn-in can lead to burn-out. see {hack mode},
 {larval stage}.
:burst page: n. syn. {banner}, sense .
:busy-wait: vi. used of human behavior, conveys that the subject is
 busy waiting for someone or something, intends to move instantly as
 soon as it shows up, and thus cannot do anything else at the
 moment. "can't talk now, i'm busy-waiting till bill gets off the
 phone."
 technically, `busy-wait' means to wait on an event by
 {spin}ning through a tight or timed-delay loop that polls for
 the event on each pass, as opposed to setting up an interrupt
 handler and continuing execution on another part of the task. this
 is a wasteful technique, best avoided on time-sharing systems where
 a busy-waiting program may {hog} the processor.
:buzz: vi. . of a program, to run with no indication of progress
 and perhaps without guarantee of ever finishing; esp. said of
 programs thought to be executing tight loops of code. a program
 that is buzzing appears to be {catatonic}, but you never get out
 of catatonia, while a buzzing loop may eventually end of its own
 accord. "the program buzzes for about  seconds trying to sort
 all the names into order." see {spin}; see also {grovel}.
 . [eta systems] to test a wire or printed circuit trace for
 continuity by applying an ac rather than dc signal. some wire
 faults will pass dc tests but fail a buzz test. . to process an
 array or list in sequence, doing the same thing to each element.
 "this loop buzzes through the tz array looking for a terminator
 type."
:bwq: /b-w-q/ [ibm: abbreviation, `buzz word quotient'] the
 percentage of buzzwords in a speech or documents. usually roughly
 proportional to {bogosity}. see {tla}.
:by hand: adv. said of an operation (especially a repetitive,
 trivial, and/or tedious one) that ought to be performed
 automatically by the computer, but which a hacker instead has to
 step tediously through. "my mailer doesn't have a command to
 include the text of the message i'm replying to, so i have to do it
 by hand." this does not necessarily mean the speaker has to
 retype a copy of the message; it might refer to, say, dropping into
 a {subshell} from the mailer, making a copy of one's mailbox file,
 reading that into an editor, locating the top and bottom of the
 message in question, deleting the rest of the file, inserting `>'
 characters on each line, writing the file, leaving the editor,
 returning to the mailer, reading the file in, and later remembering
 to delete the file. compare {eyeball search}.
:byte:: /bi:t/ [techspeak] n. a unit of memory or data equal to
 the amount used to represent one character; on modern architectures
 this is usually  bits, but may be  on -bit machines. some
 older architectures used `byte' for quantities of  or  bits, and
 the pdp- supported `bytes' that were actually bitfields of
  to  bits! these usages are now obsolete, and even -bit bytes
 have become rare in the general trend toward power-of- word sizes.
 historical note: the term originated in  during the early
 design phase for the ibm stretch computer; originally it was
 described as  to  bits (typical i/o equipment of the period
 used -bit chunks of information). the move to an -bit byte
 happened in late , and this size was later adopted and
 promulgated as a standard by the system/. the term `byte' was
 coined by mutating the word `bite' so it would not be accidentally
 misspelled as {bit}. see also {nybble}.
:bytesexual: /bi:t`sek'shu-*l/ adj. said of hardware, denotes
 willingness to compute or pass data in either {big-endian} or
 {little-endian} format (depending, presumably, on a {mode bit}
 somewhere). see also {nuxi problem}.
:bzzzt, wrong: /bzt rong/ [usenet/internet] from a robin williams
 routine in the movie "dead poets society" spoofing radio or
 tv quiz programs, such as *truth or consequences*, where an
 incorrect answer earns one a blast from the buzzer and condolences
 from the interlocutor. a way of expressing mock-rude disagreement,
 usually immediately following an included quote from another
 poster. the less abbreviated "*bzzzzt*, wrong, but thank you for
 playing" is also common; capitalization and emphasis of the
 buzzer sound varies.
:c: n. . the third letter of the english alphabet. . ascii
 . . the name of a programming language designed by
 dennis ritchie during the early s and immediately used to
 reimplement {{unix}}; so called because many features derived
 from an earlier compiler named `b' in commemoration of
 *its* parent, bcpl. before bjarne stroustrup settled the
 question by designing c++, there was a humorous debate over whether
 c's successor should be named `d' or `p'. c became immensely
 popular outside bell labs after about  and is now the dominant
 language in systems and microcomputer applications programming.
 see also {languages of choice}, {indent style}.
 c is often described, with a mixture of fondness and disdain
 varying according to the speaker, as "a language that combines
 all the elegance and power of assembly language with all the
 readability and maintainability of assembly language".
:c programmer's disease: n. the tendency of the undisciplined c
 programmer to set arbitrary but supposedly generous static limits
 on table sizes (defined, if you're lucky, by constants in header
 files) rather than taking the trouble to do proper dynamic storage
 allocation. if an application user later needs to put  elements
 into a table of size , the afflicted programmer reasons that he
 can easily reset the table size to  (or even as much as , to
 allow for future expansion), and recompile. this gives the
 programmer the comfortable feeling of having done his bit to
 satisfy the user's (unreasonable) demands, and often affords the
 user multiple opportunities to explore the marvelous consequences
 of {fandango on core}. in severe cases of the disease, the
 programmer cannot comprehend why each fix of this kind seems only
 to further disgruntle the user.
:calculator: [cambridge] n. syn. for {bitty box}.
:can: vt. to abort a job on a time-sharing system. used esp. when the
 person doing the deed is an operator, as in "canned from the
 {{console}}". frequently used in an imperative sense, as in "can
 that print job, the lpt just popped a sprocket!" synonymous with
 {gun}. it is said that the ascii character with mnemonic can
 () was used as a kill-job character on some early oses.
:can't happen: the traditional program comment for code executed
 under a condition that should never be true, for example a file
 size computed as negative. often, such a condition being true
 indicates data corruption or a faulty algorithm; it is almost
 always handled by emitting a fatal error message and terminating or
 crashing, since there is little else that can be done. this is
 also often the text emitted if the `impossible' error actually
 happens! although "can't happen" events are genuinely infrequent
 in production code, programmers wise enough to check for them
 habitually are often surprised at how often they are triggered
 during development and how many headaches checking for them turns
 out to head off.
:candygrammar: n. a programming-language grammar that is mostly
 {syntactic sugar}; the term is also a play on `candygram'.
 {cobol}, apple's hypertalk language, and a lot of the so-called
 `gl' database languages are like this. the usual intent of such
 designs is that they be as english-like as possible, on the theory
 that they will then be easier for unskilled people to program.
 this intention comes to grief on the reality that syntax isn't what
 makes programming hard; it's the mental effort and organization
 required to specify an algorithm precisely that costs. thus the
 invariable result is that `candygrammar' languages are just as
 difficult to program in as terser ones, and far more painful for
 the experienced hacker.
 [the overtones from the old chevy chase skit on saturday night live
 should not be overlooked. (this was a "jaws" parody.
 someone lurking outside an apartment door tries all kinds of bogus
 ways to get the occupant to open up, while ominous music plays in
 the background. the last attempt is a half-hearted "candygram!"
 when the door is opened, a shark bursts in and chomps the poor
 occupant. there is a moral here for those attracted to
 candygrammars. note that, in many circles, pretty much the same
 ones who remember monty python sketches, all it takes is the word
 "candygram!", suitably timed, to get people rolling on the
 floor.) —- gls]
:canonical: [historically, `according to religious law'] adj. the
 usual or standard state or manner of something. this word has a
 somewhat more technical meaning in mathematics. two formulas such
 as  + x and x +  are said to be equivalent because
 they mean the same thing, but the second one is in `canonical
 form' because it is written in the usual way, with the highest
 power of x first. usually there are fixed rules you can use
 to decide whether something is in canonical form. the jargon
 meaning, a relaxation of the technical meaning, acquired its
 present loading in computer-science culture largely through its
 prominence in alonzo church's work in computation theory and
 mathematical logic (see {knights of the lambda calculus}).
 compare {vanilla}.
 this word has an interesting history. non-technical academics do
 not use the adjective `canonical' in any of the senses defined
 above with any regularity; they do however use the nouns `canon'
 and `canonicity' (not *canonicalness or *canonicality). the
 `canon' of a given author is the complete body of authentic works
 by that author (this usage is familiar to sherlock holmes fans as
 well as to literary scholars). `*the* canon' is the body of
 works in a given field (e.g., works of literature, or of art, or of
 music) deemed worthwhile for students to study and for scholars to
 investigate.
the word `canon' derives ultimately from the greek
`kanon'
(akin to the english `cane') referring to a reed. reeds were used
for measurement, and in latin and later greek the word `canon'
meant a rule or a standard. the establishment of a canon of
scriptures within christianity was meant to define a standard or a
rule for the religion. the above non-techspeak academic usages
stem from this instance of a defined and accepted body of work.
alongside this usage was the promulgation of `canons' (`rules')
for the government of the catholic church. the techspeak usages
("according to religious law") derive from this use of the latin
`canon'.
 hackers invest this term with a playfulness that makes an ironic
 contrast with its historical meaning. a true story: one bob
 sjoberg, new at the mit ai lab, expressed some annoyance at the use
 of jargon. over his loud objections, gls and rms made a point of
 using it as much as possible in his presence, and eventually it
 began to sink in. finally, in one conversation, he used the word
 `canonical' in jargon-like fashion without thinking. steele:
 "aha! we've finally got you talking jargon too!" stallman:
 "what did he say?" steele: "bob just used `canonical' in the
 canonical way."
 of course, canonicality depends on context, but it is implicitly
 defined as the way *hackers* normally expect things to be.
 thus, a hacker may claim with a straight face that `according to
 religious law' is *not* the canonical meaning of `canonical'.
:card: n. . an electronic printed-circuit board (see also {tall
 card}, {short card}. . obs. syn. {{punched card}}.
:card walloper: n. an edp programmer who grinds out batch programs
 that do stupid things like print people's paychecks. compare
 {code grinder}. see also {{punched card}}, {eighty-column
 mind}.
:careware: /keir'weir/ n. {shareware} for which either the
 author suggests that some payment be made to a nominated charity
 or a levy directed to charity is included on top of the
 distribution charge. syn. {charityware}; compare
 {crippleware}, sense .
:cargo cult programming: n. a style of (incompetent) programming
 dominated by ritual inclusion of code or program structures that
 serve no real purpose. a cargo cult programmer will usually
 explain the extra code as a way of working around some bug
 encountered in the past, but usually neither the bug nor the reason
 the code apparently avoided the bug was ever fully understood
 (compare {shotgun debugging}, {voodoo programming}).
 the term `cargo cult' is a reference to aboriginal religions that
 grew up in the south pacific after world war ii. the practices of
 these cults center on building elaborate mockups of airplanes and
 military style landing strips in the hope of bringing the return of
 the god-like airplanes that brought such marvelous cargo during the
 war. hackish usage probably derives from richard feynman's
 characterization of certain practices as "cargo cult science" in
 his book `surely you're joking, mr. feynman' (w. w. norton
 & co, new york , isbn ---).
:cascade: n. . a huge volume of spurious error-message output
 produced by a compiler with poor error recovery. this can happen
 when one initial error throws the parser out of synch so that much
 of the remaining program text is interpreted as garbaged or
 ill-formed. . a chain of usenet followups each adding some
 trivial variation of riposte to the text of the previous one, all
 of which is reproduced in the new message; an {include war} in which
 the object is to create a sort of communal graffito.
:case and paste: [from `cut and paste'] n. . the addition of a new
 {feature} to an existing system by selecting the code from an
 existing feature and pasting it in with minor changes. common in
 telephony circles because most operations in a telephone switch are
 selected using `case' statements. leads to {software bloat}.
 in some circles of emacs users this is called `programming by
 meta-w', because meta-w is the emacs command for copying a block of
 text to a kill buffer in preparation to pasting it in elsewhere.
 the term is condescending, implying that the programmer is acting
 mindlessly rather than thinking carefully about what is required to
 integrate the code for two similar cases.
:casters-up mode: [ibm] n. yet another synonym for `broken' or
 `down'. usually connotes a major failure. a system (hardware or
 software) which is `down' may be already being restarted before
 the failure is noticed, whereas one which is `casters up' is
 usually a good excuse to take the rest of the day off (as long as
 you're not responsible for fixing it).
:casting the runes: n. what a {guru} does when you ask him or
 her to run a particular program and type at it because it never
 works for anyone else; esp. used when nobody can ever see what
 the guru is doing different from what j. random luser does.
 compare {incantation}, {runes}, {examining the entrails};
 also see the ai koan about tom knight in "{a selection
 of ai koans}" ({appendix a}).
:cat: [from `catenate' via {{unix}} `cat()'] vt.
 . [techspeak] to spew an entire file to the screen or some other
 output sink without pause. . by extension, to dump large amounts
 of data at an unprepared target or with no intention of browsing it
 carefully. usage: considered silly. rare outside unix sites. see
 also {dd}, {blt}.
 among unix fans, `cat()' is considered an excellent example
 of user-interface design, because it outputs the file contents
 without such verbosity as spacing or headers between the files, and
 because it does not require the files to consist of lines of text,
 but works with any sort of data.
 among unix-haters, `cat()' is considered the {canonical}
 example of *bad* user-interface design. this because it is more
 often used to {blast} a file to standard output than to
 concatenate two files. the name `cat' for the former
 operation is just as unintuitive as, say, lisp's {cdr}.
 of such oppositions are {holy wars} made….
:catatonic: adj. describes a condition of suspended animation in
 which something is so {wedged} or {hung} that it makes no
 response. if you are typing on a terminal and suddenly the
 computer doesn't even echo the letters back to the screen as you
 type, let alone do what you're asking it to do, then the computer
 is suffering from catatonia (possibly because it has crashed).
 "there i was in the middle of a winning game of {nethack} and it
 went catatonic on me! aaargh!" compare {buzz}.
:cd tilde: /see-dee til-d*/ vi. to go home. from the unix
 c-shell and korn-shell command `cd ~', which takes
 one `$home'. by extension, may be used with other arguments;
 thus, over an electronic chat link, `cd ~coffee'
 would mean "i'm going to the coffee machine."
:cdr: /ku'dr/ or /kuh'dr/ [from lisp] vt. to skip past the
 first item from a list of things (generalized from the lisp
 operation on binary tree structures, which returns a list
 consisting of all but the first element of its argument). in the
 form `cdr down', to trace down a list of elements: "shall we
 cdr down the agenda?" usage: silly. see also {loop through}.
 historical note: the instruction format of the ibm  that hosted
 the original lisp implementation featured two -bit fields called
 the `address' and `decrement' parts. the term `cdr' was originally
 `contents of decrement part of register'. similarly, `car' stood
 for `contents of address part of register'.
 the cdr and car operations have since become bases for
 formation of compound metaphors in non-lisp contexts. gls recalls,
 for example, a programming project in which strings were
 represented as linked lists; the get-character and skip-character
 operations were of course called char and chdr.
:chad: /chad/ n. . the perforated edge strips on printer paper, after
 they have been separated from the printed portion. also called
 {selvage} and {perf}. . obs. the confetti-like paper bits punched
 out of cards or paper tape; this was also called `chaff', `computer
 confetti', and `keypunch droppings'.
 historical note: one correspondent believes `chad' (sense )
 derives from the chadless keypunch (named for its inventor), which
 cut little u-shaped tabs in the card to make a hole when the tab
 folded back, rather than punching out a circle/rectangle; it was
 clear that if the chadless keypunch didn't make them, then the
 stuff that other keypunches made had to be `chad'.
:chad box: n. {iron age} card punches contained boxes inside them,
 about the size of a lunchbox (or in some models a large
 wastebasket), that held the {chad} (sense ). you had to open
 the covers of the card punch periodically and empty the chad box.
 the {bit bucket} was notionally the equivalent device in the cpu
 enclosure, which was typically across the room in another great
 gray-and-blue box.
:chain: . [orig. from basic's `chain' statement] vi. to hand
 off execution to a child or successor without going through the
 {os} command interpreter that invoked it. the state of the
 parent program is lost and there is no returning to it. though
 this facility used to be common on memory-limited micros and is
 still widely supported for backward compatibility, the jargon usage
 is semi-obsolescent; in particular, most unix programmers will
 think of this as an {exec}. oppose the more modern
 {subshell}. . a series of linked data areas within an
 operating system or application. `chain rattling' is the process
 of repeatedly running through the linked data areas searching for
 one which is of interest to the executing program. the implication
 is that there is a very large number of links on the chain.
:channel: [irc] n. the basic unit of discussion on {irc}. once
 one joins a channel, everything one types is read by others on that
 channel. channels can either be named with numbers or with strings
 that begin with a `#' sign, and can have topic descriptions (which
 are generally irrelevant to the actual subject of discussion).
 some notable channels are `#initgame', `#hottub', and
 `#report'. at times of international crisis, `#report'
 has hundreds of members, some of whom take turns listening to
 various news services and summarizing the news, or in some cases,
 giving first-hand accounts of the action (e.g., scud missile
 attacks in tel aviv during the gulf war in ).
:channel hopping: [irc, genie] n. to rapidly switch channels on
 {irc}, or genie chat board, just as a social butterfly might hop
 from one group to another at a party. this may derive from the tv
 watcher's idiom `channel surfing'.
:channel op: /chan'l op/ [irc] n. someone who is endowed with
 privileges on a particular {irc} channel; commonly abbreviated
 `chanop' or `chop'. these privileges include the right to
 {kick} users, to change various status bits, and to make others
 into chops.
:chanop: /chan'-op/ [irc] n. see {channel op}.
:char: /keir/ or /char/; rarely, /kar/ n. shorthand for
 `character'. esp. used by c programmers, as `char' is
 c's typename for character data.
:charityware: /char'it-ee-weir`/ n. syn. {careware}.
:chase pointers: . vi. to go through multiple levels of
 indirection, as in traversing a linked list or graph structure.
 used esp. by programmers in c, where explicit pointers are a very
 common data type. this is techspeak, but it remains jargon when
 used of human networks. "i'm chasing pointers. bob said you
 could tell me who to talk to about…." see {dangling
 pointer} and {snap}. . [cambridge] `pointer chase' or
 `pointer hunt': the process of going through a dump
 (interactively or on a large piece of paper printed with hex
 {runes}) following dynamic data-structures. used only in a
 debugging context.
:check: n. a hardware-detected error condition, most commonly used
 to refer to actual hardware failures rather than software-induced
 traps. e.g., a `parity check' is the result of a
 hardware-detected parity error. recorded here because it's often
 humorously extended to non-technical problems. for example, the
 term `child check' has been used to refer to the problems caused
 by a small child who is curious to know what happens when s/he
 presses all the cute buttons on a computer's console (of course,
 this particular problem could have been prevented with
 {molly-guard}s).
:chemist: [cambridge] n. someone who wastes computer time on
 {number-crunching} when you'd far rather the machine were doing
 something more productive, such as working out anagrams of your
 name or printing snoopy calendars or running {life} patterns.
 may or may not refer to someone who actually studies chemistry.
:chernobyl chicken: n. see {laser chicken}.
:chernobyl packet: /cher-noh'b*l pak'*t/ n. a network packet that
induces {network meltdown} (the result of a {broadcast
storm}), in memory of the april  nuclear accident at chernobyl
in ukraine. the typical scenario involves an ip ethernet datagram
that passes through a gateway with both source and destination
ether and ip address set as the respective broadcast addresses for
the subnetworks being gated between. compare {christmas tree
packet}.
:chicken head: [commodore] n. the commodore business machines logo,
which strongly resembles a poultry part. rendered in ascii as
`c='. with the arguable exception of the amiga (see {amoeba}),
commodore's machines are notoriously crocky little {bitty box}es
(see also {petscii}). thus, this usage may owe something to
philip k. dick's novel `do androids dream of electric sheep?'
(the basis for the movie `blade runner'), in which a
`chickenhead' is a mutant with below-average intelligence.
:chiclet keyboard: n. a keyboard with small rectangular or
 lozenge-shaped rubber or plastic keys that look like pieces of
 chewing gum. (chiclets is the brand name of a variety of chewing
 gum that does in fact resemble the keys of chiclet keyboards.)
 used esp. to describe the original ibm pcjr keyboard. vendors
 unanimously liked these because they were cheap, and a lot of early
 portable and laptop products got launched using them. customers
 rejected the idea with almost equal unanimity, and chiclets are not
 often seen on anything larger than a digital watch any more.
:chine nual: /sheen'yu-*l/ [mit] n.,obs. the lisp machine manual, so
 called because the title was wrapped around the cover so only those
 letters showed on the front.
:chinese army technique: n. syn. {mongolian hordes technique}.
:choke: v. . to reject input, often ungracefully. "nuls make system
 v's `lpr()' choke." "i tried building an {emacs} binary to
 use {x}, but `cpp()' choked on all those `#define's."
 see {barf}, {gag}, {vi}. . [mit] more generally, to fail at any
 endeavor, but with some flair or bravado; the popular definition is
 "to snatch defeat from the jaws of victory."
:chomp: vi. to {lose}; specifically, to chew on something of
 which more was bitten off than one can. probably related to
 gnashing of teeth. see {bagbiter}. a hand gesture commonly
 accompanies this. to perform it, hold the four fingers together
 and place the thumb against their tips. now open and close your
 hand rapidly to suggest a biting action (much like what pac-man
 does in the classic video game, though this pantomime seems to
 predate that). the gesture alone means `chomp chomp' (see
 "{verb doubling}" in the "{jargon
 construction}" section of the prependices). the hand may be
 pointed at the object of complaint, and for real emphasis you can
 use both hands at once. doing this to a person is equivalent to
 saying "you chomper!" if you point the gesture at yourself, it
 is a humble but humorous admission of some failure. you might do
 this if someone told you that a program you had written had failed
 in some surprising way and you felt dumb for not having anticipated
 it.
:chomper: n. someone or something that is chomping; a loser. see
 {loser}, {bagbiter}, {chomp}.
:chop: /chop/ [irc] n. see {channel op}.
:christmas tree: n. a kind of rs- line tester or breakout box
 featuring rows of blinking red and green leds suggestive of
 christmas lights.
:christmas tree packet: n. a packet with every single option set for
 whatever protocol is in use. see {kamikaze packet}, {chernobyl
 packet}. (the term doubtless derives from a fanciful image of each
 little option bit being represented by a different-colored light
 bulb, all turned on.)
:chrome: [from automotive slang via wargaming] n. showy features
 added to attract users but contributing little or nothing to
 the power of a system. "the d icons in motif are just chrome,
 but they certainly are *pretty* chrome!" distinguished from
 {bells and whistles} by the fact that the latter are usually
 added to gratify developers' own desires for featurefulness.
 often used as a term of contempt.
:chug: vi. to run slowly; to {grind} or {grovel}. "the disk is
 chugging like crazy."
:church of the subgenius: n. a mutant offshoot of
 {discordianism} launched in  as a spoof of fundamentalist
 christianity by the `reverend' ivan stang, a brilliant satirist
 with a gift for promotion. popular among hackers as a rich source
 of bizarre imagery and references such as "bob" the divine
 drilling-equipment salesman, the benevolent space xists, and the
 stark fist of removal. much subgenius theory is concerned with the
 acquisition of the mystical substance or quality of `slack'.
:cinderella book: [cmu] n. `introduction to automata theory,
 languages, and computation', by john hopcroft and jeffrey ullman,
 (addison-wesley, ). so called because the cover depicts a girl
 (putatively cinderella) sitting in front of a rube goldberg device
 and holding a rope coming out of it. the back cover depicts the
 girl with the device in shambles after she has pulled on the rope.
 see also {{book titles}}.
:ci$: // n. hackerism for `cis', compuserve information service.
the dollar sign refers to compuserve's rather steep line charges.
often used in {sig block}s just before a compuserve address.
syn. {compu$erve}.
:classic c: /klas'ik c/ [a play on `coke classic'] n. the
 c programming language as defined in the first edition of {k&r},
 with some small additions. it is also known as `k&r c'. the name
 came into use while c was being standardized by the ansi xj
 committee. also `c classic'. this is sometimes applied
 elsewhere: thus, `x classic', where x = star trek (referring to the
 original tv series) or x = pc (referring to ibm's isa-bus machines
 as opposed to the ps/ series). this construction is especially
 used of product series in which the newer versions are considered
 serious losers relative to the older ones.
:clean: . adj. used of hardware or software designs, implies
 `elegance in the small', that is, a design or implementation that
 may not hold any surprises but does things in a way that is
 reasonably intuitive and relatively easy to comprehend from the
 outside. the antonym is `grungy' or {crufty}. . v. to remove
 unneeded or undesired files in a effort to reduce clutter: "i'm
 cleaning up my account." "i cleaned up the garbage and now have
  meg free on that partition."
:clm: /c-l-m/ [sun: `career limiting move'] . n. an action
 endangering one's future prospects of getting plum projects and
 raises, and possibly one's job: "his halloween costume was a
 parody of his manager. he won the prize for `best clm'."
 . adj. denotes extreme severity of a bug, discovered by a
 customer and obviously missed earlier because of poor testing:
 "that's a clm bug!"
:clobber: vt. to overwrite, usually unintentionally: "i walked off
 the end of the array and clobbered the stack." compare {mung},
 {scribble}, {trash}, and {smash the stack}.
:clocks: n. processor logic cycles, so called because each
 generally corresponds to one clock pulse in the processor's timing.
 the relative execution times of instructions on a machine are
 usually discussed in clocks rather than absolute fractions of a
 second; one good reason for this is that clock speeds for various
 models of the machine may increase as technology improves, and it
 is usually the relative times one is interested in when discussing
 the instruction set. compare {cycle}.
:clone: n. . an exact duplicate: "our product is a clone of
 their product." implies a legal reimplementation from
 documentation or by reverse-engineering. also connotes lower
 price. . a shoddy, spurious copy: "their product is a
 clone of our product." . a blatant ripoff, most likely violating
 copyright, patent, or trade secret protections: "your
 product is a clone of my product." this use implies legal
 action is pending. . a `pc clone'; a pc-bus/isa or
 eisa-compatible x-based microcomputer (this use is sometimes
 spelled `klone' or `pclone'). these invariably have much
 more bang for the buck than the ibm archetypes they resemble.
 . in the construction `unix clone': an os designed to deliver
 a unix-lookalike environment without unix license fees, or with
 additional `mission-critical' features such as support for
 real-time programming. . v. to make an exact copy of something.
 "let me clone that" might mean "i want to borrow that paper so i
 can make a photocopy" or "let me get a copy of that file before
 you {mung} it".
:clover key: [mac users] n. see {feature key}.
:clustergeeking: /kluh'st*r-gee`king/ [cmu] n. spending more time
 at a computer cluster doing cs homework than most people spend
 breathing.
:cobol: /koh'bol/ [common business-oriented language] n.
 (synonymous with {evil}.) a weak, verbose, and flabby language
 used by {card walloper}s to do boring mindless things on
 {dinosaur} mainframes. hackers believe that all cobol
 programmers are {suit}s or {code grinder}s, and no
 self-respecting hacker will ever admit to having learned the
 language. its very name is seldom uttered without ritual
 expressions of disgust or horror. see also {fear and loathing},
 {software rot}.
:cobol fingers: /koh'bol fing'grz/ n. reported from sweden, a
 (hypothetical) disease one might get from coding in cobol. the
 language requires code verbose beyond all reason; thus it is
 alleged that programming too much in cobol causes one's fingers to
 wear down to stubs by the endless typing. "i refuse to type in
 all that source code again; it would give me cobol fingers!"
:code grinder: n. . a {suit}-wearing minion of the sort hired in
 legion strength by banks and insurance companies to implement
 payroll packages in rpg and other such unspeakable horrors. in its
 native habitat, the code grinder often removes the suit jacket to
 reveal an underplumage consisting of button-down shirt (starch
 optional) and a tie. in times of dire stress, the sleeves (if
 long) may be rolled up and the tie loosened about half an inch. it
 seldom helps. the {code grinder}'s milieu is about as far from
 hackerdom as one can get and still touch a computer; the term
 connotes pity. see {real world}, {suit}. . used of or to a
 hacker, a really serious slur on the person's creative ability;
 connotes a design style characterized by primitive technique,
 rule-boundedness, {brute force}, and utter lack of imagination.
 compare {card walloper}; contrast {hacker}, {real
 programmer}.
:code police: [by analogy with george orwell's `thought police'] n.
 a mythical team of gestapo-like storm troopers that might burst
 into one's office and arrest one for violating programming style
 rules. may be used either seriously, to underline a claim that a
 particular style violation is dangerous, or ironically, to suggest
 that the practice under discussion is condemned mainly by
 anal-retentive {weenie}s. "dike out that goto or the code
 police will get you!" the ironic usage is perhaps more common.
:codewalker: n. a program component that traverses other programs for
 a living. compilers have codewalkers in their front ends; so do
 cross-reference generators and some database front ends. other
 utility programs that try to do too much with source code may turn
 into codewalkers. as in "this new `vgrind' feature would require a
 codewalker to implement."
:coefficient of x: n. hackish speech makes rather heavy use of
 pseudo-mathematical metaphors. four particularly important ones
 involve the terms `coefficient', `factor', `index', and
 `quotient'. they are often loosely applied to things you
 cannot really be quantitative about, but there are subtle
 distinctions among them that convey information about the way the
 speaker mentally models whatever he or she is describing.
 `foo factor' and `foo quotient' tend to describe something for
 which the issue is one of presence or absence. the canonical
 example is {fudge factor}. it's not important how much you're
 fudging; the term simply acknowledges that some fudging is needed.
 you might talk of liking a movie for its silliness factor.
 quotient tends to imply that the property is a ratio of two
 opposing factors: "i would have won except for my luck quotient."
 this could also be "i would have won except for the luck factor",
 but using *quotient* emphasizes that it was bad luck
 overpowering good luck (or someone else's good luck overpowering
 your own).
 `foo index' and `coefficient of foo' both tend to imply
 that foo is, if not strictly measurable, at least something that
 can be larger or smaller. thus, you might refer to a paper or
 person as having a `high bogosity index', whereas you would be less
 likely to speak of a `high bogosity factor'. `foo index' suggests
 that foo is a condensation of many quantities, as in the mundane
 cost-of-living index; `coefficient of foo' suggests that foo is a
 fundamental quantity, as in a coefficient of friction. the choice
 between these terms is often one of personal preference; e.g., some
 people might feel that bogosity is a fundamental attribute and thus
 say `coefficient of bogosity', whereas others might feel it is a
 combination of factors and thus say `bogosity index'.
:cokebottle: /kohk'bot-l/ n. any very unusual character,
 particularly one you can't type because it it isn't on your
 keyboard. mit people used to complain about the
 `control-meta-cokebottle' commands at sail, and sail people
 complained right back about the `{altmode}-altmode-cokebottle'
 commands at mit. after the demise of the {space-cadet
 keyboard}, `cokebottle' faded away as serious usage, but was
 often invoked humorously to describe an (unspecified) weird or
 non-intuitive keystroke command. it may be due for a second
 inning, however. the osf/motif window manager, `mwm()', has
 a reserved keystroke for switching to the default set of
 keybindings and behavior. this keystroke is (believe it or not)
 `control-meta-bang' (see {bang}). since the exclamation point
 looks a lot like an upside down coke bottle, motif hackers have
 begun referring to this keystroke as `cokebottle'. see also
 {quadruple bucky}.
:cold boot: n. see {boot}.
:come from: n. a semi-mythical language construct dual to the `go
 to'; `come from' <label> would cause the referenced label to
 act as a sort of trapdoor, so that if the program ever reached it
 control would quietly and {automagically} be transferred to the
 statement following the `come from'. `come from' was
 first proposed in r.l. clark's "a linguistic contribution to
 goto-less programming", which appeared in a  {datamation}
 issue (and was reprinted in the april  issue of
 `communications of the acm'). this parodied the then-raging
 `structured programming' {holy wars} (see {considered
 harmful}). mythically, some variants are the `assigned come
 from' and the `computed come from' (parodying some nasty control
 constructs in fortran and some extended basics). of course,
 multi-tasking (or non-determinism) could be implemented by having
 more than one `come from' statement coming from the same
 label.
in some ways the fortran `do' looks like a `come from'
statement. after the terminating statement number/`continue'
is reached, control continues at the statement following the do.
some generous fortrans would allow arbitrary statements (other than
`continue') for the statement, leading to examples like:
c imagine many lines of code here, leaving the
c original do statement lost in the spaghetti…
 in which the trapdoor is just after the statement labeled .
 (this is particularly surprising because the label doesn't appear
 to have anything to do with the flow of control at all!)
 while sufficiently astonishing to the unsuspecting reader, this
 form of `come from' statement isn't completely general. after
 all, control will eventually pass to the following statement. the
 implementation of the general form was left to univac fortran,
 ca.  (though a roughly similar feature existed on the ibm 
 ten years earlier). the statement `at ' would perform a
 `come from '. it was intended strictly as a debugging aid,
 with dire consequences promised to anyone so deranged as to use it
 in production code. more horrible things had already been
 perpetrated in production languages, however; doubters need only
 contemplate the `alter' verb in {cobol}.
 `come from' was supported under its own name for the first
 time  years later, in c-intercal (see {intercal},
 {retrocomputing}); knowledgeable observers are still reeling
 from the shock.
:comm mode: /kom mohd/ [its: from the feature supporting on-line
 chat; the term may spelled with one or two m's] syn. for {talk
 mode}.
:command key: [mac users] n. syn. {feature key}.
:comment out: vt. to surround a section of code with comment
 delimiters or to prefix every line in the section with a comment
 marker; this prevents it from being compiled or interpreted. often
 done when the code is redundant or obsolete, but you want to leave
 it in the source to make the intent of the active code clearer;
 also when the code in that section is broken and you want to bypass
 it in order to debug some other part of the code. compare
 {condition out}, usually the preferred technique in languages
 (such as {c}) that make it possible.
:commonwealth hackish:: n. hacker jargon as spoken outside
 the u.s., esp. in the british commonwealth. it is reported that
 commonwealth speakers are more likely to pronounce truncations like
 `char' and `soc', etc., as spelled (/char/, /sok/), as
 opposed to american /keir/ and /sohsh/. dots in {newsgroup}
 names tend to be pronounced more often (so soc.wibble is /sok dot
 wib'l/ rather than /sohsh wib'l/). the prefix {meta} may be
 pronounced /mee't*/; similarly, greek letter beta is often
 /bee't*/, zeta is often /zee't*/, and so forth. preferred
 {metasyntactic variable}s include {blurgle}, `eek',
 `ook', `frodo', and `bilbo'; `wibble',
 `wobble', and in emergencies `wubble'; `banana',
 `wombat', `frog', {fish}, and so on and on (see
 {foo}, sense ).
 alternatives to verb doubling include suffixes `-o-rama',
 `frenzy' (as in feeding frenzy), and `city' (examples: "barf
 city!" "hack-o-rama!" "core dump frenzy!"). finally, note
 that the american terms `parens', `brackets', and `braces' for (),
 [], and {} are uncommon; commonwealth hackish prefers
 `brackets', `square brackets', and `curly brackets'. also, the
 use of `pling' for {bang} is common outside the united states.
 see also {attoparsec}, {calculator}, {chemist},
 {console jockey}, {fish}, {go-faster stripes},
 {grunge}, {hakspek}, {heavy metal}, {leaky heap},
 {lord high fixer}, {loose bytes}, {muddie}, {nadger},
 {noddy}, {psychedelicware}, {plingnet}, {raster
 blaster}, {rtbm}, {seggie}, {spod}, {sun lounge},
 {terminal junkie}, {tick-list features}, {weeble},
 {weasel}, {yaba}, and notes or definitions under {bad
 thing}, {barf}, {bogus}, {bum}, {chase pointers},
 {cosmic rays}, {crippleware}, {crunch}, {dodgy},
 {gonk}, {hamster}, {hardwarily}, {mess-dos},
 {nybble}, {proglet}, {root}, {sex}, {tweak}, and
 {xyzzy}.
:compact: adj. of a design, describes the valuable property that it
 can all be apprehended at once in one's head. this generally means
 the thing created from the design can be used with greater facility
 and fewer errors than an equivalent tool that is not compact.
 compactness does not imply triviality or lack of power; for
 example, c is compact and fortran is not, but c is more powerful
 than fortran. designs become non-compact through accreting
 {feature}s and {cruft} that don't merge cleanly into the
 overall design scheme (thus, some fans of {classic c} maintain
 that ansi c is no longer compact).
:compiler jock: n. see {jock} (sense ).
:compress: [unix] vt. when used without a qualifier, generally
 refers to {crunch}ing of a file using a particular
 c implementation of compression by james a. woods et al. and
 widely circulated via {usenet}; use of {crunch} itself in
 this sense is rare among unix hackers. specifically, compress is
 built around the lempel-ziv-welch algorithm as described in "a
 technique for high performance data compression", terry a. welch,
 `ieee computer', vol. , no.  (june ), pp. -.
:compu$erve: n. see {ci$}. the synonyms compuspend and
compu$pend are also reported.
:computer confetti: n. syn. {chad}. though this term is common,
 this use of punched-card chad is not a good idea, as the pieces are
 stiff and have sharp corners that could injure the eyes. gls
 reports that he once attended a wedding at mit during which he and
 a few other guests enthusiastically threw chad instead of rice. the
 groom later grumbled that he and his bride had spent most of the
 evening trying to get the stuff out of their hair.
:computer geek: n. one who eats (computer) bugs for a living. one
 who fulfills all the dreariest negative stereotypes about hackers:
 an asocial, malodorous, pasty-faced monomaniac with all the
 personality of a cheese grater. cannot be used by outsiders
 without implied insult to all hackers; compare black-on-black usage
 of `nigger'. a computer geek may be either a fundamentally
 clueless individual or a proto-hacker in {larval stage}. also
 called `turbo nerd', `turbo geek'. see also {propeller head},
 {clustergeeking}, {geek out}, {wannabee}, {terminal
 junkie}, {spod}, {weenie}.
:computron: /kom'pyoo-tron`/ n. . a notional unit of computing
 power combining instruction speed and storage capacity, dimensioned
 roughly in instructions-per-second times megabytes-of-main-store
 times megabytes-of-mass-storage. "that machine can't run gnu
 emacs, it doesn't have enough computrons!" this usage is usually
 found in metaphors that treat computing power as a fungible
 commodity good, like a crop yield or diesel horsepower. see
 {bitty box}, {get a real computer!}, {toy}, {crank}.
 . a mythical subatomic particle that bears the unit quantity of
 computation or information, in much the same way that an electron
 bears one unit of electric charge (see also {bogon}). an
 elaborate pseudo-scientific theory of computrons has been developed
 based on the physical fact that the molecules in a solid object
 move more rapidly as it is heated. it is argued that an object
 melts because the molecules have lost their information about where
 they are supposed to be (that is, they have emitted computrons).
 this explains why computers get so hot and require air
 conditioning; they use up computrons. conversely, it should be
 possible to cool down an object by placing it in the path of a
 computron beam. it is believed that this may also explain why
 machines that work at the factory fail in the computer room: the
 computrons there have been all used up by the other hardware.
 (this theory probably owes something to the "warlock" stories
 by larry niven, the best known being "what good is a glass
 dagger?", in which magic is fueled by an exhaustible natural
 resource called `mana'.)
:condition out: vt. to prevent a section of code from being compiled
 by surrounding it with a conditional-compilation directive whose
 condition is always false. the {canonical} examples are `#if
 ' (or `#ifdef notdef', though some find this {bletcherous})
 and `#endif' in c. compare {comment out}.
:condom: n. . the protective plastic bag that accompanies .-inch
 microfloppy diskettes. rarely, also used of (paper) disk
 envelopes. unlike the write protect tab, the condom (when left on)
 not only impedes the practice of {sex} but has also been shown
 to have a high failure rate as drive mechanisms attempt to access
 the disk —- and can even fatally frustrate insertion. . the
 protective cladding on a {light pipe}.
:confuser: n. common soundalike slang for `computer'. usually
 encountered in compounds such as `confuser room', `personal
 confuser', `confuser guru'. usage: silly.
:connector conspiracy: [probably came into prominence with the
 appearance of the kl- (one model of the {pdp-}), none of
 whose connectors matched anything else] n. the tendency of
 manufacturers (or, by extension, programmers or purveyors of
 anything) to come up with new products that don't fit together
 with the old stuff, thereby making you buy either all new stuff or
 expensive interface devices. the kl- massbus connector was
 actually *patented* by dec, which reputedly refused to license
 the design and thus effectively locked third parties out of
 competition for the lucrative massbus peripherals market. this is
 a source of never-ending frustration for the diehards who maintain
 older pdp- or vax systems. their cpus work fine, but they are
 stuck with dying, obsolescent disk and tape drives with low
 capacity and high power requirements.
 (a closely related phenomenon, with a slightly different intent, is
 the habit manufacturers have of inventing new screw heads so that
 only designated persons, possessing the magic screwdrivers, can
 remove covers and make repairs or install options. the apple
 macintosh takes this one step further, requiring not only a hex
 wrench but a specialized case-cracking tool to open the box.)
 in these latter days of open-systems computing this term has fallen
 somewhat into disuse, to be replaced by the observation that
 "standards are great! there are so *many* of them to choose
 from!" compare {backward combatability}.
:cons: /konz/ or /kons/ [from lisp] . vt. to add a new element
 to a specified list, esp. at the top. "ok, cons picking a
 replacement for the console tty onto the agenda." . `cons up':
 vt. to synthesize from smaller pieces: "to cons up an example".
 in lisp itself, `cons' is the most fundamental operation for
 building structures. it takes any two objects and returns a
 `dot-pair' or two-branched tree with one object hanging from each
 branch. because the result of a cons is an object, it can be used
 to build binary trees of any shape and complexity. hackers think
 of it as a sort of universal constructor, and that is where the
 jargon meanings spring from.
:considered harmful: adj. edsger w. dijkstra's note in the
 march  `communications of the acm', "goto statement
 considered harmful", fired the first salvo in the structured
 programming wars. amusingly, the acm considered the resulting
 acrimony sufficiently harmful that it will (by policy) no longer
 print an article taking so assertive a position against a coding
 practice. in the ensuing decades, a large number of both serious
 papers and parodies have borne titles of the form "x
 considered y". the structured-programming wars eventually blew
 over with the realization that both sides were wrong, but use of
 such titles has remained as a persistent minor in-joke (the
 `considered silly' found at various places in this lexicon is
 related).
:console:: n. . the operator's station of a {mainframe}. in
 times past, this was a privileged location that conveyed godlike
 powers to anyone with fingers on its keys. under unix and other
 modern timesharing oses, such privileges are guarded by passwords
 instead, and the console is just the {tty} the system was booted
 from. some of the mystique remains, however, and it is traditional
 for sysadmins to post urgent messages to all users from the console
 (on unix, /dev/console). . on microcomputer unix boxes, the main
 screen and keyboard (as opposed to character-only terminals talking
 to a serial port). typically only the console can do real graphics
 or run {x}. see also {cty}.
:console jockey: n. see {terminal junkie}.
:content-free: [by analogy with techspeak `context-free'] adj.
 used of a message that adds nothing to the recipient's knowledge.
 though this adjective is sometimes applied to {flamage}, it more
 usually connotes derision for communication styles that exalt form
 over substance or are centered on concerns irrelevant to the
 subject ostensibly at hand. perhaps most used with reference to
 speeches by company presidents and other professional manipulators.
 "content-free? uh…that's anything printed on glossy
 paper." see also {four-color glossies}. "he gave a talk on
 the implications of electronic networks for postmodernism and the
 fin-de-siecle aesthetic. it was content-free."
:control-c: vi. . "stop whatever you are doing." from the
 interrupt character used on many operating systems to abort a
 running program. considered silly. . interj. among bsd unix
 hackers, the canonical humorous response to "give me a break!"
:control-o: vi. "stop talking." from the character used on some
 operating systems to abort output but allow the program to keep on
 running. generally means that you are not interested in hearing
 anything more from that person, at least on that topic; a standard
 response to someone who is flaming. considered silly. compare
 {control-s}.
:control-q: vi. "resume." from the ascii dc or {xon}
 character (the pronunciation /x-on/ is therefore also used), used
 to undo a previous {control-s}.
:control-s: vi. "stop talking for a second." from the ascii dc
 or xoff character (the pronunciation /x-of/ is therefore also
 used). control-s differs from {control-o} in that the person is
 asked to stop talking (perhaps because you are on the phone) but
 will be allowed to continue when you're ready to listen to him —-
 as opposed to control-o, which has more of the meaning of
 "shut up." considered silly.
:conway's law: prov. the rule that the organization of the software and
 the organization of the software team will be congruent; originally
 stated as "if you have four groups working on a compiler, you'll
 get a -pass compiler".
 this was originally promulgated by melvin conway, an early
 proto-hacker who wrote an assembler for the burroughs  called
 save. the name `save' didn't stand for anything; it was just that
 you lost fewer card decks and listings because they all had save
 written on them.
:cookbook: [from amateur electronics and radio] n. a book of small
code segments that the reader can use to do various {magic}
things in programs. one current example is the `{postscript}
language tutorial and cookbook' by adobe systems, inc
(addison-wesley, isbn ---) which has recipes for things
like wrapping text around arbitrary curves and making d fonts.
cookbooks, slavishly followed, can lead one into {voodoo
programming}, but are useful for hackers trying to {monkey up}
small programs in unknown languages. this is analogous to the role
of phrasebooks in human languages.
:cooked mode: [unix] n. the normal character-input mode, with
 interrupts enabled and with erase, kill and other special-character
 interpretations done directly by the tty driver. oppose {raw
 mode}, {rare mode}. this is techspeak under unix but jargon
 elsewhere; other operating systems often have similar mode
 distinctions, and the raw/rare/cooked way of describing them has
 spread widely along with the c language and other unix exports.
 most generally, `cooked mode' may refer to any mode of a
 system that does extensive preprocessing before presenting data to
 a program.
:cookie: n. a handle, transaction id, or other token of agreement
 between cooperating programs. "i give him a packet, he gives me
 back a cookie." the claim check you get from a dry-cleaning shop
 is a perfect mundane example of a cookie; the only thing it's
 useful for is to relate a later transaction to this one (so you get
 the same clothes back). compare {magic cookie}; see also
 {fortune cookie}.
:cookie bear: n. syn. {cookie monster}.
:cookie file: n. a collection of {fortune cookie}s in a format
 that facilitates retrieval by a fortune program. there are several
 different ones in public distribution, and site admins often
 assemble their own from various sources including this lexicon.
:cookie monster: [from "sesame street"] n. any of a family of
 early (s) hacks reported on {{tops-}}, {{its}}, {{multics}},
 and elsewhere that would lock up either the victim's terminal (on a
 time-sharing machine) or the {{console}} (on a batch
 {mainframe}), repeatedly demanding "i want a cookie". the
 required responses ranged in complexity from "cookie" through
 "have a cookie" and upward. see also {wabbit}.
:copious free time: [apple; orig. fr. the intro to tom lehrer's
 song "it makes a fellow proud to be a soldier"] n. . [used
 ironically to indicate the speaker's lack of the quantity in
 question] a mythical schedule slot for accomplishing tasks held to
 be unlikely or impossible. sometimes used to indicate that the
 speaker is interested in accomplishing the task, but believes that
 the opportunity will not arise. "i'll implement the automatic
 layout stuff in my copious free time." . [archly] time reserved
 for bogus or otherwise idiotic tasks, such as implementation of
 {chrome}, or the stroking of {suit}s. "i'll get back to him
 on that feature in my copious free time."
:copper: n. conventional electron-carrying network cable with a
core conductor of copper —- or aluminum! opposed to {light
pipe} or, say, a short-range microwave link.
:copy protection: n. a class of (occasionally clever) methods for
preventing incompetent pirates from stealing software and
legitimate customers from using it. considered silly.
:copybroke: /ko'pee-brohk/ adj. . [play on `copyright'] used
to describe an instance of a copy-protected program that has been
`broken'; that is, a copy with the copy-protection scheme
disabled. syn. {copywronged}. . copy-protected software
which is unusable because of some bit-rot or bug that has confused
the anti-piracy check.
:copyleft: /kop'ee-left/ [play on `copyright'] n. . the
copyright notice (`general public license') carried by {gnu}
{emacs} and other free software foundation software, granting reuse
and reproduction rights to all comers (but see also {general
public virus}). . by extension, any copyright notice intended to
achieve similar aims.
:copywronged: /ko'pee-rongd/ [play on `copyright'] adj. syn. for
 {copybroke}.
:core: n. main storage or ram. dates from the days of ferrite-core
 memory; now archaic as techspeak most places outside ibm, but also
 still used in the unix community and by old-time hackers or those
 who would sound like them. some derived idioms are quite current;
 `in core', for example, means `in memory' (as opposed to `on
 disk'), and both {core dump} and the `core image' or `core
 file' produced by one are terms in favor. commonwealth hackish
 prefers {store}.
:core cancer: n. a process which exhibits a slow but inexorable
 resource {leak} —- like a cancer, it kills by crowding out
 productive `tissue'.
:core dump: n. [common {iron age} jargon, preserved by unix]
 . [techspeak] a copy of the contents of {core}, produced when a
 process is aborted by certain kinds of internal error. . by
 extension, used for humans passing out, vomiting, or registering
 extreme shock. "he dumped core. all over the floor. what a
 mess." "he heard about x and dumped core." . occasionally
 used for a human rambling on pointlessly at great length; esp. in
 apology: "sorry, i dumped core on you". . a recapitulation of
 knowledge (compare {bits}, sense ). hence, spewing all one
 knows about a topic (syn. {brain dump}), esp. in a lecture or
 answer to an exam question. "short, concise answers are better
 than core dumps" (from the instructions to an exam at columbia).
 see {core}.
:core leak: n. syn. {memory leak}.
:core wars: n. a game between `assembler' programs in a
 simulated machine, where the objective is to kill your opponent's
 program by overwriting it. popularized by a. k. dewdney's column
 in `scientific american' magazine, this was actually
 devised by victor vyssotsky, robert morris, and dennis ritchie in
 the early s (their original game was called `darwin' and ran on
 a pdp- at bell labs). see {core}.
:corge: /korj/ [originally, the name of a cat] n. yet another
 {metasyntactic variable}, invented by mike gallaher and propagated
 by the {gosmacs} documentation. see {grault}.
:cosmic rays: n. notionally, the cause of {bit rot}. however, this is
 a semi-independent usage that may be invoked as a humorous way to
 {handwave} away any minor {randomness} that doesn't seem worth the
 bother of investigating. "hey, eric —- i just got a burst of
 garbage on my {tube}, where did that come from?" "cosmic rays, i
 guess." compare {sunspots}, {phase of the moon}. the british seem
 to prefer the usage `cosmic showers'; `alpha particles' is also
 heard, because stray alpha particles passing through a memory chip
 can cause single-bit errors (this becomes increasingly more likely
 as memory sizes and densities increase).
 factual note: alpha particles cause bit rot, cosmic rays do not
 (except occasionally in spaceborne computers). intel could not
 explain random bit drops in their early chips, and one hypothesis
 was cosmic rays. so they created the world's largest lead safe,
 using  tons of the stuff, and used two identical boards for
 testing. one was placed in the safe, one outside. the hypothesis
 was that if cosmic rays were causing the bit drops, they should see
 a statistically significant difference between the error rates on
 the two boards. they did not observe such a difference. further
 investigation demonstrated conclusively that the bit drops were due
 to alpha particle emissions from thorium (and to a much lesser
 degree uranium) in the encapsulation material. since it is
 impossible to eliminate these radioactives (they are uniformly
 distributed through the earth's crust, with the statistically
 insignificant exception of uranium lodes) it became obvious that
 you have to design memories to withstand these hits.
:cough and die: v. syn. {barf}. connotes that the program is
 throwing its hands up by design rather than because of a bug or
 oversight. "the parser saw a control-a in its input where it was
 looking for a printable, so it coughed and died." compare
 {die}, {die horribly}.
:cowboy: [sun, from william gibson's {cyberpunk} sf] n. synonym
 for {hacker}. it is reported that at sun this word is often
 said with reverence.
:cp/m:: /c-p-m/ n. [control program for microcomputers] an early
 microcomputer {os} written by hacker gary kildall for - and
 z-based machines, very popular in the late s but virtually
 wiped out by ms-dos after the release of the ibm pc in .
 legend has it that kildall's company blew its chance to write the
 os for the ibm pc because kildall decided to spend a day ibm's reps
 wanted to meet with him enjoying the perfect flying weather in his
 private plane. many of cp/m's features and conventions strongly
 resemble those of early dec operating systems such as
 {{tops-}}, os/, rsts, and rsx-. see {{ms-dos}},
 {operating system}.
:cpu wars: /c-p-u worz/ n. a  large-format comic by chas
 andres chronicling the attempts of the brainwashed androids of ipm
 (impossible to program machines) to conquer and destroy the
 peaceful denizens of hec (human engineered computers). this rather
 transparent allegory featured many references to {advent} and
 the immortal line "eat flaming death, minicomputer mongrels!"
 (uttered, of course, by an ipm stormtrooper). it is alleged that
 the author subsequently received a letter of appreciation on ibm
 company stationery from the head of ibm's thomas j. watson research
 laboratories (then, as now, one of the few islands of true
 hackerdom in the ibm archipelago). the lower loop of the b in the
 ibm logo, it is said, had been carefully whited out. see {eat
 flaming death}.
:crack root: v. to defeat the security system of a unix machine and
 gain {root} privileges thereby; see {cracking}.
:cracker: n. one who breaks security on a system. coined ca. 
 by hackers in defense against journalistic misuse of {hacker}
 (q.v., sense ). an earlier attempt to establish `worm' in this
 sense around — on usenet was largely a failure.
 both these neologisms reflected a strong revulsion against the
 theft and vandalism perpetrated by cracking rings. while it is
 expected that any real hacker will have done some playful cracking
 and knows many of the basic techniques, anyone past {larval
 stage} is expected to have outgrown the desire to do so.
 thus, there is far less overlap between hackerdom and crackerdom
 than the {mundane} reader misled by sensationalistic journalism
 might expect. crackers tend to gather in small, tight-knit, very
 secretive groups that have little overlap with the huge, open
 poly-culture this lexicon describes; though crackers often like to
 describe *themselves* as hackers, most true hackers consider
 them a separate and lower form of life.
 ethical considerations aside, hackers figure that anyone who can't
 imagine a more interesting way to play with their computers than
 breaking into someone else's has to be pretty {losing}. some
 other reasons crackers are looked down on are discussed in the
 entries on {cracking} and {phreaking}. see also
 {samurai}, {dark-side hacker}, and {hacker ethic,
 the}.
:cracking: n. the act of breaking into a computer system; what a
 {cracker} does. contrary to widespread myth, this does not
 usually involve some mysterious leap of hackerly brilliance, but
 rather persistence and the dogged repetition of a handful of fairly
 well-known tricks that exploit common weaknesses in the security of
 target systems. accordingly, most crackers are only mediocre
 hackers.
:crank: [from automotive slang] vt. verb used to describe the
 performance of a machine, especially sustained performance. "this
 box cranks (or, cranks at) about  megaflops, with a burst mode
 of twice that on vectorized operations."
:crash: . n. a sudden, usually drastic failure. most often said
 of the {system} (q.v., sense ), esp. of magnetic disk drives
 (the term originally described what happened when the air gap of a
 winchester disk collapses). "three {luser}s lost their files
 in last night's disk crash." a disk crash that involves the
 read/write heads dropping onto the surface of the disks and
 scraping off the oxide may also be referred to as a `head crash',
 whereas the term `system crash' usually, though not always,
 implies that the operating system or other software was at fault.
 . v. to fail suddenly. "has the system just crashed?"
 "something crashed the os!" see {down}. also used
 transitively to indicate the cause of the crash (usually a person
 or a program, or both). "those idiots playing {spacewar}
 crashed the system." . vi. sometimes said of people hitting the
 sack after a long {hacking run}; see {gronk out}.
:crash and burn: vi.,n. a spectacular crash, in the mode of the
 conclusion of the car-chase scene in the movie "bullitt" and
 many subsequent imitators (compare {die horribly}). sun-
 monitors losing the flyback transformer and lightning strikes on
 vax-/ backplanes are notable crash and burn generators. the
 construction `crash-and-burn machine' is reported for a computer
 used exclusively for alpha or {beta} testing, or reproducing
 bugs (i.e., not for development). the implication is that it
 wouldn't be such a disaster if that machine crashed, since only the
 testers would be inconvenienced.
:crawling horror: n. ancient crufty hardware or software that is
 kept obstinately alive by forces beyond the control of the hackers
 at a site. like {dusty deck} or {gonkulator}, but connotes
 that the thing described is not just an irritation but an active
 menace to health and sanity. "mostly we code new stuff in c, but
 they pay us to maintain one big fortran ii application from
 nineteen-sixty-x that's a real crawling horror…." compare
:cray: /kray/ n. . (properly, capitalized) one of the line of
 supercomputers designed by cray research. . any supercomputer at
 all. . the {canonical} {number-crunching} machine.
 the term is actually the lowercased last name of seymour cray, a
 noted computer architect and co-founder of the company. numerous
 vivid legends surround him, some true and some admittedly invented
 by cray research brass to shape their corporate culture and image.
:cray instability: n. a shortcoming of a program or algorithm that
 manifests itself only when a large problem is being run on a
 powerful machine (see {cray}). generally more subtle than bugs
 that can be detected in smaller problems running on a workstation
 or mini.
:crayola: /kray-oh'l*/ n. a super-mini or -micro computer that
 provides some reasonable percentage of supercomputer performance
 for an unreasonably low price. might also be a {killer micro}.
:crayon: n. . someone who works on cray supercomputers. more
 specifically, it implies a programmer, probably of the cdc ilk,
 probably male, and almost certainly wearing a tie (irrespective of
 gender). systems types who have a unix background tend not to be
 described as crayons. . a {computron} (sense ) that
 participates only in {number-crunching}. . a unit of
 computational power equal to that of a single cray-. there is a
 standard joke about this that derives from an old crayola crayon
 promotional gimmick: when you buy  crayons you get a free
 sharpener.
:creationism: n. the (false) belief that large, innovative software
 designs can be completely specified in advance and then painlessly
 magicked out of the void by the normal efforts of a team of
 normally talented programmers. in fact, experience has shown
 repeatedly that good designs arise only from evolutionary,
 exploratory interaction between one (or at most a small handful of)
 exceptionally able designer(s) and an active user population —-
 and that the first try at a big new idea is always wrong.
 unfortunately, because these truths don't fit the planning models
 beloved of {management}, they are generally ignored.
:creep: v. to advance, grow, or multiply inexorably. in hackish usage
 this verb has overtones of menace and silliness, evoking the
 creeping horrors of low-budget monster movies.
:creeping elegance: n. describes a tendency for parts of a design to
 become {elegant} past the point of diminishing return. this
 often happens at the expense of the less interesting parts of the
 design, the schedule, and other things deemed important in the
 {real world}. see also {creeping featurism}, {second-system
 effect}, {tense}.
:creeping featurism: /kree'ping fee'chr-izm/ n. . describes a
 systematic tendency to load more {chrome} and {feature}s onto
 systems at the expense of whatever elegance they may have possessed
 when originally designed. see also {feeping creaturism}. "you
 know, the main problem with {bsd} unix has always been creeping
 featurism." . more generally, the tendency for anything
 complicated to become even more complicated because people keep
 saying "gee, it would be even better if it had this feature too".
 (see {feature}.) the result is usually a patchwork because it
 grew one ad-hoc step at a time, rather than being planned.
 planning is a lot of work, but it's easy to add just one extra
 little feature to help someone … and then another … and
 another…. when creeping featurism gets out of hand, it's
 like a cancer. usually this term is used to describe computer
 programs, but it could also be said of the federal government, the
 irs  form, and new cars. a similar phenomenon sometimes
 afflicts conscious redesigns; see {second-system effect}. see
 also {creeping elegance}.
:creeping featuritis: /kree'ping fee'-chr-i:`t*s/ n. variant of
 {creeping featurism}, with its own spoonerization: `feeping
 creaturitis'. some people like to reserve this form for the
 disease as it actually manifests in software or hardware, as
 opposed to the lurking general tendency in designers' minds.
 (after all, -ism means `condition' or `pursuit of', whereas
 -itis usually means `inflammation of'.)
:cretin: /kret'n/ or /kree'tn/ n. congenital {loser}; an obnoxious
 person; someone who can't do anything right. it has been observed
 that many american hackers tend to favor the british pronunciation
 /kre'tn/ over standard american /kree'tn/; it is thought this may
 be due to the insidious phonetic influence of monty python's flying
 circus.
:cretinous: /kret'n-*s/ or /kreet'n-*s/ adj. wrong; stupid;
 non-functional; very poorly designed. also used pejoratively of
 people. see {dread high-bit disease} for an example.
 approximate synonyms: {bletcherous}, `bagbiting' (see
 {bagbiter}), {losing}, {brain-damaged}.
:crippleware: n. . software that has some important functionality
 deliberately removed, so as to entice potential users to pay for a
 working version. . [cambridge] {guiltware} that exhorts you to
 donate to some charity (compare {careware}). . hardware
 deliberately crippled, which can be upgraded to a more expensive
 model by a trivial change (e.g., cutting a jumper).
 an excellent example of crippleware (sense ) is intel's sx
 chip, which is a standard dx chip with the co-processor
 disabled. to upgrade, you buy another  chip with everything
 *but* the co-processor disabled. when you put them together
 you have two crippled chips doing the work of one. don't you love
 intel?
:critical mass: n. in physics, the minimum amount of fissionable
 material required to sustain a chain reaction. of a software
 product, describes a condition of the software such that fixing one
 bug introduces one plus {epsilon} bugs. when software achieves
 critical mass, it can only be discarded and rewritten.
:crlf: /ker'l*f/, sometimes /kru'l*f/ or /c-r-l-f/ n. (often
 capitalized as `crlf') a carriage return (cr) followed by a line
 feed (lf). more loosely, whatever it takes to get you from the
 end of one line of text to the beginning of the next line. see
 {newline}, {terpri}. under {{unix}} influence this usage
 has become less common (unix uses a bare line feed as its `crlf').
:crock: [from the obvious mainstream scatologism] n. . an awkward
 feature or programming technique that ought to be made cleaner.
 using small integers to represent error codes without the
 program interpreting them to the user (as in, for example, unix
 `make()', which returns code  for a process that dies due
 to {segfault}). . a technique that works acceptably, but which
 is quite prone to failure if disturbed in the least, for example
 depending on the machine opcodes having particular bit patterns so
 that you can use instructions as data words too; a tightly woven,
 almost completely unmodifiable structure. see {kluge},
 {brittle}. also in the adjectives `crockish' and
 `crocky', and the nouns `crockishness' and `crockitude'.
:cross-post: [usenet] vi. to post a single article simultaneously to
 several newsgroups. distinguished from posting the article
 repeatedly, once to each newsgroup, which causes people to see it
 multiple times (this is very bad form). gratuitous cross-posting
 without a followup-to line directing responses to a single followup
 group is frowned upon, as it tends to cause {followup} articles
 to go to inappropriate newsgroups when people respond to only one
 part of the original posting.
:crudware: /kruhd'weir/ n. pejorative term for the hundreds of
 megabytes of low-quality {freeware} circulated by user's groups
 and bbs systems in the micro-hobbyist world. "yet *another*
 set of disk catalog utilities for {{ms-dos}}? what crudware!"
:cruft: /kruhft/ [back-formation from {crufty}] . n. an
 unpleasant substance. the dust that gathers under your bed is
 cruft; the tmrc dictionary correctly noted that attacking it with a
 broom only produces more. . n. the results of shoddy
 construction. . vt. [from `hand cruft', pun on `hand craft']
 to write assembler code for something normally (and better) done by
 a compiler (see {hand-hacking}). . n. excess; superfluous
 junk. esp. used of redundant or superseded code.
 this term is one of the oldest in the jargon and no one is sure of
 its etymology, but it is suggestive that there is a cruft hall at
 harvard university which is part of the old physics building; it's
 said to have been the physics department's radar lab during wwii.
 to this day (early ) the windows appear to be full of random
 techno-junk. mit or lincoln labs people may well have coined the
 term as a knock on the competition.
:cruft together: vt. (also `cruft up') to throw together
 something ugly but temporarily workable. like vt. {kluge up},
 but more pejorative. "there isn't any program now to reverse all
 the lines of a file, but i can probably cruft one together in about
  minutes." see {hack together}, {hack up}, {kluge up},
 {crufty}.
:cruftsmanship: /kruhfts'm*n-ship / n. [from {cruft}] the
 antithesis of craftsmanship.
:crufty: /kruhf'tee/ [origin unknown; poss. from `crusty' or
 `cruddy'] adj. . poorly built, possibly over-complex. the
 {canonical} example is "this is standard old crufty dec
 software". in fact, one fanciful theory of the origin of
 `crufty' holds that was originally a mutation of `crusty'
 applied to dec software so old that the `s' characters were tall
 and skinny, looking more like `f' characters. . unpleasant,
 especially to the touch, often with encrusted junk. like spilled
 coffee smeared with peanut butter and catsup. . generally
 unpleasant. . (sometimes spelled `cruftie') n. a small crufty
 object (see {frob}); often one that doesn't fit well into the
 scheme of things. "a lisp property list is a good place to store
 crufties (or, collectively, {random} cruft)."
:crumb: n. two binary digits; a {quad}. larger than a {bit},
 smaller than a {nybble}. considered silly. syn. {tayste}.
:crunch: . vi. to process, usually in a time-consuming or
 complicated way. connotes an essentially trivial operation that is
 nonetheless painful to perform. the pain may be due to the
 triviality's being embedded in a loop from  to ,,,.
 "fortran programs do mostly {number-crunching}." . vt. to
 reduce the size of a file by a complicated scheme that produces bit
 configurations completely unrelated to the original data, such as
 by a huffman code. (the file ends up looking like a paper document
 would if somebody crunched the paper into a wad.) since such
 compression usually takes more computations than simpler methods
 such as run-length encoding, the term is doubly appropriate. (this
 meaning is usually used in the construction `file crunch(ing)' to
 distinguish it from {number-crunching}.) see {compress}.
 . n. the character `#'. used at xerox and cmu, among other
 places. see {{ascii}}. . vt. to squeeze program source into a
 minimum-size representation that will still compile or execute.
 the term came into being specifically for a famous program on the
 bbc micro that crunched basic source in order to make it run more
 quickly (it was a wholly interpretive basic, so the number of
 characters mattered). {obfuscated c contest} entries are often
 crunched; see the first example under that entry.
:cruncha cruncha cruncha: /kruhn'ch* kruhn'ch* kruhn'ch*/ interj.
 an encouragement sometimes muttered to a machine bogged down in a
 serious {grovel}. also describes a notional sound made by
 groveling hardware. see {wugga wugga}, {grind} (sense ).
:cryppie: /krip'ee/ n. a cryptographer. one who hacks or implements
 cryptographic software or hardware.
:ctss: /c-t-s-s/ n. compatible time-sharing system. an early
 () experiment in the design of interactive time-sharing
 operating systems, ancestral to {{multics}}, {{unix}}, and
 {{its}}. the name {{its}} (incompatible time-sharing system)
 was a hack on ctss, meant both as a joke and to express some basic
 differences in philosophy about the way i/o services should be
 presented to user programs.
:cty: /sit'ee/ or /c-t-y/ n. [mit] the terminal physically
 associated with a computer's system {{console}}. the term is a
 contraction of `console {tty}', that is, `console teletype'.
 this {{its}}- and {{tops-}}-associated term has become less
 common, as most unix hackers simply refer to the cty as `the
 console'.
:cube: n. . [short for `cubicle'] a module in the open-plan
 offices used at many programming shops. "i've got the manuals in
 my cube." . a next machine (which resembles a matte-black cube).
:cubing: [parallel with `tubing'] vi. . hacking on an ipsc (intel
 personal supercomputer) hypercube. "louella's gone cubing
 *again*!!" . hacking rubik's cube or related puzzles,
 either physically or mathematically. . an indescribable form of
 self-torture (see sense  or ).
:cursor dipped in x: n. there are a couple of metaphors in english
of the form `pen dipped in x' (perhaps the most common values of x
are `acid', `bile', and `vitriol'). these map over neatly to this
hackish usage (the cursor being what moves, leaving letters behind,
when one is composing on-line). "talk about a {nastygram}! he
must've had his cursor dipped in acid when he wrote that one!"
:cuspy: /kuhs'pee/ [wpi: from the dec abbreviation cusp, for `commonly
used system program', i.e., a utility program used by many people]
adj. . (of a program) well-written. . functionally excellent. a
program that performs well and interfaces well to users is cuspy.
see {rude}. . [nyu] said of an attractive woman, especially one
regarded as available. implies a certain curvaceousness.
:cut a tape: vi. to write a software or document distribution on
 magnetic tape for shipment. has nothing to do with physically
 cutting the medium! early versions of this lexicon claimed that
 one never analogously speaks of `cutting a disk', but this has
 since been reported as live usage. related slang usages are
 mainstream business's `cut a check', the recording industry's
 `cut a record', and the military's `cut an order'.
 all of these usages reflect physical processes in obsolete
 recording and duplication technologies. the first stage in
 manufacturing an old-style vinyl record involved cutting grooves in
 a stamping die with a precision lathe. more mundanely, the
 dominant technology for mass duplication of paper documents in
 pre-photocopying days involved "cutting a stencil", punching away
 portions of the wax overlay on a silk screen. more directly,
 paper tape with holes punched in it was an inportant early storage
 medium.
:cybercrud: /si:'ber-kruhd/ [coined by ted nelson] n. obfuscatory
 tech-talk. verbiage with a high {mego} factor. the computer
 equivalent of bureaucratese.
:cyberpunk: /si:'ber-puhnk/ [orig. by sf writer bruce bethke
 and/or editor gardner dozois] n.,adj. a subgenre of sf launched
 in  by william gibson's epoch-making novel `neuromancer'
 (though its roots go back through vernor vinge's `true names'
 (see "{true names … and other dangers}" in
 appendix c) to john brunner's  novel `the shockwave
 rider'). gibson's near-total ignorance of computers and the
 present-day hacker culture enabled him to speculate about the role
 of computers and hackers in the future in ways hackers have since
 found both irritatingly na"ive and tremendously stimulating.
 gibson's work was widely imitated, in particular by the short-lived
 but innovative "max headroom" tv series. see
 {cyberspace}, {ice}, {jack in}, {go flatline}.
:cyberspace: /si:'ber-spays/ n. . notional `information-space'
 loaded with visual cues and navigable with brain-computer
 interfaces called `cyberspace decks'; a characteristic prop of
 {cyberpunk} sf. at the time of this writing (mid-),
 serious efforts to construct {virtual reality} interfaces
 modeled explicitly on gibsonian cyberspace are already under way,
 using more conventional devices such as glove sensors and binocular
 tv headsets. few hackers are prepared to deny outright the
 possibility of a cyberspace someday evolving out of the network
 (see {network, the}). . occasionally, the metaphoric location
 of the mind of a person in {hack mode}. some hackers report
 experiencing strong eidetic imagery when in hack mode;
 interestingly, independent reports from multiple sources suggest
 that there are common features to the experience. in particular,
 the dominant colors of this subjective `cyberspace' are often
 gray and silver, and the imagery often involves constellations of
 marching dots, elaborate shifting patterns of lines and angles, or
 moire patterns.
:cycle: . n. the basic unit of computation. what every hacker
 wants more of (noted hacker bill gosper describes himself as a
 "cycle junkie"). one can describe an instruction as taking so
 many `clock cycles'. often the computer can access its
 memory once on every clock cycle, and so one speaks also of
 `memory cycles'. these are technical meanings of {cycle}. the
 jargon meaning comes from the observation that there are only so
 many cycles per second, and when you are sharing a computer the
 cycles get divided up among the users. the more cycles the
 computer spends working on your program rather than someone else's,
 the faster your program will run. that's why every hacker wants
 more cycles: so he can spend less time waiting for the computer to
 respond. . by extension, a notional unit of *human* thought
 power, emphasizing that lots of things compete for the typical
 hacker's think time. "i refused to get involved with the rubik's
 cube back when it was big. knew i'd burn too many cycles on it if
 i let myself." . vt. syn. {bounce}, { reset}; from the
 phrase `cycle power'. "cycle the machine again, that serial port's
 still hung."
:cycle crunch: n. a situation where the number of people trying to
 use the computer simultaneously has reached the point where no one
 can get enough cycles because they are spread too thin and the
 system has probably begun to {thrash}. this is an inevitable
 result of parkinson's law applied to timesharing. usually the only
 solution is to buy more computer. happily, this has rapidly become
 easier in recent years, so much so that the very term `cycle
 crunch' now has a faintly archaic flavor; most hackers now use
 workstations or personal computers as opposed to traditional
 timesharing systems.
:cycle drought: n. a scarcity of cycles. it may be due to a {cycle
 crunch}, but it could also occur because part of the computer is
 temporarily not working, leaving fewer cycles to go around.
 "the {high moby} is {down}, so we're running with only
 half the usual amount of memory. there will be a cycle drought
 until it's fixed."
:cycle of reincarnation: [coined by ivan sutherland ca. ] n.
 term used to refer to a well-known effect whereby function in a
 computing system family is migrated out to special-purpose
 peripheral hardware for speed, then the peripheral evolves toward
 more computing power as it does its job, then somebody notices that
 it is inefficient to support two asymmetrical processors in the
 architecture and folds the function back into the main cpu, at
 which point the cycle begins again. several iterations of this
 cycle have been observed in graphics-processor design, and at least
 one or two in communications and floating-point processors. also
 known as `the wheel of life', `the wheel of samsara', and other
 variations of the basic hindu/buddhist theological idea.
:cycle server: n. a powerful machine that exists primarily for
 running large {batch} jobs. implies that interactive tasks such as
 editing are done on other machines on the network, such as
 workstations.
:d. c. power lab: n. the former site of {{sail}}. hackers thought
 this was very funny because the obvious connection to electrical
 engineering was nonexistent —- the lab was named for a donald c.
 power. compare {marginal hacks}.
:daemon: /day'mn/ or /dee'mn/ [from the mythological meaning,
 later rationalized as the acronym `disk and execution monitor'] n.
 a program that is not invoked explicitly, but lies dormant waiting
 for some condition(s) to occur. the idea is that the perpetrator
 of the condition need not be aware that a daemon is lurking (though
 often a program will commit an action only because it knows that it
 will implicitly invoke a daemon). for example, under {{its}}
 writing a file on the {lpt} spooler's directory would invoke the
 spooling daemon, which would then print the file. the advantage is
 that programs wanting (in this example) files printed need not
 compete for access to the {lpt}. they simply enter their
 implicit requests and let the daemon decide what to do with them.
 daemons are usually spawned automatically by the system, and may
 either live forever or be regenerated at intervals. daemon and
 {demon} are often used interchangeably, but seem to have
 distinct connotations. the term `daemon' was introduced to
 computing by {ctss} people (who pronounced it /dee'mon/) and
 used it to refer to what its called a {dragon}. although the
 meaning and the pronunciation have drifted, we think this glossary
 reflects current () usage.
:dangling pointer: n. a reference that doesn't actually lead
 anywhere (in c and some other languages, a pointer that doesn't
 actually point at anything valid). usually this is because it
 formerly pointed to something that has moved or disappeared. used
 as jargon in a generalization of its techspeak meaning; for
 example, a local phone number for a person who has since moved to
 the other coast is a dangling pointer.
:dark-side hacker: n. a criminal or malicious hacker; a
 {cracker}. from george lucas's darth vader, "seduced by the
 dark side of the force". the implication that hackers form a
 sort of elite of technological jedi knights is intended. oppose
 {samurai}.
:datamation: /day`t*-may'sh*n/ n. a magazine that many hackers
 assume all {suit}s read. used to question an unbelieved quote,
 as in "did you read that in `datamation?'" it used to
 publish something hackishly funny every once in a while, like the
 original paper on {come from} in , but it has since become much
 more exclusively {suit}-oriented and boring.
:day mode: n. see {phase} (sense ). used of people only.
:dd: /dee-dee/ [unix: from ibm {jcl}] vt. equivalent to
 {cat} or {blt}. this was originally the name of a unix copy
 command with special options suitable for block-oriented devices.
 often used in heavy-handed system maintenance, as in "let's
 `dd' the root partition onto a tape, then use the boot prom to
 load it back on to a new disk". the unix `dd()' was
 designed with a weird, distinctly non-unixy keyword option syntax
 reminiscent of ibm system/ jcl (which had an elaborate dd `data
 definition' specification for i/o devices); though the command
 filled a need, the interface design was clearly a prank. the
 jargon usage is now very rare outside unix sites and now nearly
 obsolete even there, as `dd()' has been {deprecated} for a
 long time (though it has no exact replacement). replaced by
 {blt} or simple english `copy'.
:ddt: /d-d-t/ n. . generic term for a program that assists in
 debugging other programs by showing individual machine instructions
 in a readable symbolic form and letting the user change them. in
 this sense the term ddt is now archaic, having been widely
 displaced by `debugger' or names of individual programs like
 `dbx', `adb', `gdb', or `sdb'. . [its] under
 mit's fabled {{its}} operating system, ddt (running under the alias
 hactrn) was also used as the {shell} or top level command
 language used to execute other programs. . any one of several
 specific ddts (sense ) supported on early dec hardware. the dec
 pdp- reference handbook () contained a footnote on the first
 page of the documentation for ddt which illuminates the origin of
 the term:
 historical footnote: ddt was developed at mit for the pdp-
 computer in . at that time ddt stood for "dec debugging tape".
 since then, the idea of an on-line debugging program has propagated
 throughout the computer industry. ddt programs are now available
 for all dec computers. since media other than tape are now
 frequently used, the more descriptive name "dynamic debugging
 technique" has been adopted, retaining the ddt abbreviation.
 confusion between ddt- and another well known pesticide,
 dichloro-diphenyl-trichloroethane (c-h-cl) should be minimal
 since each attacks a different, and apparently mutually exclusive,
 class of bugs.
 sadly, this quotation was removed from later editions of the
 handbook after the {suit}s took over and dec became much more
 `businesslike'.
 the history above is known to many old-time hackers. but there's
 more: peter samson, author of the {tmrc} lexicon, reports that
 he named `ddt' after a similar tool on the tx- computer, the
 direct ancestor of the pdp- built at mit's lincoln lab in .
 the debugger on that ground-breaking machine (the first
 transistorized computer) rejoiced in the name flit (flexowriter
 interrogation tape).
:de-rezz: /dee-rez'/ [from `de-resolve' via the movie "tron"]
 (also `derez') . vi. to disappear or dissolve; the image that goes
 with it is of an object breaking up into raster lines and static
 and then dissolving. occasionally used of a person who seems to
 have suddenly `fuzzed out' mentally rather than physically.
 usage: extremely silly, also rare. this verb was actually invented
 as *fictional* hacker jargon, and adopted in a spirit of irony
 by real hackers years after the fact. . vt. on a macintosh, many
 program structures (including the code itself) are managed in small
 segments of the program file known as `resources'. the standard
 resource compiler is rez. the standard resource decompiler is
 derez. thus, decompiling a resource is `derezzing'. usage: very
 common.
:dead: adj. . non-functional; {down}; {crash}ed. especially
 used of hardware. . at xerox parc, software that is working but
 not undergoing continued development and support.
:dead code: n. routines that can never be accessed because all calls
 to them have been removed, or code that cannot be reached because
 it is guarded by a control structure that provably must always
 transfer control somewhere else. the presence of dead code may
 reveal either logical errors due to alterations in the program or
 significant changes in the assumptions and environment of the
 program (see also {software rot}); a good compiler should report
 dead code so a maintainer can think about what it means. syn.
 {grunge}.
:deadbeef: /ded-beef/ n. the hexadecimal word-fill pattern for
 freshly allocated memory (decimal -) under a number of
 ibm environments, including the rs/. as in "your program is
 deadbeef" (meaning gone, aborted, flushed from memory); if you
 start from an odd half-word boundary, of course, you have
:deadlock: n. . [techspeak] a situation wherein two or more
 processes are unable to proceed because each is waiting for one of
 the others to do something. a common example is a program
 communicating to a server, which may find itself waiting for output
 from the server before sending anything more to it, while the
 server is similarly waiting for more input from the controlling
 program before outputting anything. (it is reported that this
 particular flavor of deadlock is sometimes called a `starvation
 deadlock', though the term `starvation' is more properly used for
 situations where a program can never run simply because it never
 gets high enough priority. another common flavor is
 `constipation', where each process is trying to send stuff to
 the other but all buffers are full because nobody is reading
 anything.) see {deadly embrace}. . also used of
 deadlock-like interactions between humans, as when two people meet
 in a narrow corridor, and each tries to be polite by moving aside
 to let the other pass, but they end up swaying from side to side
 without making any progress because they always both move the same
 way at the same time.
:deadly embrace: n. same as {deadlock}, though usually used only when
 exactly  processes are involved. this is the more popular term in
 europe, while {deadlock} predominates in the united states.
:death code: n. a routine whose job is to set everything in the
 computer —- registers, memory, flags, everything —- to zero,
 including that portion of memory where it is running; its last act
 is to stomp on its own "store zero" instruction. death code
 isn't very useful, but writing it is an interesting hacking
 challenge on architectures where the instruction set makes it
 possible, such as the pdp- (it has also been done on the dg nova).
 death code is much less common, and more anti-social, on modern
 multi-user machines. it was very impressive on earlier hardware
 that provided front panel switches and displays to show register
 and memory contents, esp. when these were used to prod the corpse
 to see why it died.
 perhaps the ultimate death code is on the ti  series, where all
 registers are actually in ram, and the instruction "store immediate
 " has the opcode "". the pc will immediately wrap around core as
 many times as it can until a user hits halt. any empty memory
 location is death code. worse, the manufacturer recommended use of
 this instruction in startup code (which would be in rom and
 therefore survive).
:death star: [from the movie "star wars"] . the at&t corporate
 logo, which appears on computers sold by at&t and bears an uncanny
 resemblance to the `death star' in the movie. this usage is
 particularly common among partisans of {bsd} unix, who tend to
 regard the at&t versions as inferior and at&t as a bad guy. copies
 still circulate of a poster printed by mt. xinu showing a starscape
 with a space fighter labeled . bsd streaking away from a broken
 at&t logo wreathed in flames. . at&t's internal magazine,
 `focus', uses `death star' for an incorrectly done at&t logo
 in which the inner circle in the top left is dark instead of light
 —- a frequent result of dark-on-light logo images.
:dec wars: n. a  {usenet} posting by alan hastings and steve
 tarr spoofing the "star wars" movies in hackish terms. some
 years later, esr (disappointed by hastings and tarr's failure to
 exploit a great premise more thoroughly) posted a -times-longer
 complete rewrite called "unix wars"; the two are often
 confused.
:dechead: /dek'hed/ n. . a dec {field servoid}. not flattering.
 . [from `deadhead'] a grateful dead fan working at dec.
:deckle: /dek'l/ [from dec- and {nybble}; the original
 spelling seems to have been `decle'] n. two {nickle}s;
  bits. reported among developers for mattel's gi  (the
 intellivision games processor), a chip with -bit-wide ram but
 -bit-wide rom.
:deep hack mode: n. see {hack mode}.
:deep magic: [poss. from c. s. lewis's "narnia" books] n. an
awesomely arcane technique central to a program or system, esp. one
not generally published and available to hackers at large (compare
{black art}); one that could only have been composed by a true
{wizard}. compiler optimization techniques and many aspects of
{os} design used to be {deep magic}; many techniques in
cryptography, signal processing, graphics, and ai still are.
compare {heavy wizardry}. esp. found in comments of the form
"deep magic begins here…". compare {voodoo programming}.
:deep space: n. . describes the notional location of any program
 that has gone {off the trolley}. esp. used of programs that
 just sit there silently grinding long after either failure or some
 output is expected. "uh oh. i should have gotten a prompt ten
 seconds ago. the program's in deep space somewhere." compare
 {buzz}, {catatonic}, {hyperspace}. . the metaphorical
 location of a human so dazed and/or confused or caught up in some
 esoteric form of {bogosity} that he or she no longer responds
 coherently to normal communication. compare {page out}.
:defenestration: [from the traditional czechoslovak method of
 assassinating prime ministers, via sf fandom] n. . proper karmic
 retribution for an incorrigible punster. "oh, ghod, that was
 *awful*!" "quick! defenestrate him!" . the act of
 exiting a window system in order to get better response time from a
 full-screen program. this comes from the dictionary meaning of
 `defenestrate', which is to throw something out a window. . the
 act of discarding something under the assumption that it will
 improve matters. "i don't have any disk space left." "well,
 why don't you defenestrate that  megs worth of old core dumps?"
 . [proposed] the requirement to support a command-line interface.
 "it has to run on a vt." "curses! i've been
 defenestrated!"
:defined as: adj. in the role of, usually in an organization-chart
 sense. "pete is currently defined as bug prioritizer." compare
 {logical}.
:dehose: /dee-hohz/ vt. to clear a {hosed} condition.
:delint: /dee-lint/ v. to modify code to remove problems detected
 when {lint}ing. confusingly, this is also referred to as
 `linting' code.
:delta: n. . [techspeak] a quantitative change, especially a small
 or incremental one (this use is general in physics and
 engineering). "i just doubled the speed of my program!" "what
 was the delta on program size?" "about  percent." (he
 doubled the speed of his program, but increased its size by only 
 percent.) . [unix] a {diff}, especially a {diff} stored
 under the set of version-control tools called sccs (source code
 control system) or rcs (revision control system). . n. a small
 quantity, but not as small as {epsilon}. the jargon usage of
 {delta} and {epsilon} stems from the traditional use of these
 letters in mathematics for very small numerical quantities,
 particularly in `epsilon-delta' proofs in limit theory (as in the
 differential calculus). the term {delta} is often used, once
 {epsilon} has been mentioned, to mean a quantity that is
 slightly bigger than {epsilon} but still very small. "the cost
 isn't epsilon, but it's delta" means that the cost isn't totally
 negligible, but it is nevertheless very small. common
 constructions include `within delta of —-', `within epsilon of
 —-': that is, close to and even closer to.
:demented: adj. yet another term of disgust used to describe a
 program. the connotation in this case is that the program works as
 designed, but the design is bad. said, for example, of a program
 that generates large numbers of meaningless error messages,
 implying that it is on the brink of imminent collapse. compare
 {wonky}, {bozotic}.
:demigod: n. a hacker with years of experience, a national reputation,
 and a major role in the development of at least one design, tool,
 or game used by or known to more than half of the hacker community.
 to qualify as a genuine demigod, the person must recognizably
 identify with the hacker community and have helped shape it. major
 demigods include ken thompson and dennis ritchie (co-inventors of
 {{unix}} and {c}) and richard m. stallman (inventor of
 {emacs}). in their hearts of hearts, most hackers dream of
 someday becoming demigods themselves, and more than one major
 software project has been driven to completion by the author's
 veiled hopes of apotheosis. see also {net.god}, {true-hacker}.
:demo: /de'moh/ [short for `demonstration'] . v. to
 demonstrate a product or prototype. a far more effective way of
 inducing bugs to manifest than any number of {test} runs,
 especially when important people are watching. . n. the act of
 demoing. . n. esp. as `demo version', can refer to either a
 special version of a program (frequently with some features
 crippled) which is distributed at little or no cost to the user for
 demonstration purposes.
:demo mode: [sun] n. . the state of being {heads down} in order
 to finish code in time for a {demo}, usually due yesterday.
 . a mode in which video games sit there by themselves running
 through a portion of the game, also known as `attract mode'.
 some serious {app}s have a demo mode they use as a screen saver,
 or may go through a demo mode on startup (for example, the
 microsoft windows opening screen —- which lets you impress your
 neighbors without actually having to put up with {microsloth
 windows}).
:demon: n. . [mit] a portion of a program that is not invoked
 explicitly, but that lies dormant waiting for some condition(s) to
 occur. see {daemon}. the distinction is that demons are
 usually processes within a program, while daemons are usually
 programs running on an operating system. demons are particularly
 common in ai programs. for example, a knowledge-manipulation
 program might implement inference rules as demons. whenever a new
 piece of knowledge was added, various demons would activate (which
 demons depends on the particular piece of data) and would create
 additional pieces of knowledge by applying their respective
 inference rules to the original piece. these new pieces could in
 turn activate more demons as the inferences filtered down through
 chains of logic. meanwhile, the main program could continue with
 whatever its primary task was. . [outside mit] often used
 equivalently to {daemon} —- especially in the {{unix}} world,
 where the latter spelling and pronunciation is considered mildly
 archaic.
:depeditate: /dee-ped'*-tayt/ [by (faulty) analogy with
 `decapitate'] vt. humorously, to cut off the feet of. when one is
 using some computer-aided typesetting tools, careless placement of
 text blocks within a page or above a rule can result in chopped-off
 letter descenders. such letters are said to have been depeditated.
:deprecated: adj. said of a program or feature that is considered
 obsolescent and in the process of being phased out, usually in
 favor of a specified replacement. deprecated features can,
 unfortunately, linger on for many years. this term appears with
 distressing frequency in standards documents when the committees
 which write them decide that a sufficient number of users have
 written code which depends on specific features which are out of
 favor.
:deserves to lose: adj. said of someone who willfully does the
 {wrong thing}; humorously, if one uses a feature known to be
 {marginal}. what is meant is that one deserves the consequences
 of one's {losing} actions. "boy, anyone who tries to use
 {mess-dos} deserves to {lose}!" ({{its}} fans used to say this
 of {{unix}}; many still do.) see also {screw}, {chomp},
 {bagbiter}.
:desk check: n.,v. to {grovel} over hardcopy of source code,
 mentally simulating the control flow; a method of catching bugs.
 no longer common practice in this age of on-screen editing, fast
 compiles, and sophisticated debuggers —- though some maintain
 stoutly that it ought to be. compare {eyeball search},
 {vdiff}, {vgrep}.
:devil book: n. `the design and implementation of the .bsd
 unix operating system', by samuel j. leffler, marshall kirk
 mckusick, michael j. karels, and john s. quarterman (addison-wesley
 publishers, ) —- the standard reference book on the internals
 of {bsd} unix. so called because the cover has a picture
 depicting a little devil (a visual play on {daemon}) in
 sneakers, holding a pitchfork (referring to one of the
 characteristic features of unix, the `fork()' system call).
:devo: /dee'voh/ [orig. in-house jargon at symbolics] n. a person in a
 development group. see also {doco} and {mango}.
:dickless workstation: n. extremely pejorative hackerism for
 `diskless workstation', a class of botches including the sun /
 and other machines designed exclusively to network with an
 expensive central disk server. these combine all the disadvantages
 of time-sharing with all the disadvantages of distributed personal
 computers; typically, they cannot even {boot} themselves without
 help (in the form of some kind of {breath-of-life packet}) from
 the server.
:dictionary flame: [usenet] n. an attempt to sidetrack a debate
 away from issues by insisting on meanings for key terms that
 presuppose a desired conclusion or smuggle in an implicit premise.
 a common tactic of people who prefer argument over definitions to
 disputes about reality.
:diddle: . vt. to work with or modify in a not particularly
 serious manner. "i diddled a copy of {advent} so it didn't
 double-space all the time." "let's diddle this piece of code and
 see if the problem goes away." see {tweak} and {twiddle}.
 . n. the action or result of diddling. see also {tweak},
 {twiddle}, {frob}.
:die: v. syn. {crash}. unlike {crash}, which is used
primarily of hardware, this verb is used of both hardware and
software. see also {go flatline}, {casters-up mode}.
:die horribly: v. the software equivalent of {crash and burn},
and the preferred emphatic form of {die}. "the converter
choked on an ff in its input and died horribly".
:diff: /dif/ n. . a change listing, especially giving differences
 between (and additions to) source code or documents (the term is
 often used in the plural `diffs'). "send me your diffs for the
 jargon file!" compare {vdiff}. . specifically, such a listing
 produced by the `diff()' command, esp. when used as
 specification input to the `patch()' utility (which can
 actually perform the modifications; see {patch}). this is a
 common method of distributing patches and source updates in the
 unix/c world. see also {vdiff}, {mod}.
:digit: n. an employee of digital equipment corporation. see also
 {vax}, {vms}, {pdp-}, {{tops-}}, {dechead}, {double
 deckers}, {field circus}.
:dike: vt. to remove or disable a portion of something, as a wire
 from a computer or a subroutine from a program. a standard slogan
 is "when in doubt, dike it out". (the implication is that it is
 usually more effective to attack software problems by reducing
 complexity than by increasing it.) the word `dikes' is widely
 used among mechanics and engineers to mean `diagonal cutters',
 esp. a heavy-duty metal-cutting device, but may also refer to a
 kind of wire-cutters used by electronics techs. to `dike
 something out' means to use such cutters to remove something.
 indeed, the tmrc dictionary defined dike as "to attack with
 dikes". among hackers this term has been metaphorically extended
 to informational objects such as sections of code.
:ding: n.,vi. . synonym for {feep}. usage: rare among hackers,
 but commoner in the {real world}. . `dinged': what happens
 when someone in authority gives you a minor bitching about
 something, esp. something trivial. "i was dinged for having a
 messy desk."
:dink: /dink/ n. said of a machine that has the {bitty box}
 nature; a machine too small to be worth bothering with —-
 sometimes the system you're currently forced to work on. first
 heard from an mit hacker working on a cp/m system with k, in
 reference to any  system, then from fans of -bit
 architectures about -bit machines. "gnumacs will never work on
 that dink machine." probably derived from mainstream `dinky',
 which isn't sufficiently pejorative.
:dinosaur: n. . any hardware requiring raised flooring and special
 power. used especially of old minis and mainframes, in contrast
 with newer microprocessor-based machines. in a famous quote from
 the  unix expo, bill joy compared the mainframe in the massive
 ibm display with a grazing dinosaur "with a truck outside pumping
 its bodily fluids through it". ibm was not amused. compare
 {big iron}; see also {mainframe}. . [ibm] a very conservative
 user; a {zipperhead}.
:dinosaur pen: n. a traditional {mainframe} computer room complete with
 raised flooring, special power, its own ultra-heavy-duty air
 conditioning, and a side order of halon fire extinguishers. see
 {boa}.
:dinosaurs mating: n. said to occur when yet another {big iron}
 merger or buyout occurs; reflects a perception by hackers that
 these signal another stage in the long, slow dying of the
 {mainframe} industry. in its glory days of the s, it was
 `ibm and the seven dwarves': burroughs, control data, general
 electric, honeywell, ncr, rca, and univac. rca and ge sold out
 early, and it was `ibm and the bunch' (burroughs, univac, ncr,
 control data, and honeywell) for a while. honeywell was bought out
 by bull; burroughs merged with univac to form unisys (in  —-
 this was when the phrase `dinosaurs mating' was coined); and as
 this is written (early ) at&t is attempting to recover from a
 disastrously bad first six years in the hardware industry by
 absorbing ncr. more such earth-shaking unions of doomed giants
 seem inevitable.
:dirtball: [xerox parc] n. a small, perhaps struggling outsider;
 not in the major or even the minor leagues. for example, "xerox
 is not a dirtball company".
 [outsiders often observe in the parc culture an institutional
 arrogance which usage of this term exemplifies. the brilliance and
 scope of parc's contributions to computer science have been such
 that this superior attitude is not much resented. —- esr]
:dirty power: n. electrical mains voltage that is unfriendly to
 the delicate innards of computers. spikes, {drop-outs}, average
 voltage significantly higher or lower than nominal, or just plain
 noise can all cause problems of varying subtlety and severity
 (these are collectively known as {power hit}s).
:disclaimer: n. [usenet] n. statement ritually appended to many usenet
 postings (sometimes automatically, by the posting software) reiterating
 the fact (which should be obvious, but is easily forgotten) that the
 article reflects its author's opinions and not necessarily those of
 the organization running the machine through which the article
 entered the network.
:discordianism: /dis-kor'di-*n-ism/ n. the veneration of
 {eris}, a.k.a. discordia; widely popular among hackers.
 discordianism was popularized by robert shea and robert anton
 wilson's `{illuminatus!}' trilogy as a sort of
 self-subverting dada-zen for westerners —- it should on no account
 be taken seriously but is far more serious than most jokes.
 consider, for example, the fifth commandment of the pentabarf, from
 `principia discordia': "a discordian is prohibited of
 believing what he reads." discordianism is usually connected with
 an elaborate conspiracy theory/joke involving millennia-long
 warfare between the anarcho-surrealist partisans of eris and a
 malevolent, authoritarian secret society called the illuminati.
 see {religion} under {appendix b}, {church of the
 subgenius}, and {ha ha only serious}.
:disk farm: n. (also {laundromat}) a large room or rooms filled
 with disk drives (esp. {washing machine}s).
:display hack: n. a program with the same approximate purpose as a
 kaleidoscope: to make pretty pictures. famous display hacks
 include {munching squares}, {smoking clover}, the bsd unix
 `rain()' program, `worms()' on miscellaneous unixes,
 and the {x} `kaleid()' program. display hacks can also be
 implemented without programming by creating text files containing
 numerous escape sequences for interpretation by a video terminal;
 one notable example displayed, on any vt, a christmas tree with
 twinkling lights and a toy train circling its base. the {hack
 value} of a display hack is proportional to the esthetic value of
 the images times the cleverness of the algorithm divided by the
 size of the code. syn. {psychedelicware}.
:dissociated press: [play on `associated press'; perhaps inspired
 by a reference in the  bugs bunny cartoon "what's up,
 doc?"] n. an algorithm for transforming any text into potentially
 humorous garbage even more efficiently than by passing it through a
 {marketroid}. you start by printing any n consecutive
 words (or letters) in the text. then at every step you search for
 any random occurrence in the original text of the last n
 words (or letters) already printed and then print the next word or
 letter. {emacs} has a handy command for this. here is a short
 example of word-based dissociated press applied to an earlier
 version of this jargon file:
 wart: n. a small, crocky {feature} that sticks out of
 an array (c has no checks for this). this is relatively
 benign and easy to spot if the phrase is bent so as to be
 not worth paying attention to the medium in question.
 here is a short example of letter-based dissociated press applied
 to the same source:
 window sysiwyg: n. a bit was named aften /bee't*/ prefer
 to use the other guy's re, especially in every cast a
 chuckle on neithout getting into useful informash speech
 makes removing a featuring a move or usage actual
 abstractionsidered interj. indeed spectace logic or problem!
 a hackish idle pastime is to apply letter-based dissociated press
 to a random body of text and {vgrep} the output in hopes of finding
 an interesting new word. (in the preceding example, `window
 sysiwyg' and `informash' show some promise.) iterated applications
 of dissociated press usually yield better results. similar
 techniques called `travesty generators' have been employed with
 considerable satirical effect to the utterances of usenet flamers;
 see {pseudo}.
:distribution: n. . a software source tree packaged for
 distribution; but see {kit}. . a vague term encompassing
 mailing lists and usenet newsgroups (but not {bbs} {fora}); any
 topic-oriented message channel with multiple recipients. . an
 information-space domain (usually loosely correlated with
 geography) to which propagation of a usenet message is restricted;
 a much-underutilized feature.
:do protocol: [from network protocol programming] vi. to perform an
 interaction with somebody or something that follows a clearly
 defined procedure. for example, "let's do protocol with the
 check" at a restaurant means to ask for the check, calculate the
 tip and everybody's share, collect money from everybody, generate
 change as necessary, and pay the bill. see {protocol}.
:doc: /dok/ n. common spoken and written shorthand for
 `documentation'. often used in the plural `docs' and in the
 construction `doc file' (documentation available on-line).
:doco: /do'koh/ [orig. in-house jargon at symbolics] n. a
 documentation writer. see also {devo} and {mango}.
:documentation:: n. the multiple kilograms of macerated, pounded,
 steamed, bleached, and pressed trees that accompany most modern
 software or hardware products (see also {tree-killer}). hackers
 seldom read paper documentation and (too) often resist writing it;
 they prefer theirs to be terse and on-line. a common comment on
 this is "you can't {grep} dead trees". see {drool-proof
 paper}, {verbiage}.
:dodgy: adj. syn. with {flaky}. preferred outside the u.s.
:dogcow: /dog'kow/ n. see {moof}.
:dogwash: /dog'wosh/ [from a quip in the `urgency' field of a very
 optional software change request, ca. . it was something like
 "urgency: wash your dog first".] . n. a project of minimal
 priority, undertaken as an escape from more serious work. . v.
 to engage in such a project. many games and much {freeware} get
 written this way.
:domainist: /doh-mayn'ist/ adj. . said of an {{internet
 address}} (as opposed to a {bang path}) because the part to the
 right of the `@' specifies a nested series of `domains';
 for example, eric@snark.thyrsus.com specifies the machine
 called snark in the subdomain called thyrsus within the
 top-level domain called com. see also {big-endian}, sense .
 . said of a site, mailer, or routing program which knows how to
 handle domainist addresses. . said of a person (esp. a site
 admin) who prefers domain addressing, supports a domainist mailer,
 or prosyletizes for domainist addressing and disdains {bang
 path}s. this is now () semi-obsolete, as most sites have
 converted.
:don't do that, then!: [from an old doctor's office joke about a
 patient with a trivial complaint] stock response to a user
 complaint. "when i type control-s, the whole system comes to a
 halt for thirty seconds." "don't do that, then!" (or "so don't
 do that!"). compare {rtfm}.
:dongle: /dong'gl/ n. . a security or {copy protection}
 device for commercial microcomputer programs consisting of a
 serialized eprom and some drivers in a d- connector shell, which
 must be connected to an i/o port of the computer while the program
 is run. programs that use a dongle query the port at startup and
 at programmed intervals thereafter, and terminate if it does not
 respond with the dongle's programmed validation code. thus, users
 can make as many copies of the program as they want but must pay
 for each dongle. the idea was clever, but it was initially a
 failure, as users disliked tying up a serial port this way. most
 dongles on the market today () will pass data through the port
 and monitor for {magic} codes (and combinations of status lines)
 with minimal if any interference with devices further down the line
 —- this innovation was necessary to allow daisy-chained dongles
 for multiple pieces of software. the devices are still not widely
 used, as the industry has moved away from copy-protection schemes
 in general. . by extension, any physical electronic key or
 transferrable id required for a program to function. see
 {dongle-disk}.
 [note: in early , advertising copy from rainbow technologies (a
 manufacturer of dongles) included a claim that the word derived from
 "don gall", allegedly the inventor of the device. the company's
 receptionist will cheerfully tell you that the story is a myth
 invented for the ad copy. nevertheless, i expect it to haunt my
 life as a lexicographer for at least the next ten years. —-esr]
:dongle-disk: /don'gl disk/ n. see {dongle}; a `dongle-disk'
 is a floppy disk which is required in order to perform some task.
 some contain special coding that allows an application to identify
 it uniquely, others *are* special code that does something
 that normally-resident programs don't or can't. (for example,
 at&t's "unix pc" would only come up in {root mode} with a
 special boot disk.) also called a `key disk'.
:donuts: n.obs. a collective noun for any set of memory bits. this
 is extremely archaic and may no longer be live jargon; it dates
 from the days of ferrite-{core} memories in which each bit was
 implemented by a doughnut-shaped magnetic flip-flop.
:doorstop: n. used to describe equipment that is non-functional and
 halfway expected to remain so, especially obsolete equipment kept
 around for political reasons or ostensibly as a backup. "when we
 get another wyse- in here, that adm  will turn into a doorstop."
 compare {boat anchor}.
:dot file: [unix] n. a file which is not visible by default to
 normal directory-browsing tools (on unix, files named with a
 leading dot are, by convention, not normally presented in directory
 listings). many programs define one or more dot files in which
 startup or configuration information may be optionally recorded; a
 user can customize the program's behavior by creating the
 appropriate file in the current or home directory. (therefore, dot
 files tend to {creep} —- with every nontrivial application
 program defining at least one, a user's home directory can be
 filled with scores of dot files, of course without the user's
 really being aware of it.) see also {rc file}.
:double bucky: adj. using both the ctrl and meta keys. "the
 command to burn all leds is double bucky f."
 this term originated on the stanford extended-ascii keyboard, and
 was later taken up by users of the {space-cadet keyboard} at
 mit. a typical mit comment was that the stanford {bucky bits}
 (control and meta shifting keys) were nice, but there weren't
 enough of them; you could type only  different characters on a
 stanford keyboard. an obvious way to address this was simply to
 add more shifting keys, and this was eventually done; but a
 keyboard with that many shifting keys is hard on touch-typists, who
 don't like to move their hands away from the home position on the
 keyboard. it was half-seriously suggested that the extra shifting
 keys be implemented as pedals; typing on such a keyboard would be
 very much like playing a full pipe organ. this idea is mentioned
 in a parody of a very fine song by jeffrey moss called
 "rubber duckie", which was published in `the sesame
 street songbook' (simon and schuster , isbn ---x).
 these lyrics were written on may , , in celebration of the
 stanford keyboard:
 double bucky
double bucky, you're the one!
you make my keyboard lots of fun.
double bucky, an additional bit or two:
(vo-vo-de-o!)
control and meta, side by side,
augmented ascii, nine bits wide!
double bucky! half a thousand glyphs, plus a few!
oh,
i sure wish that i
had a couple of
bits more!
perhaps a
set of pedals to
make the number of
bits four:
double double bucky!
double bucky, left and right
or'd together, outta sight!
double bucky, i'd like a whole word of
double bucky, i'm happy i heard of
double bucky, i'd like a whole word of you!
 —- the great quux (with apologies to jeffrey moss)
 [this, by the way, is an excellent example of computer {filk}
 —- esr] see also {meta bit}, {cokebottle}, and {quadruple
 bucky}.
:double deckers: n. used to describe married couples in which both
 partners work for digital equipment corporation.
:doubled sig: [usenet] n. a {sig block} that has been included
 twice in a {usenet} article or, less commonly, in an electronic
 mail message. an article or message with a doubled sig can be
 caused by improperly configured software. more often, however, it
 reveals the author's lack of experience in electronic
 communication. see {biff}, {pseudo}.
:down: . adj. not operating. "the up escalator is down" is
 considered a humorous thing to say, and "the elevator is down"
 always means "the elevator isn't working" and never refers to
 what floor the elevator is on. with respect to computers, this
 usage has passed into the mainstream; the extension to other kinds
 of machine is still hackish. . `go down' vi. to stop
 functioning; usually said of the {system}. the message from the
 {console} that every hacker hates to hear from the operator is
 "the system will go down in  minutes". . `take down',
 `bring down' vt. to deactivate purposely, usually for repair work
 or {pm}. "i'm taking the system down to work on that bug in the
 tape drive." occasionally one hears the word `down' by itself
 used as a verb in this vt. sense. see {crash}; oppose {up}.
:download: vt. to transfer data or (esp.) code from a larger `host'
 system (esp. a {mainframe}) over a digital comm link to a smaller
 `client' system, esp. a microcomputer or specialized peripheral.
 oppose {upload}.
 however, note that ground-to-space communications has its own usage
 rule for this term. space-to-earth transmission is always download
 and the reverse upload regardless of the relative size of the
 computers involved. so far the in-space machines have invariably
 been smaller; thus the upload/download distinction has been
 reversed from its usual sense.
:dp: /d-p/ n. . data processing. listed here because,
 according to hackers, use of the term marks one immediately as a
 {suit}. see {dper}. . common abbrev for {dissociated
 press}.
:dpb: /d*-pib'/ [from the pdp- instruction set] vt. to plop
 something down in the middle. usage: silly. "dpb
 yourself into that couch there." the connotation would be that
 the couch is full except for one slot just big enough for you to
 sit in. dpb means `deposit byte', and was the name of a pdp-
 instruction that inserts some bits into the middle of some other
 bits. this usage has been kept alive by the common lisp function
 of the same name.
:dper: /dee-pee-er/ n. data processor. hackers are absolutely
 amazed that {suit}s use this term self-referentially.
 "*computers* process data, not people!" see {dp}.
:dragon: n. [mit] a program similar to a {daemon}, except that
 it is not invoked at all, but is instead used by the system to
 perform various secondary tasks. a typical example would be an
 accounting program, which keeps track of who is logged in,
 accumulates load-average statistics, etc. under its, many
 terminals displayed a list of people logged in, where they were,
 what they were running, etc., along with some random picture (such
 as a unicorn, snoopy, or the enterprise), which was generated by
 the `name dragon'. usage: rare outside mit —- under unix and most
 other oses this would be called a `background demon' or
 {daemon}. the best-known unix example of a dragon is
 `cron()'. at sail, they called this sort of thing a
 `phantom'.
:dragon book: n. the classic text `compilers: principles,
 techniques and tools', by alfred v. aho, ravi sethi, and jeffrey d.
 ullman (addison-wesley ; isbn ---), so called because
 of the cover design featuring a dragon labeled `complexity of
 compiler design' and a knight bearing the lance `lalr parser
 generator' among his other trappings. this one is more
 specifically known as the `red dragon book' (); an earlier
 edition, sans sethi and titled `principles of compiler design'
 (alfred v. aho and jeffrey d. ullman; addison-wesley, ; isbn
 ---), was the `green dragon book' (). (also `new
 dragon book', `old dragon book'.) the horsed knight and the
 green dragon were warily eying each other at a distance; now the
 knight is typing (wearing gauntlets!) at a terminal showing a
 video-game representation of the red dragon's head while the rest
 of the beast extends back in normal space. see also {{book
 titles}}.
:drain: [ibm] v. syn. for {flush} (sense ). has a connotation
 of finality about it; one speaks of draining a device before taking
 it offline.
:dread high-bit disease: n. a condition endemic to prime (a.k.a.
 prme) minicomputers that results in all the characters having
 their high (x) bit on rather than off. this of course makes
 transporting files to other systems much more difficult, not to
 mention talking to true -bit devices. folklore had it that prime
 adopted the reversed--bit convention in order to save  cents per
 serial line per machine; prime old-timers, on the other hand, claim
 they inherited the disease from honeywell via customer nasa's
 compatibility requirements and struggled manfully to cure it.
 whoever was responsible, this probably qualifies as one of the
 most {cretinous} design tradeoffs ever made. see {meta bit}.
 a few other machines have exhibited similar brain damage.
:drecnet: /drek'net/ [from yiddish/german `dreck', meaning
 dirt] n. deliberate distortion of decnet, a networking protocol
 used in the {vms} community. so called because dec helped write
 the ethernet specification and then (either stupidly or as a
 malignant customer-control tactic) violated that spec in the design
 of drecnet in a way that made it incompatible. see also
 {connector conspiracy}.
:driver: n. . the {main loop} of an event-processing program;
 the code that gets commands and dispatches them for execution.
 . [techspeak] in `device driver', code designed to handle a
 particular peripheral device such as a magnetic disk or tape unit.
 . in the tex world and the computerized typesetting world in
 general, `driver' also means a program that translates some
 device-independent or other common format to something a real
 device can actually understand.
:droid: n. a person (esp. a low-level bureaucrat or
 service-business employee) exhibiting most of the following
 characteristics: (a) na"ive trust in the wisdom of the parent
 organization or `the system'; (b) a propensity to believe
 obvious nonsense emitted by authority figures (or computers!);
 blind faith; (c) a rule-governed mentality, one unwilling or unable
 to look beyond the `letter of the law' in exceptional
 situations; and (d) no interest in fixing that which is broken; an
 "it's not my job, man" attitude.
 typical droid positions include supermarket checkout assistant and
 bank clerk; the syndrome is also endemic in low-level government
 employees. the implication is that the rules and official
 procedures constitute software that the droid is executing. this
 becomes a problem when the software has not been properly debugged.
 the term `droid mentality' is also used to describe the mindset
 behind this behavior. compare {suit}, {marketroid}; see
 {-oid}.
:drool-proof paper: n. documentation that has been obsessively {dumbed
 down}, to the point where only a {cretin} could bear to read it, is
 said to have succumbed to the `drool-proof paper syndrome' or to
 have been `written on drool-proof paper'. for example, this is
 an actual quote from apple's laserwriter manual: "do not expose
 your laserwriter to open fire or flame."
:drop on the floor: vt. to react to an error condition by silently
discarding messages or other valuable data. "the gateway
ran out of memory, so it just started dropping packets on the
floor." also frequently used of faulty mail and netnews relay
sites that lose messages. see also {black hole}, {bit bucket}.
:drop-ins: [prob. by analogy with {drop-outs}] n. spurious
characters appearing on a terminal or console as a result of line
noise or a system malfunction of some sort. esp. used when these
are interspersed with one's own typed input. compare
{drop-outs}.
:drop-outs: n. . a variety of `power glitch' (see {glitch});
 momentary  voltage on the electrical mains. . missing characters
 in typed input due to software malfunction or system saturation
 (this can happen under unix when a bad connection to a modem swamps
 the processor with spurious character interrupts). . mental
 glitches; used as a way of describing those occasions when the mind
 just seems to shut down for a couple of beats. see {glitch},
 {fried}.
:drugged: adj. (also `on drugs') . conspicuously stupid,
 heading toward {brain-damaged}. often accompanied by a
 pantomime of toking a joint (but see {appendix b}). . of hardware,
 very slow relative to normal performance.
:drum: adj,n. ancient techspeak term referring to slow,
cylindrical magnetic media which were once state-of-the-art
mass-storage devices. under bsd unix the disk partition used for
swapping is still called `/dev/drum'; this has led to
considerable humor and not a few straight-faced but utterly bogus
`explanations' getting foisted on {newbie}s. see also "{the
story of mel, a real programmer}" in {appendix a}.
:drunk mouse syndrome: (also `mouse on drugs') n. a malady
 exhibited by the mouse pointing device of some computers. the
 typical symptom is for the mouse cursor on the screen to move in
 random directions and not in sync with the motion of the actual
 mouse. can usually be corrected by unplugging the mouse and
 plugging it back again. another recommended fix for optical mice
 is to rotate your mouse pad  degrees.
 at xerox parc in the s, most people kept a can of copier
 cleaner (isopropyl alcohol) at their desks. when the steel ball on
 the mouse had picked up enough {cruft} to be unreliable, the
 mouse was doused in cleaner, which restored it for a while.
 however, this operation left a fine residue that accelerated the
 accumulation of cruft, so the dousings became more and more
 frequent. finally, the mouse was declared `alcoholic' and sent
 to the clinic to be dried out in a cfc ultrasonic bath.
:duff's device: n. the most dramatic use yet seen of {fall
 through} in c, invented by tom duff when he was at lucasfilm.
 trying to {bum} all the instructions he could out of an inner
 loop that copied data serially onto an output port, he decided to
 {unroll} it. he then realized that the unrolled version could
 be implemented by *interlacing* the structures of a switch and
 a loop:
 register n = (count + ) / ; /* count >  assumed */
switch (count % )
case : do { *to = *from++;
case : *to = *from++;
case : *to = *from++;
case : *to = *from++;
case : *to = *from++;
case : *to = *from++;
case : *to = *from++;
case : *to = *from++;
} while (—n > );
 having verified that the device is valid portable c, duff announced
 it. c's default {fall through} in case statements has long been
 its most controversial single feature; duff observed that "this
 code forms some sort of argument in that debate, but i'm not sure
 whether it's for or against."
:dumb terminal: n. a terminal which is one step above a {glass tty},
 having a minimally-addressable cursor but no on-screen editing or
 other features which are claimed by a {smart terminal}. once upon a
 time, when glass ttys were common and addressable cursors were
 something special, what is now called a dumb terminal could pass for
 a smart terminal.
:dumbass attack: /duhm'as *-tak'/ [purdue] n. notional cause of a
 novice's mistake made by the experienced, especially one made while
 running as {root} under unix, e.g., typing `rm -r *' or
 `mkfs' on a mounted file system. compare {adger}.
:dumbed down: adj. simplified, with a strong connotation of
 *over*simplified. often, a {marketroid} will insist that
 the interfaces and documentation of software be dumbed down after
 the designer has burned untold gallons of midnight oil making it
 smart. this creates friction. see {user-friendly}.
:dump: n. . an undigested and voluminous mass of information about
 a problem or the state of a system, especially one routed to the
 slowest available output device (compare {core dump}), and most
 especially one consisting of hex or octal {runes} describing the
 byte-by-byte state of memory, mass storage, or some file. in
 {elder days}, debugging was generally done by `groveling over'
 a dump (see {grovel}); increasing use of high-level languages
 and interactive debuggers has made this uncommon, and the term
 `dump' now has a faintly archaic flavor. . a backup. this
 usage is typical only at large timesharing installations.
:dumpster diving: /dump'-ster di:'-ving/ n. . the practice of
 sifting refuse from an office or technical installation to extract
 confidential data, especially security-compromising information
 (`dumpster' is an americanism for what is elsewhere called a
 `skip'). back in at&t's monopoly days, before paper shredders
 became common office equipment, phone phreaks (see {phreaking})
 used to organize regular dumpster runs against phone company plants
 and offices. discarded and damaged copies of at&t internal manuals
 taught them much. the technique is still rumored to be a favorite
 of crackers operating against careless targets. . the practice of
 raiding the dumpsters behind buildings where producers and/or
 consumers of high-tech equipment are located, with the expectation
 (usually justified) of finding discarded but still-valuable
 equipment to be nursed back to health in some hacker's den.
 experienced dumpster-divers not infrequently accumulate basements
 full of moldering (but still potentially useful) {cruft}.
:dup killer: /d[y]oop kill'r/ [fidonet] n. software that is
 supposed to detect and delete duplicates of a message that may
 have reached the fidonet system via different routes.
:dup loop: /d[y]oop loop/ (also `dupe loop') [fidonet] n. an
 incorrectly configured system or network gateway may propagate
 duplicate messages on one or more {echo}es, with different
 identification information that renders {dup killer}s
 ineffective. if such a duplicate message eventually reaches a
 system through which it has already passed (with the original
 identification information), all systems passed on the way back to
 that system are said to be involved in a {dup loop}.
:dusty deck: n. old software (especially applications) which one is
 obliged to remain compatible with (or to maintain). the term
 implies that the software in question is a holdover from card-punch
 days. used esp. when referring to old scientific and
 {number-crunching} software, much of which was written in fortran
 and very poorly documented but is believed to be too expensive to
 replace. see {fossil}.
:dwim: /dwim/ [acronym, `do what i mean'] . adj. able to guess,
sometimes even correctly, the result intended when bogus input was
provided. . n.,obs. the bbnlisp/interlisp function that attempted
to accomplish this feat by correcting many of the more common
errors. see {hairy}. . occasionally, an interjection hurled
at a balky computer, esp. when one senses one might be tripping
over legalisms (see {legalese}).
 warren teitelman originally wrote dwim to fix his typos and
 spelling errors, so it was somewhat idiosyncratic to his style, and
 would often make hash of anyone else's typos if they were
 stylistically different. this led a number of victims of dwim to
 claim the acronym stood for `damn warren's infernal
 machine!'.
 in one notorious incident, warren added a dwim feature to the
 command interpreter used at xerox parc. one day another hacker
 there typed `delete *$' to free up some disk space. (the
 editor there named backup files by appending `$' to the
 original file name, so he was trying to delete any backup files
 left over from old editing sessions.) it happened that there
 weren't any editor backup files, so dwim helpfully reported
 `*$ not found, assuming you meant 'delete *'.' it then started
 to delete all the files on the disk! the hacker managed to stop it
 with a {vulcan nerve pinch} after only a half dozen or so files
 were lost.
 the hacker later said he had been sorely tempted to go to warren's
 office, tie warren down in his chair in front of his workstation,
 and then type `delete *$' twice.
 dwim is often suggested in jest as a desired feature for a complex
 program; it is also occasionally described as the single
 instruction the ideal computer would have. back when proofs of
 program correctness were in vogue, there were also jokes about
 `dwimc' (do what i mean, correctly). a related term, more often
 seen as a verb, is dtrt (do the right thing); see {right
 thing}.
:dynner: /din'r/  bits, by analogy with {nybble} and
 {{byte}}. usage: rare and extremely silly. see also {playte},
 {tayste}, {crumb}.
:earthquake: [ibm] n. the ultimate real-world shock test for
 computer hardware. hackish sources at ibm deny the rumor that the
 bay area quake of  was initiated by the company to test
 quality-assurance procedures at its california plants.
:easter egg: [from the custom of the easter egg hunt observed in
 the u.s. and many psparts of europe] n. . a message hidden in the
 object code of a program as a joke, intended to be found by persons
 disassembling or browsing the code. . a message, graphic, or
 sound effect emitted by a program (or, on a pc, the bios rom) in
 response to some undocumented set of commands or keystrokes,
 intended as a joke or to display program credits. one well-known
 early easter egg found in a couple of oses caused them to respond
 to the command `make love' with `not war?'. many
 personal computers have much more elaborate eggs hidden in rom,
 including lists of the developers' names, political exhortations,
 snatches of music, and (in one case) graphics images of the entire
 development team.
:easter egging: [ibm] n. the act of replacing unrelated parts more or
 less at random in hopes that a malfunction will go away. hackers
 consider this the normal operating mode of {field circus} techs and
 do not love them for it. compare {shotgun debugging}.
:eat flaming death: imp. a construction popularized among hackers by
 the infamous {cpu wars} comic; supposed to derive from a famously
 turgid line in a wwii-era anti-nazi propaganda comic that ran
 "eat flaming death, non-aryan mongrels!" or something of the sort
 (however, it is also reported that the firesign theater's
  album "in the next world, you're on your own" included the
 phrase "eat flaming death, fascist media pigs"; this may have been
 an influence). used in humorously overblown expressions of
 hostility. "eat flaming death, {{ebcdic}} users!"
:ebcdic:: /eb's*-dik/, /eb'see`dik/, or /eb'k*-dik/ [abbreviation,
 extended binary coded decimal interchange code] n. an alleged
 character set used on ibm {dinosaur}s. it exists in at least six
 mutually incompatible versions, all featuring such delights as
 non-contiguous letter sequences and the absence of several ascii
 punctuation characters fairly important for modern computer
 languages (exactly which characters are absent varies according to
 which version of ebcdic you're looking at). ibm adapted ebcdic
 from {{punched card}} code in the early s and promulgated it
 as a customer-control tactic (see {connector conspiracy}),
 spurning the already established ascii standard. today, ibm claims
 to be an open-systems company, but ibm's own description of the
 ebcdic variants and how to convert between them is still internally
 classified top-secret, burn-before-reading. hackers blanch at the
 very *name* of ebcdic and consider it a manifestation of
 purest {evil}. see also {fear and loathing}.
:echo: [fidonet] n. a {topic group} on {fidonet}'s echomail
 system. compare {newsgroup}.
:eighty-column mind: [ibm] n. the sort said to be possessed by
 persons for whom the transition from {punched card} to tape was
 traumatic (nobody has dared tell them about disks yet). it is said
 that these people, including (according to an old joke) the founder
 of ibm, will be buried `face down, -edge first' (the -edge being
 the bottom of the card). this directive is inscribed on ibm's
  and  card readers and is referenced in a famous bit of
 doggerel called "the last bug", the climactic lines of which
 are as follows:
he died at the console
of hunger and thirst.
next day he was buried,
face down, -edge first.
 the eighty-column mind is thought by most hackers to dominate ibm's
 customer base and its thinking. see {ibm}, {fear and
 loathing}, {card walloper}.
:el camino bignum: /el' k*-mee'noh big'nuhm/ n. the road
 mundanely called el camino real, a road through the san francisco
 peninsula that originally extended all the way down to mexico city
 and many portions of which are still intact. navigation on the san
 francisco peninsula is usually done relative to el camino real,
 which defines {logical} north and south even though it isn't
 really north-south many places. el camino real runs right past
 stanford university and so is familiar to hackers.
 the spanish word `real' (which has two syllables: /ray-ahl'/)
 means `royal'; el camino real is `the royal road'. in the fortran
 language, a `real' quantity is a number typically precise to 
 significant digits, and a `double precision' quantity is a larger
 floating-point number, precise to perhaps fourteen significant
 digits (other languages have similar `real' types).
 when a hacker from mit visited stanford in , he remarked what a
 long road el camino real was. making a pun on `real', he started
 calling it `el camino double precision' —- but when the hacker
 was told that the road was hundreds of miles long, he renamed it
 `el camino bignum', and that name has stuck. (see {bignum}.)
:elder days: n. the heroic age of hackerdom (roughly, pre-); the
 era of the {pdp-}, {teco}, {{its}}, and the arpanet. this
 term has been rather consciously adopted from j. r. r. tolkien's
 fantasy epic `the lord of the rings'. compare {iron age};
 see also {elvish}.
:elegant: [from mathematical usage] adj. combining simplicity,
 power, and a certain ineffable grace of design. higher praise than
 `clever', `winning', or even {cuspy}.
:elephantine: adj. used of programs or systems that are both
 conspicuous {hog}s (owing perhaps to poor design founded on
 {brute force and ignorance}) and exceedingly {hairy} in source
 form. an elephantine program may be functional and even friendly,
 but (as in the old joke about being in bed with an elephant) it's
 tough to have around all the same (and, like a pachyderm, difficult
 to maintain). in extreme cases, hackers have been known to make
 trumpeting sounds or perform expressive proboscatory mime at the
 mention of the offending program. usage: semi-humorous. compare
 `has the elephant nature' and the somewhat more pejorative
 {monstrosity}. see also {second-system effect} and
 {baroque}.
:elevator controller: n. another archetypal dumb embedded-systems
 application, like {toaster} (which superseded it). during one
 period (—) in the deliberations of ansi xj (the
 c standardization committee) this was the canonical example of a
 really stupid, memory-limited computation environment. "you can't
 require `printf()' to be part of the default runtime library
 —- what if you're targeting an elevator controller?" elevator
 controllers became important rhetorical weapons on both sides of
 several {holy wars}.
:eliza effect: /*-li:'z* *-fekt'/ [ai community] n. the tendency of
 humans to attach associations to terms from prior experience.
 for example, there is nothing magic about the symbol `+' that
 makes it well-suited to indicate addition; it's just that people
 associate it with addition. using `+' or `plus' to mean addition
 in a computer language is taking advantage of the eliza effect.
 this term comes from the famous eliza program by joseph weizenbaum,
 which simulated a rogerian psychoanalyst by rephrasing many of the
 patient's statements as questions and posing them to the patient.
 it worked by simple pattern recognition and substitution of key
 words into canned phrases. it was so convincing, however, that
 there are many anecdotes about people becoming very emotionally
 caught up in dealing with eliza. all this was due to people's
 tendency to attach to words meanings which the computer never put
 there. the eliza effect is a {good thing} when writing a
 programming language, but it can blind you to serious shortcomings
 when analyzing an artificial intelligence system. compare
 {ad-hockery}; see also {ai-complete}.
:elvish: n. . the tengwar of feanor, a table of letterforms
 resembling the beautiful celtic half-uncial hand of the `book
 of kells'. invented and described by j. r. r. tolkien
 in `the lord of the rings' as an orthography for his fictional
 `elvish' languages, this system (which is both visually and
 phonetically elegant) has long fascinated hackers (who tend to be
 interested by artificial languages in general). it is traditional
 for graphics printers, plotters, window systems, and the like to
 support a feanorian typeface as one of their demo items. see also
 {elder days}. . by extension, any odd or unreadable typeface
 produced by a graphics device. . the typeface mundanely called
 `b"ocklin', an art-decoish display font.
:emacs: /ee'maks/ [from editing macros] n. the ne plus ultra of
 hacker editors, a programmable text editor with an entire lisp
 system inside it. it was originally written by richard stallman in
 {teco} under {{its}} at the mit ai lab; ai memo  described
 it as "an advanced, self-documenting, customizable, extensible
 real-time display editor". it has since been reimplemented any
 number of times, by various hackers, and versions exist which run
 under most major operating systems. perhaps the most widely used
 version, also written by stallman and now called "{gnu} emacs"
 or {gnumacs}, runs principally under unix. it includes
 facilities to run compilation subprocesses and send and receive
 mail; many hackers spend up to % of their {tube time} inside
 it. other variants include {gosmacs}, cca emacs, unipress
 emacs, montgomery emacs, jove, epsilon, and microemacs.
 some emacs versions running under window managers iconify as an
 overflowing kitchen sink, perhaps to suggest the one feature the
 editor does not (yet) include. indeed, some hackers find emacs too
 heavyweight and {baroque} for their taste, and expand the name as
 `escape meta alt control shift' to spoof its heavy reliance on
 keystrokes decorated with {bucky bits}. other spoof expansions
 include `eight megabytes and constantly swapping', `eventually
 `malloc()'s all computer storage', and `emacs makes a computer
 slow' (see {{recursive acronym}}). see also {vi}.
:email: /ee'mayl/ . n. electronic mail automatically passed
 through computer networks and/or via modems over common-carrier
 lines. contrast {snail-mail}, {paper-net}, {voice-net}. see
 {network address}. . vt. to send electronic mail.
oddly enough, the word `emailed' is actually listed in the oed; it
means "embossed (with a raised pattern) or arranged in a net work".
a use from  is given. the word is derived from french
`emmailleure', network.
:emoticon: /ee-moh'ti-kon/ n. an ascii glyph used to indicate an
 emotional state in email or news. although originally intended
 mostly as jokes, emoticons (or some other explicit humor
 indication) are virtually required under certain circumstances in
 high-volume text-only communication forums such as usenet; the lack
 of verbal and visual cues can otherwise cause what were intended to
 be humorous, sarcastic, ironic, or otherwise non-%-serious
 comments to be badly misinterpreted (not always even by
 {newbie}s), resulting in arguments and {flame war}s.
hundreds of emoticons have been proposed, but only a few are in
common use. these include:
`smiley face' (for humor, laughter, friendliness,
occasionally sarcasm)
`frowney face' (for sadness, anger, or upset)
`half-smiley' ({ha ha only serious});
also known as `semi-smiley' or `winkey face'.
`wry face'
(these may become more comprehensible if you tilt your head
sideways, to the left.)
 the first two listed are by far the most frequently encountered.
 hyphenless forms of them are common on compuserve, genie, and bix;
 see also {bixie}. on {usenet}, `smiley' is often used as a
 generic term synonymous with {emoticon}, as well as specifically
 for the happy-face emoticon.
 it appears that the emoticon was invented by one scott fahlman on
 the cmu {bboard} systems around . he later wrote: "i wish i
 had saved the original post, or at least recorded the date for
 posterity, but i had no idea that i was starting something that
 would soon pollute all the world's communication channels." [gls
 confirms that he remembers this original posting].
 note for the {newbie}: overuse of the smiley is a mark of
 loserhood! more than one per paragraph is a fairly sure sign that
 you've gone over the line.
:empire: n. any of a family of military simulations derived from a
 game written by peter langston many years ago. there are five or
 six multi-player variants of varying degrees of sophistication, and
 one single-player version implemented for both unix and vms; the
 latter is even available as ms-dos freeware. all are notoriously
 addictive.
:engine: n. . a piece of hardware that encapsulates some function
 but can't be used without some kind of {front end}. today we
 have, especially, `print engine': the guts of a laser printer.
 . an analogous piece of software; notionally, one that does a lot
 of noisy crunching, such as a `database engine'.
 the hackish senses of `engine' are actually close to its original,
 pre-industrial-revolution sense of a skill, clever device, or
 instrument (the word is cognate to `ingenuity'). this sense had
 not been completely eclipsed by the modern connotation of
 power-transducing machinery in charles babbage's time, which
 explains why he named the stored-program computer that
 he designed in  the `analytical engine'.
:english: . n.,obs. the source code for a program, which may be in
 any language, as opposed to the linkable or executable binary
 produced from it by a compiler. the idea behind the term is that
 to a real hacker, a program written in his favorite programming
 language is at least as readable as english. usage: used mostly by
 old-time hackers, though recognizable in context. . the official
 name of the database language used by the pick operating system,
 actually a sort of crufty, brain-damaged sql with delusions of
 grandeur. the name permits {marketroid}s to say "yes, and you
 can program our computers in english!" to ignorant {suit}s
 without quite running afoul of the truth-in-advertising laws.
:enhancement: n. {marketroid}-speak for a bug {fix}. this abuse
 of language is a popular and time-tested way to turn incompetence
 into increased revenue. a hacker being ironic would instead call
 the fix a {feature} —- or perhaps save some effort by declaring
 the bug itself to be a feature.
:enq: /enkw/ or /enk/ [from the ascii mnemonic enquire for
 ] an on-line convention for querying someone's availability.
 after opening a {talk mode} connection to someone apparently in
 heavy hack mode, one might type `syn syn enq?' (the syns
 representing notional synchronization bytes), and expect a return
 of {ack} or {nak} depending on whether or not the person felt
 interruptible. compare {ping}, {finger}, and the usage of
 `foo?' listed under {talk mode}.
:eof: /e-o-f/ [abbreviation, `end of file'] n. . [techspeak]
 refers esp. to whatever {out-of-band} value is returned by
 c's sequential character-input functions (and their equivalents in
 other environments) when end of file has been reached. this value
 is - under c libraries postdating v unix, but was
 originally . . [unix] the keyboard character (usually control-d,
 the ascii eot (end of transmission) character) which is mapped by
 the terminal driver into an end-of-file condition. . used by
 extension in non-computer contexts when a human is doing something
 that can be modeled as a sequential read and can't go further.
 "yeah, i looked for a list of  mnemonics to post as a joke, but
 i hit eof pretty fast; all the library had was a {jcl} manual."
 see also {eol}.
:eol: /e-o-l/ [end of line] n. syn. for {newline}, derived
 perhaps from the original cdc pascal. now rare, but widely
 recognized and occasionally used for brevity. used in the
 example entry under {bnf}. see also {eof}.
:eou: /e-o-u/ n. the mnemonic of a mythical ascii control
 character (end of user) that could make an asr- teletype explode
 on receipt. this parodied the numerous obscure delimiter and
 control characters left in ascii from the days when it was
 associated more with wire-service teletypes than computers (e.g.,
 fs, gs, rs, us, em, sub, etx, and esp. eot). it is worth
 remembering that asr-s were big, noisy mechanical beasts with a
 lot of clattering parts; the notion that one might explode was
 nowhere near as ridiculous as it might seem to someone sitting in
 front of a {tube} or flatscreen today.
:epoch: [unix: prob. from astronomical timekeeping] n. the time
 and date corresponding to  in an operating system's clock and
 timestamp values. under most unix versions the epoch is ::
 gmt, january , ; under vms, it's :: gmt of november ,
  (base date of the u.s. naval observatory's ephemerides).
 system time is measured in seconds or {tick}s past the epoch.
 weird problems may ensue when the clock wraps around (see {wrap
 around}), which is not necessarily a rare event; on systems
 counting  ticks per second, a signed -bit count of ticks is
 good only for . years. the -tick-per-second clock of unix is
 good only until january , , assuming at least some software
 continues to consider it signed and that word lengths don't
 increase by then. see also {wall time}.
:epsilon: [see {delta}] . n. a small quantity of anything. "the
 cost is epsilon." . adj. very small, negligible; less than
 {marginal}. "we can get this feature for epsilon cost."
 . `within epsilon of': close enough to be indistinguishable for
 all practical purposes. this is even closer than being `within
 delta of'. "that's not what i asked for, but it's within
 epsilon of what i wanted." alternatively, it may mean not close
 enough, but very little is required to get it there: "my program
 is within epsilon of working."
:epsilon squared: n. a quantity even smaller than {epsilon}, as
 small in comparison to epsilon as epsilon is to something normal;
 completely negligible. if you buy a supercomputer for a million
 dollars, the cost of the thousand-dollar terminal to go with it is
 {epsilon}, and the cost of the ten-dollar cable to connect them
 is epsilon squared. compare {lost in the underflow}, {lost
 in the noise}.
:era, the: syn. {epoch}. webster's unabridged makes these words
 almost synonymous, but `era' usually connotes a span of time rather
 than a point in time. the {epoch} usage is recommended.
:eric conspiracy: n. a shadowy group of mustachioed hackers named
 eric first pinpointed as a sinister conspiracy by an infamous
 talk.bizarre posting ca. ; this was doubtless influenced by the
 numerous `eric' jokes in the monty python oeuvre. there do indeed
 seem to be considerably more mustachioed erics in hackerdom than
 the frequency of these three traits can account for unless they are
 correlated in some arcane way. well-known examples include eric
 allman (he of the `allman style' described under {indent style})
 and erik fair (co-author of nntp); your editor has heard from about
 fourteen others by email, and the organization line `eric
 conspiracy secret laboratories' now emanates regularly from more
 than one site.
:eris: /e'ris/ n. the greek goddess of chaos, discord, confusion,
 and things you know not of; her name was latinized to discordia and
 she was worshiped by that name in rome. not a very friendly deity
 in the classical original, she was reinvented as a more benign
 personification of creative anarchy starting in  by the
 adherents of {discordianism} and has since been a semi-serious
 subject of veneration in several `fringe' cultures, including
 hackerdom. see {discordianism}, {church of the subgenius}.
:erotics: /ee-ro'tiks/ n. [helsinki university of technology,
finland] n. english-language university slang for electronics.
often used by hackers in helsinki, maybe because good electronics
excites them and makes them warm.
:error : [xerox parc] n. . predicating one research effort upon
the success of another. . allowing your own research effort to be
placed on the critical path of some other project (be it a research
effort or not).
:essentials: n. things necessary to maintain a productive and secure
 hacking environment. "a jug of wine, a loaf of bread, a
 -megahertz  box with  meg of core and a -megabyte disk
 supporting full unix with source and x windows and emacs and uucp
 via a 'blazer to a friendly internet site, and thou."
:evil: adj. as used by hackers, implies that some system, program,
 person, or institution is sufficiently maldesigned as to be not
 worth the bother of dealing with. unlike the adjectives in the
 {cretinous}/{losing}/{brain-damaged} series, `evil' does not
 imply incompetence or bad design, but rather a set of goals or
 design criteria fatally incompatible with the speaker's. this is
 more an esthetic and engineering judgment than a moral one in the
 mainstream sense. "we thought about adding a {blue glue}
 interface but decided it was too evil to deal with." "{teco}
 is neat, but it can be pretty evil if you're prone to typos."
 often pronounced with the first syllable lengthened, as /eeee'vil/.
:exa-: /ek's*/ [si] pref. see {{quantifiers}}.
:examining the entrails: n. the process of {grovel}ling through
 a core dump or hex image in the attempt to discover the bug that
 brought a program or system down. the reference is to divination
 from the entrails of a sacrified animal. compare {runes},
 {incantation}, {black art}, {desk check}.
:exch: /eks'ch*/ or /eksch/ vt. to exchange two things, each for the
 other; to swap places. if you point to two people sitting down and
 say "exch!", you are asking them to trade places. exch,
 meaning exchange, was originally the name of a pdp- instruction
 that exchanged the contents of a register and a memory location.
 many newer hackers tend to be thinking instead of the {postscript}
 exchange operator (which is usually written in lowercase).
:excl: /eks'kl/ n. abbreviation for `exclamation point'. see
 {bang}, {shriek}, {{ascii}}.
:exe: /eks'ee/ or /eek'see/ or /e-x-e/ n. an executable
 binary file. some operating systems (notably ms-dos, vms, and
 twenex) use the extension .exe to mark such files. this usage is
 also occasionally found among unix programmers even though unix
 executables don't have any required suffix.
:exec: /eg-zek'/ vt.,n. . [unix: from `execute'] synonym for
 {chain}, derives from the `exec()' call. . [from
 `executive'] obs. the command interpreter for an {os} (see
 {shell}); term esp. used around mainframes, and prob.
 derived from univac's archaic exec  and exec  operating systems.
 . at ibm and vm/cms shops, the equivalent of a shell command file
 (among vm/cms users).
 the mainstream `exec' as an abbreviation for (human) executive is
 *not* used. to a hacker, an `exec' is a always a program,
 never a person.
:exercise, left as an: [from technical books] used to complete a
 proof when one doesn't mind a {handwave}, or to avoid one
 entirely. the complete phrase is: "the proof (or the rest) is
 left as an exercise for the reader." this comment *has*
 occasionally been attached to unsolved research problems by authors
 possessed of either an evil sense of humor or a vast faith in the
 capabilities of their audiences.
:eyeball search: n. to look for something in a mass of code or data
 with one's own native optical sensors, as opposed to using some
 sort of pattern matching software like {grep} or any other
 automated search tool. also called a {vgrep}; compare
 {vdiff}, {desk check}.
:fab: /fab/ [from `fabricate'] v. . to produce chips from a
 design that may have been created by someone at another company.
 fabbing chips based on the designs of others is the activity of a
 {silicon foundry}. to a hacker, `fab' is practically never short
 for `fabulous'. . `fab line': the production system
 (lithography, diffusion, etching, etc.) for chips at a chip
 manufacturer. different `fab lines' are run with different
 process parameters, die sizes, or technologies, or simply to
 provide more manufacturing volume.
:face time: n. time spent interacting with somebody face-to-face (as
 opposed to via electronic links). "oh, yeah, i spent some face
 time with him at the last usenix."
:factor: n. see {coefficient of x}.
:fall over: [ibm] vi. yet another synonym for {crash} or {lose}.
 `fall over hard' equates to {crash and burn}.
:fall through: v. (n. `fallthrough', var. `fall-through')
 . to exit a loop by exhaustion, i.e., by having fulfilled its exit
 condition rather than via a break or exception condition that exits
 from the middle of it. this usage appears to be *really* old,
 dating from the s and s. . to fail a test that would have
 passed control to a subroutine or some other distant portion of
 code. . in c, `fall-through' occurs when the flow of execution in
 a switch statement reaches a `case' label other than by
 jumping there from the switch header, passing a point where one
 would normally expect to find a `break'. a trivial example:
switch (color)
case green:
do_green();
break;
case pink:
do_pink();
case red:
do_red();
break;
default:
do_blue();
break;
 the variant spelling `/* fall thru */' is also common.
 the effect of this code is to `do_green()' when color is
 `green', `do_red()' when color is `red',
 `do_blue()' on any other color other than `pink', and
 (and this is the important part) `do_pink()' *and then*
 `do_red()' when color is `pink'. fall-through is
 {considered harmful} by some, though there are contexts (such as
 the coding of state machines) in which it is natural; it is
 generally considered good practice to include a comment
 highlighting the fall-through where one would normally expect a
 break.
:fandango on core: [unix/c hackers, from the mexican dance] n.
 in c, a wild pointer that runs out of bounds, causing a {core
 dump}, or corrupts the `malloc()' {arena} in such a way as
 to cause mysterious failures later on, is sometimes said to have
 `done a fandango on core'. on low-end personal machines without an
 mmu, this can corrupt the os itself, causing massive lossage.
 other frenetic dances such as the rhumba, cha-cha, or watusi, may
 be substituted. see {aliasing bug}, {precedence lossage},
 {smash the stack}, {memory leak}, {memory smash},
 {overrun screw}, {core}.
:faq list: /f-a-q list/ or /fak list/ [usenet] n. a compendium
 of accumulated lore, posted periodically to high-volume newsgroups
 in an attempt to forestall frequently asked questions. this
 lexicon itself serves as a good example of a collection of one kind
 of lore, although it is far too big for a regular posting.
 examples: "what is the proper type of null?" and "what's that
 funny name for the `#' character?" are both frequently asked
 questions. several extant faq lists do (or should) make reference
 to the jargon file (the on-line version of this lexicon).
:faql: /fa'kl/ n. syn. {faq list}.
:farming: [adelaide university, australia] n. what the heads of a
 disk drive are said to do when they plow little furrows in the
 magnetic media. associated with a {crash}. typically used as
 follows: "oh no, the machine has just crashed; i hope the hard
 drive hasn't gone {farming} again."
:fascist: adj. . said of a computer system with excessive or
 annoying security barriers, usage limits, or access policies. the
 implication is that said policies are preventing hackers from
 getting interesting work done. the variant `fascistic' seems
 to have been preferred at mit, poss. by analogy with
 `touristic' (see {tourist}). . in the design of languages
 and other software tools, `the fascist alternative' is the most
 restrictive and structured way of capturing a particular function;
 the implication is that this may be desirable in order to simplify
 the implementation or provide tighter error checking. compare
 {bondage-and-discipline language}, but that term is global rather
 than local.
:fat electrons: n. old-time hacker david cargill's theory on the
 causation of computer glitches. your typical electric utility
 draws its line current out of the big generators with a pair of
 coil taps located near the top of the dynamo. when the normal tap
 brushes get dirty, they take them off line to clean up, and use
 special auxiliary taps on the *bottom* of the coil. now,
 this is a problem, because when they do that they get not ordinary
 or `thin' electrons, but the fat'n'sloppy electrons that are
 heavier and so settle to the bottom of the generator. these flow
 down ordinary wires just fine, but when they have to turn a sharp
 corner (as in an integrated-circuit via) they're apt to get stuck.
 this is what causes computer glitches. [fascinating. obviously,
 fat electrons must gain mass by {bogon} absorption —- esr]
 compare {bogon}, {magic smoke}.
:faulty: adj. non-functional; buggy. same denotation as
 {bletcherous}, {losing}, q.v., but the connotation is much
 milder.
:fd leak: /f-d leek/ n. a kind of programming bug analogous to a
 {core leak}, in which a program fails to close file descriptors
 (`fd's) after file operations are completed, and thus eventually
 runs out of them. see {leak}.
:fear and loathing: [from hunter thompson] n. a state inspired by the
 prospect of dealing with certain real-world systems and standards
 that are totally {brain-damaged} but ubiquitous —- intel s,
 or {cobol}, or {{ebcdic}}, or any {ibm} machine except the
 rios (a.k.a. the rs/). "ack! they want pcs to be able to
 talk to the ai machine. fear and loathing time!"
:feature: n. . a good property or behavior (as of a program).
 whether it was intended or not is immaterial. . an intended
 property or behavior (as of a program). whether it is good or not
 is immaterial (but if bad, it is also a {misfeature}). . a
 surprising property or behavior; in particular, one that is
 purposely inconsistent because it works better that way —- such an
 inconsistency is therefore a {feature} and not a {bug}. this
 kind of feature is sometimes called a {miswart}; see that entry
 for a classic example. . a property or behavior that is
 gratuitous or unnecessary, though perhaps also impressive or cute.
 for example, one feature of common lisp's `format' function is
 the ability to print numbers in two different roman-numeral formats
 (see {bells, whistles, and gongs}). . a property or behavior
 that was put in to help someone else but that happens to be in your
 way. . a bug that has been documented. to call something a
 feature sometimes means the author of the program did not consider
 the particular case, and that the program responded in a way that
 was unexpected but not strictly incorrect. a standard joke is that
 a bug can be turned into a {feature} simply by documenting it
 (then theoretically no one can complain about it because it's in
 the manual), or even by simply declaring it to be good. "that's
 not a bug, that's a feature!" is a common catchphrase. see also
 {feetch feetch}, {creeping featurism}, {wart}, {green
 lightning}.
 the relationship among bugs, features, misfeatures, warts, and
 miswarts might be clarified by the following hypothetical exchange
 between two hackers on an airliner:
 a: "this seat doesn't recline."
 b: "that's not a bug, that's a feature. there is an emergency
 exit door built around the window behind you, and the route has to
 be kept clear."
 a: "oh. then it's a misfeature; they should have increased the
 spacing between rows here."
 b: "yes. but if they'd increased spacing in only one section it
 would have been a wart —- they would've had to make
 nonstandard-length ceiling panels to fit over the displaced
 seats."
 a: "a miswart, actually. if they increased spacing throughout
 they'd lose several rows and a chunk out of the profit margin. so
 unequal spacing would actually be the right thing."
 b: "indeed."
 `undocumented feature' is a common, allegedly humorous euphemism
 for a {bug}.
:feature creature: [poss. fr. slang `creature feature' for a
 horror movie] n. . one who loves to add features to designs or
 programs, perhaps at the expense of coherence, concision, or
 {taste}. . alternately, a semi-mythical being that induces
 otherwise rational programmers to perpetrate such crocks. see also
 {feeping creaturism}, {creeping featurism}.
:feature key: n. the macintosh key with the cloverleaf graphic on
 its keytop; sometimes referred to as `flower', `pretzel',
 `clover', `propeller', `beanie' (an apparent reference to the
 major feature of a propeller beanie), {splat}, or the `command
 key'. the mac's equivalent of an {alt} key. the proliferation
 of terms for this creature may illustrate one subtle peril of
 iconic interfaces.
 many people have been mystified by the cloverleaf-like symbol that
 appears on the feature key. its oldest name is `cross of st.
 hannes', but it occurs in pre-christian viking art as a decorative
 motif. throughout scandinavia today the road agencies use it to
 mark sites of historical interest. many of these are old churches;
 hence, the swedish idiom for the symbol is `kyrka', cognate to
 english `church' and scots-dialect `kirk' but pronounced
 /shir'k*/ in modern swedish. this is in fact where apple got the
 symbol; they give the translation "interesting feature"!
:feature shock: [from alvin toffler's book title `future
 shock'] n. a user's (or programmer's!) confusion when confronted
 with a package that has too many features and poor introductory
 material.
:featurectomy: /fee`ch*r-ek't*-mee/ n. the act of removing a
 feature from a program. featurectomies come in two flavors, the
 `righteous' and the `reluctant'. righteous featurectomies are
 performed because the remover believes the program would be more
 elegant without the feature, or there is already an equivalent and
 better way to achieve the same end. (this is not quite the same
 thing as removing a {misfeature}.) reluctant featurectomies are
 performed to satisfy some external constraint such as code size or
 execution speed.
:feep: /feep/ . n. the soft electronic `bell' sound of a
 display terminal (except for a vt-); a beep (in fact, the
 microcomputer world seems to prefer {beep}). . vi. to cause
 the display to make a feep sound. asr-s (the original ttys) do
 not feep; they have mechanical bells that ring. alternate forms:
 {beep}, `bleep', or just about anything suitably
 onomatopoeic. (jeff macnelly, in his comic strip "shoe", uses
 the word `eep' for sounds made by computer terminals and video
 games; this is perhaps the closest written approximation yet.) the
 term `breedle' was sometimes heard at sail, where the terminal
 bleepers are not particularly soft (they sound more like the
 musical equivalent of a raspberry or bronx cheer; for a close
 approximation, imagine the sound of a star trek communicator's beep
 lasting for  seconds). the `feeper' on a vt- has been
 compared to the sound of a ' chevy stripping its gears. see also
 {ding}.
:feeper: /fee'pr/ n. the device in a terminal or workstation (usually
 a loudspeaker of some kind) that makes the {feep} sound.
:feeping creature: [from {feeping creaturism}] n. an unnecessary
 feature; a bit of {chrome} that, in the speaker's judgment, is
 the camel's nose for a whole horde of new features.
:feeping creaturism: /fee'ping kree`ch*r-izm/ n. a deliberate
 spoonerism for {creeping featurism}, meant to imply that the
 system or program in question has become a misshapen creature of
 hacks. this term isn't really well defined, but it sounds so neat
 that most hackers have said or heard it. it is probably reinforced
 by an image of terminals prowling about in the dark making their
 customary noises.
:feetch feetch: /feech feech/ interj. if someone tells you about
 some new improvement to a program, you might respond: "feetch,
 feetch!" the meaning of this depends critically on vocal
 inflection. with enthusiasm, it means something like "boy, that's
 great! what a great hack!" grudgingly or with obvious doubt, it
 means "i don't know; it sounds like just one more unnecessary and
 complicated thing". with a tone of resignation, it means, "well,
 i'd rather keep it simple, but i suppose it has to be done".
:fence: n. . a sequence of one or more distinguished
 ({out-of-band}) characters (or other data items), used to
 delimit a piece of data intended to be treated as a unit (the
 computer-science literature calls this a `sentinel'). the nul
 (ascii ) character that terminates strings in c is a fence.
 hex ff is also (though slightly less frequently) used this way.
 see {zigamorph}. . [among users of optimizing compilers] any
 technique, usually exploiting knowledge about the compiler, that
 blocks certain optimizations. used when explicit mechanisms are
 not available or are overkill. typically a hack: "i call a dummy
 procedure there to force a flush of the optimizer's
 register-coloring info" can be expressed by the shorter "that's a
 fence procedure".
:fencepost error: n. . a problem with the discrete equivalent of a
 boundary condition. often exhibited in programs by iterative
 loops. from the following problem: "if you build a fence  feet
 long with posts  feet apart, how many posts do you need?"
 either  or  is a better answer than the obvious . for
 example, suppose you have a long list or array of items, and want
 to process items m through n; how many items are there? the
 obvious answer is n - m, but that is off by one; the right
 answer is n - m + . a program that used the `obvious'
 formula would have a fencepost error in it. see also {zeroth}
 and {off-by-one error}, and note that not all off-by-one errors
 are fencepost errors. the game of musical chairs involves a
 catastrophic off-by-one error where n people try to sit in
 n -  chairs, but it's not a fencepost error. fencepost
 errors come from counting things rather than the spaces between
 them, or vice versa, or by neglecting to consider whether one
 should count one or both ends of a row. . occasionally, an error
 induced by unexpectedly regular spacing of inputs, which can (for
 instance) screw up your hash table.
:fepped out: /fept owt/ adj. the symbolics  lisp machine has a
 front-end processor called a `fep' (compare sense  of {box}).
 when the main processor gets {wedged}, the fep takes control of
 the keyboard and screen. such a machine is said to have
 `fepped out'.
:fidonet: n. a worldwide hobbyist network of personal computers
 which exchange mail, discussion groups, and files. founded in 
 and originally consisting only of ibm pcs and compatibles, fidonet
 now includes such diverse machines as apple ][s, ataris, amigas,
 and unix systems. though it is much younger than {usenet},
 fidonet is already (in early ) a significant fraction of
 usenet's size at some  systems.
:field circus: [a derogatory pun on `field service'] n. the field
 service organization of any hardware manufacturer, but especially
 dec. there is an entire genre of jokes about dec field circus
 engineers:
q: how can you recognize a dec field circus engineer
with a flat tire?
a: he's changing one tire at a time to see which one is flat.
q: how can you recognize a dec field circus engineer
who is out of gas?
a: he's changing one tire at a time to see which one is flat.
 [see {easter egging} for additional insight on these jokes.]
there is also the `field circus cheer' (from the {plan file} for
dec on mit-ai):
maynard! maynard!
don't mess with us!
we're mean and we're tough!
if you get us confused
we'll screw up your stuff.
 (dec's service hq is located in maynard, massachusetts.)
:field servoid: [play on `android'] /fee'ld ser'voyd/ n.
representative of a field service organization (see {field
circus}). this has many of the implications of {droid}.
:fight-o-net: [fidonet] n. deliberate distortion of {fidonet},
often applied after a flurry of {flamage} in a particular
{echo}, especially the sysop echo or fidonews (see {'snooze}).
:file attach: [fidonet] . n. a file sent along with a mail message
from one bbs to another. . vt. sending someone a file by using
the file attach option in a bbs mailer.
:file request: [fidonet] . n. the {fidonet} equivalent of
 {ftp}, in which one bbs system automatically dials another and
 {snarf}s one or more files. often abbreviated `freq'; files
 are often announced as being "available for freq" in the same way
 that files are announced as being "available for/by anonymous
 ftp" on the internet. . vt. the act of getting a copy of a file
 by using the file request option of the bbs mailer.
:file signature: n. a {magic number} sense .
:filk: /filk/ [from sf fandom, where a typo for `folk' was
 adopted as a new word] n.,v. a `filk' is a popular or folk song
 with lyrics revised or completely new lyrics, intended for humorous
 effect when read and/or to be sung late at night at sf conventions.
 there is a flourishing subgenre of these called `computer filks',
 written by hackers and often containing rather sophisticated
 technical humor. see {double bucky} for an example. compare
 {hing} and {newsfroup}.
:film at : [mit: in parody of tv newscasters] . used in
 conversation to announce ordinary events, with a sarcastic
 implication that these events are earth-shattering. "{{its}}
 crashes; film at ." "bug found in scheduler; film at ."
 . also widely used outside mit to indicate that additional
 information will be available at some future time, *without*
 the implication of anything particularly ordinary about the
 referenced event. for example, "the mail file server died this
 morning; we found garbage all over the root directory. film at
 ." would indicate that a major failure had occurred but the
 people working on it have no additional information about it. use
 of the phrase in this way suggests gently people would appreciate
 it if users would quit bothering them and wait for the : news
 for additional information.
:filter: [orig. {{unix}}, now also in {{ms-dos}}] n. a program that
 processes an input data stream into an output data stream in some
 well-defined way, and does no i/o to anywhere else except possibly
 on error conditions; one designed to be used as a stage in a
 `pipeline' (see {plumbing}).
:finagle's law: n. the generalized or `folk' version of
 {murphy's law}, fully named "finagle's law of dynamic
 negatives" and usually rendered "anything that can go wrong,
 will". one variant favored among hackers is "the perversity of
 the universe tends towards a maximum" (but see also {hanlon's
 razor}). the label `finagle's law' was popularized by sf author
 larry niven in several stories depicting a frontier culture of
 asteroid miners; this `belter' culture professed a religion
 and/or running joke involving the worship of the dread god finagle
 and his mad prophet murphy.
:fine: [wpi] adj. good, but not good enough to be {cuspy}. the word
 `fine' is used elsewhere, of course, but without the implicit
 comparison to the higher level implied by {cuspy}.
:finger: [waits, via bsd unix] . n. a program that displays a
 particular user or all users logged on the system or a remote
 system. typically shows full name, last login time, idle time,
 terminal line, and terminal location (where applicable). may also
 display a {plan file} left by the user. . vt. to apply finger
 to a username. . vt. by extension, to check a human's current
 state by any means. "foodp?" "t!" "ok, finger lisa and see
 if she's idle." . any picture (composed of ascii characters)
 depicting `the finger'. originally a humorous component of one's
 plan file to deter the curious fingerer (sense ), it has entered
 the arsenal of some {flamer}s.
:finger-pointing syndrome: n. all-too-frequent result of bugs, esp.
 in new or experimental configurations. the hardware vendor points
 a finger at the software. the software vendor points a finger
 at the hardware. all the poor users get is the finger.
:finn: [irc] v. to pull rank on somebody based on the amount of
 time one has spent on {irc}. the term derives from the fact
 that irc was originally written in finland in .
:firebottle: n. a large, primitive, power-hungry active electrical
 device, similar in function to a fet but constructed out of glass,
 metal, and vacuum. characterized by high cost, low density, low
 reliability, high-temperature operation, and high power
 dissipation. sometimes mistakenly called a `tube' in the u.s.
 or a `valve' in england; another hackish term is {glassfet}.
:firefighting: n. . what sysadmins have to do to correct sudden
 operational problems. an opposite of hacking. "been hacking your
 new newsreader?" "no, a power glitch hosed the network and i spent
 the whole afternoon fighting fires." . the act of throwing lots
 of manpower and late nights at a project, esp. to get it out
 before deadline. see also {gang bang}, {mongolian hordes
 technique}; however, the term `firefighting' connotes that the
 effort is going into chasing bugs rather than adding features.
:firehose syndrome: n. in mainstream folklore it is observed that
 trying to drink from a firehose can be a good way to rip your lips
 off. on computer networks, the absence or failure of flow control
 mechanisms can lead to situations in which the sending system
 sprays a massive flood of packets at an unfortunate receiving
 system; more than it can handle. compare {overrun}, {buffer
 overflow}.
:firewall code: n. the code you put in a system (say, a telephone
 switch) to make sure that the users can't do any damage. since
 users always want to be able to do everything but never want to
 suffer for any mistakes, the construction of a firewall is a
 question not only of defensive coding but also of interface
 presentation, so that users don't even get curious about those
 corners of a system where they can burn themselves.
:firewall machine: n. a dedicated gateway machine with special
 security precautions on it, used to service outside network
 connections and dial-in lines. the idea is to protect a cluster of
 more loosely administered machines hidden behind it from
 {cracker}s. the typical firewall is an inexpensive micro-based
 unix box kept clean of critical data, with a bunch of modems and
 public network ports on it but just one carefully watched
 connection back to the rest of the cluster. the special
 precautions may include threat monitoring, callback, and even a
 complete {iron box} keyable to particular incoming ids or
 activity patterns. syn. {flytrap}, {venus flytrap}.
:fireworks mode: n. the mode a machine is sometimes said to be in when
 it is performing a {crash and burn} operation.
:firmy: /fer'mee/ syn. {stiffy} (a .-inch floppy disk).
:fish: [adelaide university, australia] n. . another {metasyntactic
 variable}. see {foo}. derived originally from the monty python
 skit in the middle of "the meaning of life" entitled
 "find the fish". . a pun for `microfiche'. a microfiche
 file cabinet may be referred to as a `fish tank'.
:fish queue: [acronym, by analogy with fifo (first in, first out)]
 n. `first in, still here'. a joking way of pointing out that
 processing of a particular sequence of events or requests has
 stopped dead. also `fish mode' and `fishnet'; the latter
 may be applied to any network that is running really slowly or
 exhibiting extreme flakiness.
:fitnr: // [thinking machines, inc.] fixed in the next release.
 a written-only notation attached to bug reports. often wishful
 thinking.
:fix: n.,v. what one does when a problem has been reported too many
 times to be ignored.
:flag: n. a variable or quantity that can take on one of two
 values; a bit, particularly one that is used to indicate one of two
 outcomes or is used to control which of two things is to be done.
 "this flag controls whether to clear the screen before printing
 the message." "the program status word contains several flag
 bits." used of humans analogously to {bit}. see also
 {hidden flag}, {mode bit}.
:flag day: n. a software change that is neither forward- nor
 backward-compatible, and which is costly to make and costly to
 reverse. "can we install that without causing a flag day for all
 users?" this term has nothing to do with the use of the word
 {flag} to mean a variable that has two values. it came into use
 when a massive change was made to the {{multics}} timesharing
 system to convert from the old ascii code to the new one; this was
 scheduled for flag day (a u.s. holiday), june , . see also
 {backward combatability}.
:flaky: adj. (var sp. `flakey') subject to frequent {lossage}.
 this use is of course related to the common slang use of the word
 to describe a person as eccentric, crazy, or just unreliable. a
 system that is flaky is working, sort of —- enough that you are
 tempted to try to use it —- but fails frequently enough that the
 odds in favor of finishing what you start are low. commonwealth
 hackish prefers {dodgy} or {wonky}.
:flamage: /flay'm*j/ n. flaming verbiage, esp. high-noise,
 low-signal postings to {usenet} or other electronic {fora}.
 often in the phrase `the usual flamage'. `flaming' is the act
 itself; `flamage' the content; a `flame' is a single flaming
 message. see {flame}.
:flame: . vi. to post an email message intended to insult and
 provoke. . vi. to speak incessantly and/or rabidly on some
 relatively uninteresting subject or with a patently ridiculous
 attitude. . vt. either of senses  or , directed with
 hostility at a particular person or people. . n. an instance of
 flaming. when a discussion degenerates into useless controversy,
 one might tell the participants "now you're just flaming" or
 "stop all that flamage!" to try to get them to cool down (so to
 speak).
 usenetter marc ramsey, who was at wpi from  to , adds: "i
 am % certain that the use of `flame' originated at wpi. those
 who made a nuisance of themselves insisting that they needed to use
 a tty for `real work' came to be known as `flaming asshole lusers'.
 other particularly annoying people became `flaming asshole ravers',
 which shortened to `flaming ravers', and ultimately `flamers'. i
 remember someone picking up on the human torch pun, but i don't
 think `flame on/off' was ever much used at wpi." see also
 {asbestos}.
 the term may have been independently invented at several different
 places; it is also reported that `flaming' was in use to mean
 something like `interminably drawn-out semi-serious discussions'
 (late-night bull sessions) at carleton college during —.
 it's possible that the hackish sense of `flame' is much older than
 that. the poet chaucer was also what passed for a wizard hacker in
 his time; he wrote a treatise on the astrolabe, the most advanced
 computing device of the day. in chaucer's `troilus and
 cressida', cressida laments her inability to grasp the proof of a
 particular mathematical theorem; her uncle pandarus then observes
 that it's called "the fleminge of wrecches." this phrase seems
 to have been intended in context as "that which puts the wretches
 to flight" but was probably just as ambiguous in middle english as
 "the flaming of wretches" would be today. one suspects that
 chaucer would be right at home on usenet.
:flame bait: n. a posting intended to trigger a {flame war}, or one
 that invites flames in reply.
:flame on: vi.,interj. . to begin to {flame}. the punning
reference to marvel comics's human torch is no longer widely
recognized. . to continue to flame. see {rave}, {burble}.
:flame war: n. (var. `flamewar') an acrimonious dispute,
especially when conducted on a public electronic forum such as
:flamer: n. one who habitually {flame}s. said esp. of obnoxious
{usenet} personalities.
:flap: vt. . to unload a dectape (so it goes flap, flap,
 flap…). old-time hackers at mit tell of the days when the
 disk was device  and {microtape}s were , ,… and
 attempting to flap device  would instead start a motor banging
 inside a cabinet near the disk. . by extension, to unload any
 magnetic tape. see also {macrotape}. modern cartridge tapes no
 longer actually flap, but the usage has remained. (the term could
 well be re-applied to dec's tk cartridge tape drive, a
 spectacularly misengineered contraption which makes a loud flapping
 sound, almost like an old reel-type lawnmower, in one of its many
 tape-eating failure modes.)
:flarp: /flarp/ [rutgers university] n. yet another {metasyntactic
 variable} (see {foo}). among those who use it, it is associated
 with a legend that any program not containing the word `flarp'
 somewhere will not work. the legend is discreetly silent on the
 reliability of programs which *do* contain the magic word.
:flat: adj. . lacking any complex internal structure. "that
 {bitty box} has only a flat filesystem, not a hierarchical
 one." the verb form is {flatten}. . said of a memory
 architecture (like that of the vax or x) that is one big linear
 address space (typically with each possible value of a processor
 register corresponding to a unique core address), as opposed to a
 `segmented' architecture (like that of the x) in which
 addresses are composed from a base-register/offset pair (segmented
 designs are generally considered {cretinous}).
 note that sense  (at least with respect to filesystems) is usually
 used pejoratively, while sense  is a {good thing}.
:flat-ascii: adj. said of a text file that contains only -bit ascii
 characters and uses only ascii-standard control characters (that
 is, has no embedded codes specific to a particular text formatter
 or markup language, and no {meta}-characters). syn.
 {plain-ascii}. compare {flat-file}.
:flat-file: adj. a {flatten}ed representation of some database or
 tree or network structure as a single file from which the
 structure could implicitly be rebuilt, esp. one in {flat-ascii}
 form.
:flatten: vt. to remove structural information, esp. to filter
 something with an implicit tree structure into a simple sequence of
 leaves; also tends to imply mapping to {flat-ascii}. "this code
 flattens an expression with parentheses into an equivalent
 {canonical} form."
:flavor: n. . variety, type, kind. "ddt commands come in two
 flavors." "these lights come in two flavors, big red ones and
 small green ones." see {vanilla}. . the attribute that causes
 something to be {flavorful}. usually used in the phrase "yields
 additional flavor". "this convention yields additional flavor by
 allowing one to print text either right-side-up or upside-down."
 see {vanilla}. this usage was certainly reinforced by the
 terminology of quantum chromodynamics, in which quarks (the
 constituents of, e.g., protons) come in six flavors (up, down,
 strange, charm, top, bottom) and three colors (red, blue, green)
 —- however, hackish use of `flavor' at mit predated qcd. . the
 term for `class' (in the object-oriented sense) in the lisp machine
 flavors system. though the flavors design has been superseded
 (notably by the common lisp clos facility), the term `flavor' is
 still used as a general synonym for `class' by some lisp hackers.
:flavorful: adj. full of {flavor}; esthetically pleasing. see
 {random} and {losing} for antonyms. see also the entries for
 {taste} and {elegant}.
:flippy: /flip'ee/ n. a single-sided floppy disk altered for
 double-sided use by addition of a second write-notch, so called
 because it must be flipped over for the second side to be
 accessible. no longer common.
:flood: [irc] v. to dump large amounts of text onto an {irc}
 channel. this is especially rude when the text is uninteresting
 and the other users are trying to carry on a serious conversation.
:flowchart:: [techspeak] n. an archaic form of visual control-flow
 specification employing arrows and `speech balloons' of various
 shapes. hackers never use flowcharts, consider them extremely
 silly, and associate them with {cobol} programmers, {card
 walloper}s, and other lower forms of life. this is because (from a
 hacker's point of view) they are no easier to read than code, are
 less precise, and tend to fall out of sync with the code (so that
 they either obfuscate it rather than explaining it or require
 extra maintenance effort that doesn't improve the code). see also
 {pdl}, sense .
:flower key: [mac users] n. see {feature key}.
:flush: v. . to delete something, usually superfluous, or to abort
 an operation. "all that nonsense has been flushed." . [unix/c]
 to force buffered i/o to disk, as with an `fflush()' call.
 this is *not* an abort or deletion as in sense , but a
 demand for early completion! . to leave at the end of a day's
 work (as opposed to leaving for a meal). "i'm going to flush
 now." "time to flush." . to exclude someone from an activity,
 or to ignore a person.
 `flush' was standard its terminology for aborting an output
 operation; one spoke of the text that would have been printed, but
 was not, as having been flushed. it is speculated that this term
 arose from a vivid image of flushing unwanted characters by hosing
 down the internal output buffer, washing the characters away before
 they can be printed. the unix/c usage, on the other hand, was
 propagated by the `fflush()' call in c's standard i/o library
 (though it is reported to have been in use among bliss programmers
 at dec and on honeywell and ibm machines as far back as ).
 unix/c hackers find the its usage confusing, and vice versa.
:flypage: /fli: payj/n. (alt. `fly page') a {banner}, sense .
:flyspeck : n. standard name for any font that is so tiny as to be
 unreadable (by analogy with such names as `helvetica ' for
 -point helvetica). legal boilerplate is usually printed in
 flyspeck .
:flytrap: n. see {firewall machine}.
:fm: n. *not* `frequency modulation' but rather an
abbreviation for `fucking manual', the back-formation from
{rtfm}. used to refer to the manual itself in the {rtfm}.
"have you seen the networking fm lately?"
:foaf: // [usenet] n. acronym for `friend of a friend'. the
 source of an unverified, possibly untrue story. this was not
 originated by hackers (it is used in jan brunvand's books on urban
 folklore), but is much better recognized on usenet and elsewhere
 than in mainstream english.
:fod: /fod/ v. [abbreviation for `finger of death', originally a
 spell-name from fantasy gaming] to terminate with extreme prejudice
 and with no regard for other people. from {mud}s where the
 wizard command `fod <player>' results in the immediate and total
 death of <player>, usually as punishment for obnoxious behavior.
 this migrated to other circumstances, such as "i'm going to fod
 the process that is burning all the cycles." compare {gun}.
 in aviation, fod means foreign object damage, e.g., what happens
 when a jet engine sucks up a rock on the runway or a bird in
 flight. finger of death is a distressingly apt description of
 what this does to the engine.
:fold case: v. see {smash case}. this term tends to be used
 more by people who don't mind that their tools smash case. it also
 connotes that case is ignored but case distinctions in data
 processed by the tool in question aren't destroyed.
:followup: n. on usenet, a {posting} generated in response to
 another posting (as opposed to a {reply}, which goes by email
 rather than being broadcast). followups include the id of the
 {parent message} in their headers; smart news-readers can use
 this information to present usenet news in `conversation' sequence
 rather than order-of-arrival. see {thread}.
:fontology: [xerox parc] n. the body of knowledge dealing with the
 construction and use of new fonts (e.g. for window systems and
 typesetting software). it has been said that fontology
 recapitulates file-ogeny.
 [unfortunately, this reference to the embryological dictum that
 "ontogeny recapitulates phylogeny" is not merely a joke. on the
 macintosh, for example, system  has to go through contortions to
 compensate for an earlier design error that created a whole
 different set of abstractions for fonts parallel to `files' and
 `folders' —- esr]
:foo: /foo/ . interj. term of disgust. . used very generally
 as a sample name for absolutely anything, esp. programs and files
 (esp. scratch files). . first on the standard list of
 {metasyntactic variable}s used in syntax examples. see also
 {bar}, {baz}, {qux}, {quux}, {corge}, {grault},
 {garply}, {waldo}, {fred}, {plugh}, {xyzzy},
 {thud}.
 the etymology of hackish `foo' is obscure. when used in
 connection with `bar' it is generally traced to the wwii-era army
 slang acronym fubar (`fucked up beyond all recognition'), later
 bowdlerized to {foobar}. (see also {fubar}).
 however, the use of the word `foo' itself has more complicated
 antecedents, including a long history in comic strips and cartoons.
 the old "smokey stover" comic strips by bill holman often
 included the word `foo', in particular on license plates of cars;
 allegedly, `foo' and `bar' also occurred in walt kelly's
 "pogo" strips. in the  cartoon "daffy doc", a very
 early version of daffy duck holds up a sign saying "silence is
 foo!"; oddly, this seems to refer to some approving or positive
 affirmative use of foo. it has been suggested that this might be
 related to the chinese word `fu' (sometimes transliterated
 `foo'), which can mean "happiness" when spoken with the proper
 tone (the lion-dog guardians flanking the steps of many chinese
 restaurants are properly called "fu dogs").
 it is even possible that hacker usage actually springs from
 `foo, lampoons and parody', the title of a comic book first
 issued in september ; the byline read `c. crumb' but the style
 of the art suggests this may well have been a sort-of pseudonym for
 noted weird-comix artist robert crumb. the title foo was featured
 in large letters on the front cover. what the word meant to mr.
 crumb is anybody's guess.
an old-time member reports that in the  `dictionary of the
tmrc language', compiled at {tmrc} there was an entry that went
something like this:
foo: the first syllable of the sacred chant phrase "foo mane padme
hum." our first obligation is to keep the foo counters turning.
for more about the legendary foo counters, see {tmrc}. almost
the entire staff of what became the mit ai lab was involved with
tmrc, and probably picked the word up there.
very probably, hackish `foo' had no single origin and derives
through all these channels from yiddish `feh' and/or english
`fooey'.
:foobar: n. another common {metasyntactic variable}; see {foo}.
hackers do *not* generally use this to mean {fubar} in
either the slang or jargon sense.
:fool: n. as used by hackers, specifically describes a person who
habitually reasons from obviously or demonstrably incorrect
premises and cannot be persuaded by evidence to do otherwise; it is
not generally used in its other senses, i.e., to describe a person
with a native incapacity to reason correctly, or a clown. indeed,
in hackish experience many fools are capable of reasoning all too
effectively in executing their errors. see also {cretin},
{loser}, {fool file, the}.
:fool file, the: [usenet] n. a notional repository of all the most
 dramatically and abysmally stupid utterances ever. there is a
 subgenre of {sig block}s that consists of the header "from the
 fool file:" followed by some quote the poster wishes to represent
 as an immortal gem of dimwittery; for this to be really effective,
 the quote has to be so obviously wrong as to be laughable. more
 than one usenetter has achieved an unwanted notoriety by being
 quoted in this way.
:foonly: n. . the {pdp-} successor that was to have been built by
 the super foonly project at the stanford artificial intelligence
 laboratory along with a new operating system. the intention was to
 leapfrog from the old dec timesharing system sail was running to a
 new generation, bypassing tenex which at that time was the arpanet
 standard. arpa funding for both the super foonly and the new
 operating system was cut in . most of the design team went to
 dec and contributed greatly to the design of the pdp- model kl.
 . the name of the company formed by dave poole, one of the
 principal super foonly designers, and one of hackerdom's more
 colorful personalities. many people remember the parrot which sat
 on poole's shoulder and was a regular companion. . any of the
 machines built by poole's company. the first was the f- (a.k.a.
 super foonly), which was the computational engine used to create
 the graphics in the movie "tron". the f- was the fastest
 pdp- ever built, but only one was ever made. the effort drained
 foonly of its financial resources, and they turned towards building
 smaller, slower, and much less expensive machines. unfortunately,
 these ran not the popular {tops-} but a tenex variant called
 foonex; this seriously limited their market. also, the machines
 shipped were actually wire-wrapped engineering prototypes requiring
 individual attention from more than usually competent site
 personnel, and thus had significant reliability problems. poole's
 legendary temper and unwillingness to suffer fools gladly did not
 help matters. by the time of the jupiter project cancellation in
  foonly's proposal to build another f- was eclipsed by the
 {mars}, and the company never quite recovered. see the
 {mars} entry for the continuation and moral of this story.
:footprint: n. . the floor or desk area taken up by a piece of
 hardware. . [ibm] the audit trail (if any) left by a crashed
 program (often in plural, `footprints'). see also
 {toeprint}.
:for free: adj. said of a capability of a programming language or
 hardware equipment that is available by its design without needing
 cleverness to implement: "in apl, we get the matrix operations for
 free." "and owing to the way revisions are stored in this
 system, you get revision trees for free." usually it refers to a
 serendipitous feature of doing things a certain way (compare
 {big win}), but it may refer to an intentional but secondary
 feature.
:for the rest of us: [from the mac slogan "the computer for the
 rest of us"] adj. . used to describe a {spiffy} product whose
 affordability shames other comparable products, or (more often)
 used sarcastically to describe {spiffy} but very overpriced
 products. . describes a program with a limited interface,
 deliberately limited capabilities, non-orthogonality, inability to
 compose primitives, or any other limitation designed to not
 `confuse' a na"ive user. this places an upper bound on how far
 that user can go before the program begins to get in the way of the
 task instead of helping accomplish it. used in reference to
 macintosh software which doesn't provide obvious capabilities
 because it is thought that the poor lusers might not be able to
 handle them. becomes `the rest of *them*' when used in
 third-party reference; thus, "yes, it is an attractive program,
 but it's designed for the rest of them" means a program that
 superficially looks neat but has no depth beyond the surface flash.
 see also {wimp environment}, {macintrash},
 {point-and-drool interface}, {user-friendly}.
:for values of: [mit] a common rhetorical maneuver at mit is to use
 any of the canonical {random numbers} as placeholders for
 variables. "the max function takes  arguments, for arbitrary
 values of ." "there are  ways to leave your lover, for
  = ." this is especially likely when the speaker has uttered
 a random number and realizes that it was not recognized as such,
 but even `non-random' numbers are occasionally used in this
 fashion. a related joke is that pi equals  —- for
 small values of pi and large values of .
 historical note: this usage probably derives from the programming
 language mad (michigan algorithm decoder), an algol-like language
 that was the most common choice among mainstream (non-hacker) users
 at mit in the mid-s. it had a control structure for values of x
 = , ,  do … that would repeat the indicated instructions for
 each value in the list (unlike the usual for that only works for
 arithmetic sequences of values). mad is long extinct, but similar
 for-constructs still flourish (e.g. in unix's shell languages).
:fora: pl.n. plural of {forum}.
:foreground: [unix] vt. to foreground a task is to bring it to
 the top of one's {stack} for immediate processing, and hackers
 often use it in this sense for non-computer tasks. "if your
 presentation is due next week, i guess i'd better foreground
 writing up the design document."
 technically, on a time-sharing system, a task executing in
 foreground is one able to accept input from and return output to
 the user; oppose {background}. nowadays this term is primarily
 associated with {{unix}}, but it appears first to have been used
 in this sense on os/. normally, there is only one foreground
 task per terminal (or terminal window); having multiple processes
 simultaneously reading the keyboard is a good way to {lose}.
:fork bomb: [unix] n. a particular species of {wabbit} that can
 be written in one line of c (`main() {for(;;)fork();}') or shell
 (`$ & $ &') on any unix system, or occasionally created by an
 egregious coding bug. a fork bomb process `explodes' by
 recursively spawning copies of itself (using the unix system call
 `fork()'). eventually it eats all the process table entries
 and effectively wedges the system. fortunately, fork bombs are
 relatively easy to spot and kill, so creating one deliberately
 seldom accomplishes more than to bring the just wrath of the gods
 down upon the perpetrator. see also {logic bomb}.
:forked: [unix; prob. influenced by a mainstream expletive] adj.
 terminally slow, or dead. originated when one system was slowed to
 a snail's pace by an inadvertent {fork bomb}.
:fortrash: /for'trash/ n. hackerism for the fortran language,
referring to its primitive design, gross and irregular syntax,
limited control constructs, and slippery, exception-filled
semantics.
:fortune cookie: [waits, via unix] n. a random quote, item of
trivia, joke, or maxim printed to the user's tty at login time or
(less commonly) at logout time. items from this lexicon have often
been used as fortune cookies. see {cookie file}.
:forum: n. [usenet, genie, ci$; pl. `fora' or `forums'] any
 discussion group accessible through a dial-in {bbs}, a
 {mailing list}, or a {newsgroup} (see {network, the}). a
 forum functions much like a bulletin board; users submit
 {posting}s for all to read and discussion ensues. contrast
 real-time chat via {talk mode} or point-to-point personal
 {email}.
:fossil: n. . in software, a misfeature that becomes
 understandable only in historical context, as a remnant of times
 past retained so as not to break compatibility. example: the
 retention of octal as default base for string escapes in {c}, in
 spite of the better match of hexadecimal to ascii and modern
 byte-addressable architectures. see {dusty deck}. . more
 restrictively, a feature with past but no present utility.
 example: the force-all-caps (lcase) bits in the v and {bsd}
 unix tty driver, designed for use with monocase terminals. in a
 perversion of the usual backward-compatibility goal, this
 functionality has actually been expanded and renamed in some later
 {usg unix} releases as the iuclc and olcuc bits. . the fossil
 (fido/opus/seadog standard interface level) driver specification
 for serial-port access to replace the {brain-dead} routines in
 the ibm pc roms. fossils are used by most ms-dos {bbs} software
 in preference to the `supported' rom routines, which do not support
 interrupt-driven operation or setting speeds above ; the use of
 a semistandard fossil library is preferable to the {bare metal}
 serial port programming otherwise required. since the fossil
 specification allows additional functionality to be hooked in,
 drivers that use the {hook} but do not provide serial-port
 access themselves are named with a modifier, as in `video
 fossil'.
:four-color glossies: . literature created by {marketroid}s
 that allegedly contains technical specs but which is in fact as
 superficial as possible without being totally {content-free}.
 "forget the four-color glossies, give me the tech ref manuals."
 often applied as an indication of superficiality even when the
 material is printed on ordinary paper in black and white.
 four-color-glossy manuals are *never* useful for finding a
 problem. . [rare] applied by extension to manual pages that don't
 contain enough information to diagnose why the program doesn't
 produce the expected or desired output.
:fragile: adj. syn {brittle}.
:fred: n. . the personal name most frequently used as a
 {metasyntactic variable} (see {foo}). allegedly popular
 because it's easy for a non-touch-typist to type on a standard
 qwerty keyboard. unlike {j. random hacker} or `j. random
 loser', this name has no positive or negative loading (but see
 {mbogo, dr. fred}). see also {barney}. . an acronym for
 `flipping ridiculous electronic device'; other f-verbs may be
 substituted for `flipping'.
:frednet: /fred'net/ n. used to refer to some {random} and
 uncommon protocol encountered on a network. "we're implementing
 bridging in our router to solve the frednet problem."
:freeware: n. free software, often written by enthusiasts and
 distributed by users' groups, or via electronic mail, local
 bulletin boards, {usenet}, or other electronic media. at one
 time, `freeware' was a trademark of andrew fluegelman, the author
 of the well-known ms-dos comm program pc-talk iii. it wasn't
 enforced after his mysterious disappearance and presumed death
 in . see {shareware}.
:freeze: v. to lock an evolving software distribution or document
 against changes so it can be released with some hope of stability.
 carries the strong implication that the item in question will
 `unfreeze' at some future date. "ok, fix that bug and we'll
 freeze for release."
there are more specific constructions on this. a `feature freeze',
for example, locks out modifications intended to introduce new
features; a `code freeze' connotes no more changes at all.
at sun microsystems and elsewhere, one may also hear references to
`code slush' —- that is, an almost-but-not-quite frozen state.
:fried: adj. . non-working due to hardware failure; burnt out.
 especially used of hardware brought down by a `power glitch' (see
 {glitch}), {drop-outs}, a short, or some other electrical
 event. (sometimes this literally happens to electronic circuits!
 in particular, resistors can burn out and transformers can melt
 down, emitting noxious smoke —- see {friode}, {sed} and
 {ler}. however, this term is also used metaphorically.)
 compare {frotzed}. . of people, exhausted. said particularly
 of those who continue to work in such a state. often used as an
 explanation or excuse. "yeah, i know that fix destroyed the file
 system, but i was fried when i put it in." esp. common in
 conjunction with `brain': "my brain is fried today, i'm very
 short on sleep."
:friode: /fri:'ohd/ [tmrc] n. a reversible (that is, fused or
 blown) diode. compare {fried}; see also {sed}, {ler}.
:fritterware: n. an excess of capability that serves no productive
 end. the canonical example is font-diddling software on the mac
 (see {macdink}); the term describes anything that eats huge
 amounts of time for quite marginal gains in function but seduces
 people into using it anyway.
:frob: /frob/ . n. [mit] the {tmrc} definition was "frob = a
 protruding arm or trunnion"; by metaphoric extension, a `frob'
 is any random small thing; an object that you can comfortably hold
 in one hand; something you can frob. see {frobnitz}. . vt.
 abbreviated form of {frobnicate}. . [from the {mud} world]
 a command on some muds that changes a player's
 experience level (this can be used to make wizards); also, to
 request {wizard} privileges on the `professional courtesy'
 grounds that one is a wizard elsewhere. the command is actually
 `frobnicate' but is universally abbreviated to the shorter form.
:frobnicate: /frob'ni-kayt/ vt. [poss. derived from
 {frobnitz}, and usually abbreviated to {frob}, but
 `frobnicate' is recognized as the official full form.] to
 manipulate or adjust, to tweak. one frequently frobs bits or other
 -state devices. thus: "please frob the light switch" (that is,
 flip it), but also "stop frobbing that clasp; you'll break it".
 one also sees the construction `to frob a frob'. see {tweak}
 and {twiddle}. usage: frob, twiddle, and tweak sometimes
 connote points along a continuum. `frob' connotes aimless
 manipulation; `twiddle' connotes gross manipulation, often a
 coarse search for a proper setting; `tweak' connotes fine-tuning.
 if someone is turning a knob on an oscilloscope, then if he's
 carefully adjusting it, he is probably tweaking it; if he is just
 turning it but looking at the screen, he is probably twiddling it;
 but if he's just doing it because turning a knob is fun, he's
 frobbing it. the variant `frobnosticate' has been recently
 reported.
:frobnitz: /frob'nits/, pl. `frobnitzem' /frob'nit-zm/ or
 `frobni' /frob'ni:/ [tmrc] n. an unspecified physical object, a
 widget. also refers to electronic black boxes. this rare form is
 usually abbreviated to `frotz', or more commonly to {frob}.
 also used are `frobnule' (/frob'n[y]ool/) and `frobule'
 (/frob'yool/). starting perhaps in , `frobozz'
 /fr*-boz'/ (plural: `frobbotzim' /fr*-bot'zm/) has also
 become very popular, largely through its exposure as a name via
 {zork}. these can also be applied to nonphysical objects, such
 as data structures.
 pete samson, compiler of the {tmrc} lexicon, adds, "under the
 tmrc [railroad] layout were many storage boxes, managed (in )
 by david r. sawyer. several had fanciful designations written on
 them, such as `frobnitz coil oil'. perhaps drs intended frobnitz
 to be a proper name, but the name was quickly taken for the
 thing". this was almost certainly the origin of the term.
:frog: alt. `phrog' . interj. term of disgust (we seem to have
 a lot of them). . used as a name for just about anything. see
 {foo}. . n. of things, a crock. . n. of people, somewhere
 in between a turkey and a toad. . `froggy': adj. similar to
 `bagbiting' (see {bagbiter}), but milder. "this froggy
 program is taking forever to run!"
:frogging: [university of waterloo] v. . partial corruption of a text
 file or input stream by some bug or consistent glitch, as opposed
 to random events like line noise or media failures. might occur,
 for example, if one bit of each incoming character on a tty were
 stuck, so that some characters were correct and others were not.
 see {terminak} for a historical example. . by extension,
 accidental display of text in a mode where the output device emits
 special symbols or mnemonics rather than conventional ascii. often
 happens, for example, when using a terminal or comm program on a
 device like an ibm pc with a special `high-half' character set and
 with the bit-parity assumption wrong. a hacker sufficiently
 familiar with ascii bit patterns might be able to read the display
 anyway.
:front end: n. . an intermediary computer that does set-up and
 filtering for another (usually more powerful but less friendly)
 machine (a `back end'). . what you're talking to when you
 have a conversation with someone who is making replies without
 paying attention. "look at the dancing elephants!" "uh-huh."
 "do you know what i just said?" "sorry, you were talking to the
 front end." see also {fepped out}. . software that provides
 an interface to another program `behind' it, which may not be as
 user-friendly. probably from analogy with hardware front-ends (see
 sense ) that interfaced with mainframes.
:frotz: /frots/ . n. see {frobnitz}. . `mumble frotz': an
 interjection of very mild disgust.
:frotzed: /frotst/ adj. {down} because of hardware problems. compare
 {fried}. a machine that is merely frotzed may be fixable
 without replacing parts, but a fried machine is more seriously
 damaged.
:frowney: n. (alt. `frowney face') see {emoticon}.
:fry: . vi. to fail. said especially of smoke-producing hardware
failures. more generally, to become non-working. usage: never
said of software, only of hardware and humans. see {fried},
{magic smoke}. . vt. to cause to fail; to {roach}, {toast},
or {hose} a piece of hardware. never used of software or humans,
but compare {fried}.
:ftp: /f-t-p/, *not* /fit'ip/ . [techspeak] n. the file
transfer protocol for transmitting files between systems on the
internet. . vt. to {beam} a file using the file transfer
protocol. . sometimes used as a generic even for file transfers
not using {ftp}. "lemme get a copy of `wuthering
heights' ftp'd from uunet."
:fubar: n. the failed unibus address register in a vax. a good
 example of how jargon can occasionally be snuck past the {suit}s;
 see {foobar}, and {foo} for a fuller etymology.
:fuck me harder: excl. sometimes uttered in response to egregious
 misbehavior, esp. in software, and esp. of misbehaviors which
 seem unfairly persistent (as though designed in by the imp of the
 perverse). often theatrically elaborated: "aiighhh! fuck me with
 a piledriver and  feet of curare-tipped wrought-iron fence
 *and no lubricants*!" the phrase is sometimes heard
 abbreviated `fmh' in polite company.
 [this entry is an extreme example of the hackish habit of coining
 elaborate and evocative terms for lossage. here we see a quite
 self-conscious parody of mainstream expletives that has become a
 running gag in part of the hacker culture; it illustrates the
 hackish tendency to turn any situation, even one of extreme
 frustration, into an intellectual game (the point being, in this
 case, to creatively produce a long-winded description of the
 most anatomically absurd mental image possible —- the short forms
 implicitly allude to all the ridiculous long forms ever spoken).
 scatological language is actually relatively uncommon among
 hackers, and there was some controversy over whether this entry
 ought to be included at all. as it reflects a live usage
 recognizably peculiar to the hacker culture, we feel it is
 in the hackish spirit of truthfulness and opposition to all
 forms of censorship to record it here. —esr & gls]
:fud: /fuhd/ n. defined by gene amdahl after he left ibm to found
 his own company: "fud is the fear, uncertainty, and doubt that ibm
 sales people instill in the minds of potential customers who might
 be considering [amdahl] products." the idea, of course, was to
 persuade them to go with safe ibm gear rather than with
 competitors' equipment. this was traditionally done by promising
 that good things would happen to people who stuck with ibm, but
 dark shadows loomed over the future of competitors' equipment or
 software. see {ibm}.
:fud wars: /fuhd worz/ n. [from {fud}] political posturing engaged in
 by hardware and software vendors ostensibly committed to
 standardization but actually willing to fragment the market to
 protect their own shares. the unix international vs. osf conflict
 is but one outstanding example.
:fudge: . vt. to perform in an incomplete but marginally acceptable
 way, particularly with respect to the writing of a program. "i
 didn't feel like going through that pain and suffering, so i fudged
 it —- i'll fix it later." . n. the resulting code.
:fudge factor: n. a value or parameter that is varied in an ad hoc way
 to produce the desired result. the terms `tolerance' and
 {slop} are also used, though these usually indicate a one-sided
 leeway, such as a buffer that is made larger than necessary
 because one isn't sure exactly how large it needs to be, and it is
 better to waste a little space than to lose completely for not
 having enough. a fudge factor, on the other hand, can often be
 tweaked in more than one direction. a good example is the `fuzz'
 typically allowed in floating-point calculations: two numbers being
 compared for equality must be allowed to differ by a small amount;
 if that amount is too small, a computation may never terminate,
 while if it is too large, results will be needlessly inaccurate.
 fudge factors are frequently adjusted incorrectly by programmers
 who don't fully understand their import. see also {coefficient
 of x}.
:fuel up: vi. to eat or drink hurriedly in order to get back to
 hacking. "food-p?" "yeah, let's fuel up." "time for a
 {great-wall}!" see also {{oriental food}}.
:fuggly: /fuhg'lee/ adj. emphatic form of {funky}; funky +
 ugly). unusually for hacker jargon, this may actually derive from
 black street-jive. to say it properly, the first syllable should
 be growled rather than spoken. usage: humorous. "man, the
 {{ascii}}-to-{{ebcdic}} code in that printer driver is
 *fuggly*." see also {wonky}.
:fum: [xerox parc] n. at parc, often the third of the standard
 {metasyntactic variable}s (after {foo} and {bar}. competes
 with {baz}, which is more common outside parc.
:funky: adj. said of something that functions, but in a slightly
 strange, klugey way. it does the job and would be difficult to
 change, so its obvious non-optimality is left alone. often used to
 describe interfaces. the more bugs something has that nobody has
 bothered to fix because workarounds are easier, the funkier it is.
 {teco} and uucp are funky. the intel i's exception handling is
 extraordinarily funky. most standards acquire funkiness as they
 age. "the new mailer is installed, but is still somewhat funky;
 if it bounces your mail for no reason, try resubmitting it."
 "this uart is pretty funky. the data ready line is active-high in
 interrupt mode and active-low in dma mode." see {fuggly}.
:funny money: n. . notional `dollar' units of computing time and/or
 storage handed to students at the beginning of a computer course;
 also called `play money' or `purple money' (in implicit
 opposition to real or `green' money). in new zealand and germany
 the odd usage `paper money' has been recorded; in gremany, the
 particularly amusing synonym `transfer rouble' commemmorates the
 worthlessness of the ex-ussr's currency. when your funny money
 ran out, your account froze and you needed to go to a professor to
 get more. fortunately, the plunging cost of timesharing cycles has
 made this less common. the amounts allocated were almost
 invariably too small, even for the non-hackers who wanted to slide
 by with minimum work. in extreme cases, the practice led to
 small-scale black markets in bootlegged computer accounts. . by
 extension, phantom money or quantity tickets of any kind used as a
 resource-allocation hack within a system. antonym: `real
 money'.
:fuzzball: [tcp/ip hackers] n. a dec lsi- running a particular
 suite of homebrewed software written by dave mills and assorted
 co-conspirators, used in the early s for internet protocol
 testbedding and experimentation. these were used as nsfnet
 backbone sites in its early kb-line days; a few are still active
 on the internet as of early , doing odd jobs such as network
 time service.
:g: [si] pref.,suff. see {{quantifiers}}.
:gabriel: /gay'bree-*l/ [for dick gabriel, sail lisp hacker and
 volleyball fanatic] n. an unnecessary (in the opinion of the
 opponent) stalling tactic, e.g., tying one's shoelaces or combing
 one's hair repeatedly, asking the time, etc. also used to refer to
 the perpetrator of such tactics. also, `pulling a gabriel',
 `gabriel mode'.
:gag: vi. equivalent to {choke}, but connotes more disgust. "hey,
 this is fortran code. no wonder the c compiler gagged." see also
 {barf}.
:gang bang: n. the use of large numbers of loosely coupled
 programmers in an attempt to wedge a great many features into a
 product in a short time. though there have been memorable gang
 bangs (e.g., that over-the-weekend assembler port mentioned in
 steven levy's `hackers'), most are perpetrated by large
 companies trying to meet deadlines and produce enormous buggy
 masses of code entirely lacking in {orthogonal}ity. when
 market-driven managers make a list of all the features the
 competition has and assign one programmer to implement each, they
 often miss the importance of maintaining a coherent design. see
 also {firefighting}, {mongolian hordes technique},
 {conway's law}.
:garbage collect: vi. (also `garbage collection', n.) see {gc}.
:garply: /gar'plee/ [stanford] n. another metasyntactic variable (see
 {foo}); once popular among sail hackers.
:gas: [as in `gas chamber'] . interj. a term of disgust and
 hatred, implying that gas should be dispensed in generous
 quantities, thereby exterminating the source of irritation. "some
 loser just reloaded the system for no reason! gas!" . interj. a
 suggestion that someone or something ought to be flushed out of
 mercy. "the system's getting {wedged} every few minutes.
 gas!" . vt. to {flush} (sense ). "you should gas that old
 crufty software." . [ibm] n. dead space in nonsequentially
 organized files that was occupied by data that has been deleted;
 the compression operation that removes it is called `degassing' (by
 analogy, perhaps, with the use of the same term in vacuum
 technology). . [ibm] n. empty space on a disk that has been
 clandestinely allocated against future need.
:gaseous: adj. deserving of being {gas}sed. disseminated by
 geoff goodfellow while at sri; became particularly popular after
 the moscone-milk killings in san francisco, when it was learned
 that the defendant dan white (a politician who had supported
 proposition ) would get the gas chamber under proposition  if
 convicted of first-degree murder (he was eventually convicted of
 manslaughter).
:gc: /g-c/ [from lisp terminology; `garbage collect']
 . vt. to clean up and throw away useless things. "i think i'll
 gc the top of my desk today." when said of files, this is
 equivalent to {gfr}. . vt. to recycle, reclaim, or put to
 another use. . n. an instantiation of the garbage collector
 process.
 `garbage collection' is computer-science jargon for a particular
 class of strategies for dynamically reallocating computer memory.
 one such strategy involves periodically scanning all the data in
 memory and determining what is no longer accessible; useless data
 items are then discarded so that the memory they occupy can be
 recycled and used for another purpose. implementations of the lisp
 language usually use garbage collection.
 in jargon, the full phrase is sometimes heard but the {abbrev} is
 more frequently used because it is shorter. note that there is an
 ambiguity in usage that has to be resolved by context: "i'm going
 to garbage-collect my desk" usually means to clean out the
 drawers, but it could also mean to throw away or recycle the desk
 itself.
:gcos:: /jee'kohs/ n. a {quick-and-dirty} {clone} of
 system/ dos that emerged from ge around ; originally called
 gecos (the general electric comprehensive operating system). later
 kluged to support primitive timesharing and transaction processing.
 after the buyout of ge's computer division by honeywell, the name
 was changed to general comprehensive operating system (gcos).
 other os groups at honeywell began referring to it as `god's chosen
 operating system', allegedly in reaction to the gcos crowd's
 uninformed and snotty attitude about the superiority of their
 product. all this might be of zero interest, except for two facts:
 () the gcos people won the political war, and this led in the
 orphaning and eventual death of honeywell {{multics}}, and
 () gecos/gcos left one permanent mark on unix. some early unix
 systems at bell labs used gcos machines for print spooling and
 various other services; the field added to `/etc/passwd' to
 carry gcos id information was called the `gecos field' and
 survives today as the `pw_gecos' member used for the user's
 full name and other human-id information. gcos later played a
 major role in keeping honeywell a dismal also-ran in the mainframe
 market, and was itself ditched for unix in the late s when
 honeywell retired its aging {big iron} designs.
:gecos:: /jee'kohs/ n. see {{gcos}}.
:gedanken: /g*-don'kn/ adj. ungrounded; impractical; not
 well-thought-out; untried; untested. `gedanken' is a german word
 for `thought'. a thought experiment is one you carry out in your
 head. in physics, the term `gedanken experiment' is used to
 refer to an experiment that is impractical to carry out, but useful
 to consider because you can reason about it theoretically. (a
 classic gedanken experiment of relativity theory involves thinking
 about a man in an elevator accelerating through space.) gedanken
 experiments are very useful in physics, but you have to be careful.
 it's too easy to idealize away some important aspect of the real
 world in contructing your `apparatus'.
 among hackers, accordingly, the word has a pejorative connotation.
 it is said of a project, especially one in artificial intelligence
 research, that is written up in grand detail (typically as a ph.d.
 thesis) without ever being implemented to any great extent. such a
 project is usually perpetrated by people who aren't very good
 hackers or find programming distasteful or are just in a hurry. a
 `gedanken thesis' is usually marked by an obvious lack of
 intuition about what is programmable and what is not, and about
 what does and does not constitute a clear specification of an
 algorithm. see also {ai-complete}, {dwim}.
:geef: v. [ostensibly from `gefingerpoken'] vt. syn. {mung}. see
 also {blinkenlights}.
:geek out: vi. to temporarily enter techno-nerd mode while in a
 non-hackish context, for example at parties held near computer
 equipment. especially used when you need to do something highly
 technical and don't have time to explain: "pardon me while i geek
 out for a moment." see {computer geek}.
:gen: /jen/ n.,v. short for {generate}, used frequently in both spoken
 and written contexts.
:gender mender: n. a cable connector shell with either two male or two
 female connectors on it, used to correct the mismatches that result
 when some {loser} didn't understand the rsc specification and
 the distinction between dte and dce. used esp. for rs-c
 parts in either the original d- or the ibm pc's bogus d- format.
 also called `gender bender', `gender blender', `sex
 changer', and even `homosexual adapter'; however, there appears
 to be some confusion as to whether a `male homosexual adapter' has
 pins on both sides (is male) or sockets on both sides (connects two
 males).
:general public virus: n. pejorative name for some versions of the
 {gnu} project {copyleft} or general public license (gpl), which
 requires that any tools or {app}s incorporating copylefted code
 must be source-distributed on the same counter-commercial terms as
 gnu stuff. thus it is alleged that the copyleft `infects' software
 generated with gnu tools, which may in turn infect other software
 that reuses any of its code. the free software foundation's
 official position as of january  is that copyright law limits
 the scope of the gpl to "programs textually incorporating
 significant amounts of gnu code", and that the `infection' is not
 passed on to third parties unless actual gnu source is transmitted
 (as in, for example, use of the bison parser skeleton).
 nevertheless, widespread suspicion that the {copyleft} language
 is `boobytrapped' has caused many developers to avoid using gnu
 tools and the gpl. recent (july ) changes in the language of
 the version . license may eliminate this problem.
:generate: vt. to produce something according to an algorithm or
 program or set of rules, or as a (possibly unintended) side effect
 of the execution of an algorithm or program. the opposite of
 {parse}. this term retains its mechanistic connotations (though
 often humorously) when used of human behavior. "the guy is
 rational most of the time, but mention nuclear energy around him
 and he'll generate {infinite} flamage."
:gensym: /jen'sim/ [from maclisp for `generated symbol'] . v.
 to invent a new name for something temporary, in such a way that
 the name is almost certainly not in conflict with one already in
 use. . n. the resulting name. the canonical form of a gensym is
 `gnnnn' where nnnn represents a number; any lisp hacker would
 recognize g (for example) as a gensym. . a freshly generated
 data structure with a gensymmed name. these are useful for storing
 or uniquely identifying crufties (see {cruft}).
:get a life!: imp. hacker-standard way of suggesting that the person
 to whom you are speaking has succumbed to terminal geekdom (see
 {computer geek}). often heard on {usenet}, esp. as a way of
 suggesting that the target is taking some obscure issue of
 {theology} too seriously. this exhortation was popularized by
 william shatner on a "saturday night live" episode in a speech that
 ended "get a *life*!", but some respondents believe it to
 have been in use before then. it was certainly in wide use among
 hackers for at least five years before achieving mainstream
 currency around early .
:get a real computer!: imp. typical hacker response to news that
somebody is having trouble getting work done on a system that
(a) is single-tasking, (b) has no hard disk, or (c) has an address
space smaller than  megabytes. this is as of mid-; note that
the threshold for `real computer' rises with time, and it may well
be (for example) that machines with character-only displays will be
generally considered `unreal' in a few years (gls points out that
they already are in some circles). see {essentials}, {bitty
box}, and {toy}.
:gfr: /g-f-r/ vt. [its] from `grim file reaper', an its and lisp
 machine utility. to remove a file or files according to some
 program-automated or semi-automatic manual procedure, especially
 one designed to reclaim mass storage space or reduce name-space
 clutter (the original gfr actually moved files to tape). often
 generalized to pieces of data below file level. "i used to have
 his phone number, but i guess i {gfr}ed it." see also
 {prowler}, {reaper}. compare {gc}, which discards only
 provably worthless stuff.
:gig: /jig/ or /gig/ [si] n. see {{quantifiers}}.
:giga-: /ji'ga/ or /gi'ga/ [si] pref. see {{quantifiers}}.
:gigo: /gi:'goh/ [acronym] . `garbage in, garbage out' —-
 usually said in response to {luser}s who complain that a program
 didn't complain about faulty data. also commonly used to describe
 failures in human decision making due to faulty, incomplete, or
 imprecise data. . `garbage in, gospel out': this more recent
 expansion is a sardonic comment on the tendency human beings have
 to put excessive trust in `computerized' data.
:gilley: [usenet] n. the unit of analogical bogosity. according to
its originator, the standard for one gilley was "the act of
bogotoficiously comparing the shutting down of  machines for a
day with the killing of one person". the milligilley has been
found to suffice for most normal conversational exchanges.
:gillion: /gil'y*n/ or /jil'y*n/ [formed from {giga-} by analogy
with mega/million and tera/trillion] n. ^. same as an
american billion or a british `milliard'. how one pronounces
this depends on whether one speaks {giga-} with a hard or
soft `g'.
:gips: /gips/ or /jips/ [analogy with {mips}] n.
giga-instructions per second (also possibly `gillions of
instructions per second'; see {gillion}). in , this is used
of only a handful of highly parallel machines, but this is expected
to change. compare {kips}.
:glark: /glark/ vt. to figure something out from context. "the
 system iii manuals are pretty poor, but you can generally glark the
 meaning from context." interestingly, the word was originally
 `glork'; the context was "this gubblick contains many
 nonsklarkish english flutzpahs, but the overall pluggandisp can be
 glorked [sic] from context" (david moser, quoted by douglas
 hofstadter in his "metamagical themas" column in the
 january  `scientific american'). it is conjectured that
 hackish usage mutated the verb to `glark' because {glork} was
 already an established jargon term. compare {grok},
 {zen}.
:glass: [ibm] n. synonym for {silicon}.
:glass tty: /glas t-t-y/ or /glas ti'tee/ n. a terminal that
 has a display screen but which, because of hardware or software
 limitations, behaves like a teletype or some other printing
 terminal, thereby combining the disadvantages of both: like a
 printing terminal, it can't do fancy display hacks, and like a
 display terminal, it doesn't produce hard copy. an example is the
 early `dumb' version of lear-siegler adm  (without cursor
 control). see {tube}, {tty}; compare {dumb terminal}, {smart
 terminal}. see "{tv typewriters}" (appendix a) for an
 interesting true story about a glass tty.
:glassfet: /glas'fet/ [by analogy with mosfet, the acronym for
 `metal-oxide-semiconductor field-effect transistor'] n. syn.
 {firebottle}, a humorous way to refer to a vacuum tube.
:glitch: /glich/ [from german `glitschen' to slip, via yiddish
 `glitshen', to slide or skid] . n. a sudden interruption in
 electric service, sanity, continuity, or program function.
 sometimes recoverable. an interruption in electric service is
 specifically called a `power glitch' (also {power hit}). this
 is of grave concern because it usually crashes all the computers.
 in jargon, though, a hacker who got to the middle of a sentence and
 then forgot how he or she intended to complete it might say,
 "sorry, i just glitched". . vi. to commit a glitch. see
 {gritch}. . vt. [stanford] to scroll a display screen, esp.
 several lines at a time. {{waits}} terminals used to do this in
 order to avoid continuous scrolling, which is distracting to the
 eye. . obs. same as {magic cookie}, sense .
 all these uses of `glitch' derive from the specific technical
 meaning the term has in the electronic hardware world, where it is
 now techspeak. a glitch can occur when the inputs of a circuit
 change, and the outputs change to some {random} value for some
 very brief time before they settle down to the correct value. if
 another circuit inspects the output at just the wrong time, reading
 the random value, the results can be very wrong and very hard to
 debug (a glitch is one of many causes of electronic {heisenbug}s).
:glob: /glob/, *not* /glohb/ [unix] vt.,n. to expand
 special characters in a wildcarded name, or the act of so doing
 (the action is also called `globbing'). the unix conventions for
 filename wildcarding have become sufficiently pervasive that many
 hackers use some of them in written english, especially in email or
 news on technical topics. those commonly encountered include the
 following:
 wildcard for any string (see also {un*x})
wildcard for any character (generally read this way only at
the beginning or in the middle of a word)
delimits a wildcard matching any of the enclosed characters
alternation of comma-separated alternatives; thus,
`foo{baz,qux}' would be read as `foobaz' or `fooqux'
 some examples: "he said his name was [kc]arl" (expresses
 ambiguity). "i don't read talk.politics.*" (any of the
 talk.politics subgroups on {usenet}). other examples are given
 under the entry for {x}. compare {regexp}.
 historical note: the jargon usage derives from `glob', the
 name of a subprogram that expanded wildcards in archaic pre-bourne
 versions of the unix shell.
:glork: /glork/ . interj. term of mild surprise, usually tinged with
 outrage, as when one attempts to save the results of  hours of
 editing and finds that the system has just crashed. . used as a
 name for just about anything. see {foo}. . vt. similar to
 {glitch}, but usually used reflexively. "my program just glorked
 itself." see also {glark}.
:glue: n. generic term for any interface logic or protocol that
connects two component blocks. for example, {blue
glue} is ibm's sna protocol, and hardware designers call anything
used to connect large vlsi's or circuit blocks `glue logic'.
:gnarly: /nar'lee/ adj. both {obscure} and {hairy} in the
sense of complex. "{yow!} —- the tuned assembler
implementation of bitblt is really gnarly!" from a similar but
less specific usage in surfer slang.
:gnu: /gnoo/, *not* /noo/ . [acronym: `gnu's not unix!',
 see {{recursive acronym}}] a unix-workalike development effort of
 the free software foundation headed by richard stallman
 <rms@gnu.ai.mit.edu>. gnu emacs and the gnu c compiler, two tools
 designed for this project, have become very popular in hackerdom
 and elsewhere. the gnu project was designed partly to proselytize
 for rms's position that information is community property and all
 software source should be shared. one of its slogans is "help
 stamp out software hoarding!" though this remains controversial
 (because it implicitly denies any right of designers to own,
 assign, and sell the results of their labors), many hackers who
 disagree with rms have nevertheless cooperated to produce large
 amounts of high-quality software for free redistribution under the
 free software foundation's imprimatur. see {emacs},
 {copyleft}, {general public virus}. . noted unix hacker
 john gilmore <gnu@toad.com>, founder of usenet's anarchic alt.*
 hierarchy.
:gnumacs: /gnoo'maks/ [contraction of `gnu emacs'] often-heard
 abbreviated name for the {gnu} project's flagship tool, {emacs}.
 used esp. in contrast with {gosmacs}.
:go flatline: [from cyberpunk sf, refers to flattening of eeg
 traces upon brain-death] vi., also adjectival `flatlined'. . to
 {die}, terminate, or fail, esp. irreversibly. in hacker
 parlance, this is used of machines only, human death being
 considered somewhat too serious a matter to employ jargon-jokes
 about. . to go completely quiescent; said of machines undergoing
 controlled shutdown. "you can suffer file damage if you shut down
 unix but power off before the system has gone flatline." . of a
 video tube, to fail by losing vertical scan, so all one sees is a
 bright horizontal line bisecting the screen.
:go root: [unix] vi. to temporarily enter {root mode} in order
 to perform a privileged operation. this use is deprecated in
 australia, where v. `root' refers to animal sex.
:go-faster stripes: [uk] syn. {chrome}.
:gobble: vt. to consume or to obtain. the phrase `gobble up' tends to
 imply `consume', while `gobble down' tends to imply `obtain'.
 "the output spy gobbles characters out of a {tty} output buffer."
 "i guess i'll gobble down a copy of the documentation tomorrow."
 see also {snarf}.
:godzillagram: /god-zil'*-gram/ n. [from japan's national hero]
 . a network packet that in theory is a broadcast to every machine
 in the universe. the typical case of this is an ip datagram whose
 destination ip address is [...]. fortunately, few
 gateways are foolish enough to attempt to implement this! . a
 network packet of maximum size. an ip godzillagram has
 , octets.
:golden: adj. [prob. from folklore's `golden egg'] when used to
 describe a magnetic medium (e.g., `golden disk', `golden tape'),
 describes one containing a tested, up-to-spec, ready-to-ship
 software version. compare {platinum-iridium}.
:golf-ball printer: n. the ibm , a slow but letter-quality
 printing device and terminal based on the ibm selectric typewriter.
 the `golf ball' was a round object bearing reversed embossed
 images of  different characters arranged on four meridians of
 latitude; one could change the font by swapping in a different golf
 ball. this was the technology that enabled apl to use a
 non-ebcdic, non-ascii, and in fact completely non-standard
 character set. this put it  years ahead of its time —- where it
 stayed, firmly rooted, for the next , until character displays
 gave way to programmable bit-mapped devices with the flexibility to
 support other character sets.
:gonk: /gonk/ vt.,n. . to prevaricate or to embellish the truth
 beyond any reasonable recognition. it is alleged that in german
 the term is (mythically) `gonken'; in spanish the verb becomes
 `gonkar'. "you're gonking me. that story you just told me is a
 bunch of gonk." in german, for example, "du gonkst mir" (you're
 pulling my leg). see also {gonkulator}. . [british] to grab some
 sleep at an odd time; compare {gronk out}.
:gonkulator: /gon'kyoo-lay-tr/ [from the old "hogan's heroes" tv
 series] n. a pretentious piece of equipment that actually serves no
 useful purpose. usually used to describe one's least favorite
 piece of computer hardware. see {gonk}.
:gonzo: /gon'zoh/ [from hunter s. thompson] adj. overwhelming;
 outrageous; over the top; very large, esp. used of collections of
 source code, source files, or individual functions. has some of
 the connotations of {moby} and {hairy}, but without the
 implication of obscurity or complexity.
:good thing: n.,adj. often capitalized; always pronounced as if
 capitalized. . self-evidently wonderful to anyone in a position
 to notice: "the trailblazer's .kbaud pep mode with on-the-fly
 lempel-ziv compression is a good thing for sites relaying
 netnews." . something that can't possibly have any ill
 side-effects and may save considerable grief later: "removing the
 self-modifying code from that shared library would be a good
 thing." . when said of software tools or libraries, as in "yacc
 is a good thing", specifically connotes that the thing has
 drastically reduced a programmer's work load. oppose {bad
 thing}.
:gorilla arm: n. the side-effect that destroyed touch-screens as a
 mainstream input technology despite a promising start in the early
 s. it seems the designers of all those {spiffy} touch-menu
 systems failed to notice that humans aren't designed to hold their
 arms in front of their faces making small motions. after more than
 a very few selections, the arm begins to feel sore, cramped, and
 oversized; hence `gorilla arm'. this is now considered a classic
 cautionary tale to human-factors designers; "remember the gorilla
 arm!" is shorthand for "how is this going to fly in *real*
 use?".
:gorp: /gorp/ [cmu: perhaps from the canonical hiker's food, good
 old raisins and peanuts] another {metasyntactic variable}, like
 {foo} and {bar}.
:gosmacs: /goz'maks/ [contraction of `gosling emacs'] n. the first
 {emacs}-in-c implementation, predating but now largely eclipsed by
 {gnumacs}. originally freeware; a commercial version is now
 modestly popular as `unipress emacs'. the author (james gosling)
 went on to invent {news}.
:gosperism: /gos'p*r-izm/ a hack, invention, or saying by
 arch-hacker r. william (bill) gosper. this notion merits its own
 term because there are so many of them. many of the entries in
 {hakmem} are gosperisms; see also {life}.
:gotcha: n. a {misfeature} of a system, especially a programming
 language or environment, that tends to breed bugs or mistakes
 because it behaves in an unexpected way. for example, a classic
 gotcha in {c} is the fact that `if (a=b) {code;}' is
 syntactically valid and sometimes even correct. it puts the value
 of `b' into `a' and then executes `code' if
 `a' is non-zero. what the programmer probably meant was
 `if (a==b) {code;}', which executes `code' if
 `a' and `b' are equal.
:gpl: /g-p-l/ n. abbrev. for `general public license' in
widespread use; see {copyleft}.
:gpv: /g-p-v/ n. abbrev. for {general public virus} in
widespread use.
:grault: /grawlt/ n. yet another {metasyntactic variable}, invented by
 mike gallaher and propagated by the {gosmacs} documentation. see
 {corge}.
:gray goo: n. a hypothetical substance composed of {sagan}s of
 sub-micron-sized self-replicating robots programmed to make copies
 of themselves out of whatever is available. the image that goes
 with the term is one of the entire biosphere of earth being
 eventually converted to robot goo. this is the simplest of the
 {{nanotechnology}} disaster scenarios, easily refuted by arguments
 from energy requirements and elemental abundances. compare {blue
 goo}.
:great renaming: n. the {flag day} on which all of the non-local
groups on the {usenet} had their names changed from the net.-
format to the current multiple-hierarchies scheme.
:great runes: n. uppercase-only text or display messages. some
archaic operating systems still emit these. see also {runes},
{smash case}, {fold case}.
 decades ago, back in the days when it was the sole supplier of
 long-distance hardcopy transmittal devices, the teletype
 corporation was faced with a major design choice. to shorten code
 lengths and cut complexity in the printing mechanism, it had been
 decided that teletypes would use a monocase font, either all upper
 or all lower. the question was, which one to choose. a study was
 conducted on readability under various conditions of bad ribbon,
 worn print hammers, etc. lowercase won; it is less dense and has
 more distinctive letterforms, and is thus much easier to read both
 under ideal conditions and when the letters are mangled or partly
 obscured. the results were filtered up through {management}.
 the chairman of teletype killed the proposal because it failed one
 incredibly important criterion:
 "it would be impossible to spell the name of the deity
 correctly."
 in this way (or so, at least, hacker folklore has it) superstition
 triumphed over utility. teletypes were the major input devices on
 most early computers, and terminal manufacturers looking for
 corners to cut naturally followed suit until well into the s.
 thus, that one bad call stuck us with great runes for thirty years.
:great worm, the: n. the  internet {worm} perpetrated by
 {rtm}. this is a play on tolkien (compare {elvish},
 {elder days}). in the fantasy history of his middle earth
 books, there were dragons powerful enough to lay waste to entire
 regions; two of these (scatha and glaurung) were known as "the
 great worms". this usage expresses the connotation that the rtm
 hack was a sort of devastating watershed event in hackish history;
 certainly it did more to make non-hackers nervous about the
 internet than anything before or since.
:great-wall: [from sf fandom] vi.,n. a mass expedition to an
 oriental restaurant, esp. one where food is served family-style
 and shared. there is a common heuristic about the amount of food
 to order, expressed as "get n -  entrees"; the value of n,
 which is the number of people in the group, can be inferred from
 context (see {n}). see {{oriental food}}, {ravs},
 {stir-fried random}.
:green book: n. . one of the three standard {postscript}
 references: `postscript language program design', bylined
 `adobe systems' (addison-wesley, ; qa..pp isbn;
 ---); see also {red book}, {blue book}, and the
 {white book} (sense )). . informal name for one of the three
 standard references on smalltalk: `smalltalk-: bits of
 history, words of advice', by glenn krasner (addison-wesley, ;
 qa..ss; isbn ---) (this, too, is associated with
 blue and red books). . the `x/open compatibility guide'.
 defines an international standard {{unix}} environment that is a
 proper superset of posix/svid; also includes descriptions of a
 standard utility toolkit, systems administrations features, and the
 like. this grimoire is taken with particular seriousness in
 europe. see {purple book}. . the ieee . posix operating
 systems interface standard has been dubbed "the ugly green book".
 . any of the  standards which will be issued by the ccitt's
 tenth plenary assembly. until now, these have changed color each
 review cycle ( was {red book},  {blue book});
 however, it is rumored that this convention is going to be dropped
 before . these include, among other things, the x. email
 standard and the group  through  fax standards. see also
 {{book titles}}.
:green bytes: n. (also `green words') . meta-information
 embedded in a file, such as the length of the file or its name; as
 opposed to keeping such information in a separate description file
 or record. the term comes from an ibm user's group meeting
 (ca. ) at which these two approaches were being debated and the
 diagram of the file on the blackboard had the `green bytes' drawn
 in green. . by extension, the non-data bits in any
 self-describing format. "a gif file contains, among other things,
 green bytes describing the packing method for the image." compare
 {out-of-band}, {zigamorph}, {fence} (sense ).
:green card: n. [after the `ibm system/ reference data'
 card] this is used for any summary of an assembly language, even if
 the color is not green. less frequently used now because of the
 decrease in the use of assembly language. "i'll go get my green
 card so i can check the addressing mode for that instruction."
 some green cards are actually booklets.
 the original green card became a yellow card when the system/
 was introduced, and later a yellow booklet. an anecdote from ibm
 refers to a scene that took place in a programmers' terminal room
 at yorktown in . a luser overheard one of the programmers ask
 another "do you have a green card?" the other grunted and
 passed the first a thick yellow booklet. at this point the luser
 turned a delicate shade of olive and rapidly left the room, never
 to return. see also {card}.
:green lightning: [ibm] n. . apparently random flashing streaks on
 the face of - terminals while a new symbol set is being
 downloaded. this hardware bug was left deliberately unfixed, as
 some genius within ibm suggested it would let the user know that
 `something is happening'. that, it certainly does. later
 microprocessor-driven ibm color graphics displays were actually
 *programmed* to produce green lightning! . [proposed] any
 bug perverted into an alleged feature by adroit rationalization or
 marketing. "motorola calls the cisc cruft in the 
 architecture `compatibility logic', but i call it green
 lightning". see also {feature}.
:green machine: n. a computer or peripheral device that has been
 designed and built to military specifications for field equipment
 (that is, to withstand mechanical shock, extremes of temperature
 and humidity, and so forth). comes from the olive-drab `uniform'
 paint used for military equipment.
:green's theorem: [tmrc] prov. for any story, in any group of people
 there will be at least one person who has not heard the story.
 [the name of this theorem is a play on a fundamental theorem in
 calculus. —- esr]
:grep: /grep/ [from the qed/ed editor idiom g/re/p , where
 re stands for a regular expression, to globally search for the
 regular expression and print the lines containing matches to it,
 via {{unix}} `grep()'] vt. to rapidly scan a file or set of
 files looking for a particular string or pattern (when browsing
 through a large set of files, one may speak of `grepping
 around'). by extension, to look for something by pattern. "grep
 the bulletin board for the system backup schedule, would you?"
 see also {vgrep}.
:grind: vt. . [mit and berkeley] to format code, especially lisp
 code, by indenting lines so that it looks pretty. this usage was
 associated with the maclisp community and is now rare;
 {prettyprint} was and is the generic term for such
 operations. . [unix] to generate the formatted version of a
 document from the nroff, troff, tex, or scribe source. the bsd
 program `vgrind()' grinds code for printing on a versatec
 bitmapped printer. . to run seemingly interminably, esp. (but
 not necessarily) if performing some tedious and inherently useless
 task. similar to {crunch} or {grovel}. grinding has a
 connotation of using a lot of cpu time, but it is possible to grind
 a disk, network, etc. see also {hog}. . to make the whole
 system slow. "troff really grinds a pdp-." . `grind grind'
 excl. roughly, "isn't the machine slow today!"
:grind crank: n. a mythical accessory to a terminal. a crank on the
 side of a monitor, which when operated makes a zizzing noise and
 causes the computer to run faster. usually one does not refer to a
 grind crank out loud, but merely makes the appropriate gesture and
 noise. see {grind} and {wugga wugga}.
 historical note: at least one real machine actually had a grind
 crank —- the r, a research machine built toward the end of the
 days of the great vacuum tube computers, in . r (also known
 as `the rice institute computer' (tric) and later as `the rice
 university computer' (truc)) had a single-step/free-run switch for
 use when debugging programs. since single-stepping through a large
 program was rather tedious, there was also a crank with a cam and
 gear arrangement that repeatedly pushed the single-step button.
 this allowed one to `crank' through a lot of code, then slow
 down to single-step for a bit when you got near the code of
 interest, poke at some registers using the console typewriter, and
 then keep on cranking.
:gripenet: [ibm] n. a wry (and thoroughly unoffical) name for ibm's
 internal vnet system, deriving from its common use by ibmers to
 voice pointed criticism of ibm management that would be taboo in
 more formal channels.
:gritch: /grich/ . n. a complaint (often caused by a {glitch}).
 . vi. to complain. often verb-doubled: "gritch gritch". . a
 synonym for {glitch} (as verb or noun).
:grok: /grok/, var. /grohk/ [from the novel `stranger in
 a strange land', by robert a. heinlein, where it is a martian word
 meaning literally `to drink' and metaphorically `to be one
 with'] vt. . to understand, usually in a global sense. connotes
 intimate and exhaustive knowledge. contrast {zen}, similar
 supernal understanding as a single brief flash. see also
 {glark}. . used of programs, may connote merely sufficient
 understanding. "almost all c compilers grok the `void' type
 these days."
:gronk: /gronk/ [popularized by johnny hart's comic strip
 "b.c." but the word apparently predates that] vt. . to
 clear the state of a wedged device and restart it. more severe
 than `to {frob}'. . [tmrc] to cut, sever, smash, or
 similarly disable. . the sound made by many .-inch diskette
 drives. in particular, the microfloppies on a commodore amiga go
 "grink, gronk".
:gronk out: vi. to cease functioning. of people, to go home and go
to sleep. "i guess i'll gronk out now; see you all tomorrow."
:gronked: adj. . broken. "the teletype scanner was gronked, so
 we took the system down." . of people, the condition of feeling
 very tired or (less commonly) sick. "i've been chasing that bug
 for  hours now and i am thoroughly gronked!" compare
 {broken}, which means about the same as {gronk} used of
 hardware, but connotes depression or mental/emotional problems in
 people.
:grovel: vi. . to work interminably and without apparent progress.
 often used transitively with `over' or `through'. "the file
 scavenger has been groveling through the file directories for 
 minutes now." compare {grind} and {crunch}. emphatic form:
 `grovel obscenely'. . to examine minutely or in complete detail.
 "the compiler grovels over the entire source program before
 beginning to translate it." "i grovelled through all the
 documentation, but i still couldn't find the command i wanted."
:grunge: /gruhnj/ n. . that which is grungy, or that which makes
 it so. . [cambridge] code which is inaccessible due to changes in
 other parts of the program. the preferred term in north america is
 {dead code}.
:gubbish: /guhb'*sh/ [a portmanteau of `garbage' and `rubbish'?]
 n. garbage; crap; nonsense. "what is all this gubbish?" the
 opposite portmanteau `rubbage' is also reported.
:guiltware: /gilt'weir/ n. . a piece of {freeware} decorated
 with a message telling one how long and hard the author worked on
 it and intimating that one is a no-good freeloader if one does not
 immediately send the poor suffering martyr gobs of money.
 . {shareware} that works.
:gumby: /guhm'bee/ [from a class of monty python characters,
poss. with some influence from the s claymation character] n.
an act of minor but conspicuous stupidity, often in `gumby
maneuver' or `pull a gumby'.
:gun: [its: from the `:gun' command] vt. to forcibly
terminate a program or job (computer, not career). "some idiot
left a background process running soaking up half the cycles, so i
gunned it." compare {can}.
:gunch: /guhnch/ [tmrc] vt. to push, prod, or poke at a device
that has almost produced the desired result. implies a threat to
{mung}.
:gurfle: /ger'fl/ interj. an expression of shocked disbelief. "he
said we have to recode this thing in fortran by next week.
gurfle!" compare {weeble}.
:guru: n. [unix] an expert. implies not only {wizard} skill but
 also a history of being a knowledge resource for others. less
 often, used (with a qualifier) for other experts on other systems,
 as in `vms guru'. see {source of all good bits}.
:guru meditation: n. amiga equivalent of `panic' in unix
 (sometimes just called a `guru' or `guru event'). when the
 system crashes, a cryptic message "guru meditation
 #xxxxxxxx.yyyyyyyy" appears, indicating what the problem was. an
 amiga guru can figure things out from the numbers. generally a
 {guru} event must be followed by a {vulcan nerve pinch}.
 this term is (no surprise) an in-joke from the earliest days of the
 amiga. there used to be a device called a `joyboard' which was
 basically a plastic board built onto on a joystick-like device; it
 was sold with a skiing game cartridge for the atari game machine.
 it is said that whenever the prototype os crashed, the system
 programmer responsible would calm down by concentrating on a
 solution while sitting cross-legged on a joyboard trying to keep
 the board in balance. this position resembled that of a
 meditating guru. sadly, the joke was removed in amigaos ..
:gweep: /gweep/ [wpi] . v. to {hack}, usually at night. at
 wpi, from  onwards, this often indicated that the speaker could
 be found at the college computing center punching cards or crashing
 the {pdp-} or, later, the dec-; the term has survived the
 demise of those technologies, however, and is still live in late
 . "i'm going to go gweep for a while. see you in the
 morning" "i gweep from pm till am during the week." . n. one
 who habitually gweeps in sense ; a {hacker}. "he's a
 hard-core gweep, mumbles code in his sleep."
:h: [from sf fandom] infix. a method of `marking' common words,
 i.e., calling attention to the fact that they are being used in a
 nonstandard, ironic, or humorous way. originated in the fannish
 catchphrase "bheer is the one true ghod!" from decades ago.
 h-infix marking of `ghod' and other words spread into the s
 counterculture via underground comix, and into early hackerdom
 either from the counterculture or from sf fandom (the three
 overlapped heavily at the time). more recently, the h infix has
 become an expected feature of benchmark names (dhrystone,
 rhealstone, etc.); this is prob. patterning on the original
 whetstone (the name of a laboratory) but influenced by the
 fannish/counterculture h infix.
:ha ha only serious: [from sf fandom, orig. as mutation of hhok,
 `ha ha only kidding'] a phrase (often seen abbreviated as hhos)
 that aptly captures the flavor of much hacker discourse. applied
 especially to parodies, absurdities, and ironic jokes that are both
 intended and perceived to contain a possibly disquieting amount of
 truth, or truths that are constructed on in-joke and self-parody.
 this lexicon contains many examples of ha-ha-only-serious in both
 form and content. indeed, the entirety of hacker culture is often
 perceived as ha-ha-only-serious by hackers themselves; to take it
 either too lightly or too seriously marks a person as an outsider,
 a {wannabee}, or in {larval stage}. for further
 enlightenment on this subject, consult any zen master. see also
 {{humor, hacker}}, and {ai koans}.
:hack: . n. originally, a quick job that produces what is needed,
 but not well. . n. an incredibly good, and perhaps very
 time-consuming, piece of work that produces exactly what is needed.
 . vt. to bear emotionally or physically. "i can't hack this
 heat!" . vt. to work on something (typically a program). in an
 immediate sense: "what are you doing?" "i'm hacking teco."
 in a general (time-extended) sense: "what do you do around here?"
 "i hack teco." more generally, "i hack `foo'" is roughly
 equivalent to "`foo' is my major interest (or project)". "i
 hack solid-state physics." . vt. to pull a prank on. see
 sense  and {hacker} (sense ). . vi. to interact with a
 computer in a playful and exploratory rather than goal-directed
 way. "whatcha up to?" "oh, just hacking." . n. short for
 {hacker}. . see {nethack}. . [mit] v. to explore
 the basements, roof ledges, and steam tunnels of a large,
 institutional building, to the dismay of physical plant workers and
 (since this is usually performed at educational institutions) the
 campus police. this activity has been found to be eerily similar
 to playing adventure games such as dungeons and dragons and {zork}.
 see also {vadding}.
 constructions on this term abound. they include `happy hacking'
 (a farewell), `how's hacking?' (a friendly greeting among
 hackers) and `hack, hack' (a fairly content-free but friendly
 comment, often used as a temporary farewell). for more on this
 totipotent term see "{the meaning of `hack'}". see
 also {neat hack}, {real hack}.
:hack attack: [poss. by analogy with `big mac attack' from ads
 for the mcdonald's fast-food chain; the variant `big hack attack'
 is reported] n. nearly synonymous with {hacking run}, though the
 latter more strongly implies an all-nighter.
:hack mode: n. . what one is in when hacking, of course. . more
 specifically, a zen-like state of total focus on the problem that
 may be achieved when one is hacking (this is why every good hacker
 is part mystic). ability to enter such concentration at will
 correlates strongly with wizardliness; it is one of the most
 important skills learned during {larval stage}. sometimes
 amplified as `deep hack mode'.
 being yanked out of hack mode (see {priority interrupt}) may be
 experienced as a physical shock, and the sensation of being in it
 is more than a little habituating. the intensity of this
 experience is probably by itself sufficient explanation for the
 existence of hackers, and explains why many resist being promoted
 out of positions where they can code. see also {cyberspace}
 (sense ).
 some aspects of hackish etiquette will appear quite odd to an
 observer unaware of the high value placed on hack mode. for
 example, if someone appears at your door, it is perfectly okay to
 hold up a hand (without turning one's eyes away from the screen) to
 avoid being interrupted. one may read, type, and interact with the
 computer for quite some time before further acknowledging the
 other's presence (of course, he or she is reciprocally free to
 leave without a word). the understanding is that you might be in
 {hack mode} with a lot of delicate {state} (sense ) in your
 head, and you dare not {swap} that context out until you have
 reached a good point to pause. see also {juggling eggs}.
:hack on: vt. to {hack}; implies that the subject is some
pre-existing hunk of code that one is evolving, as opposed to
something one might {hack up}.
:hack together: vt. to throw something together so it will work.
unlike `kluge together' or {cruft together}, this does not
necessarily have negative connotations.
:hack up: vt. to {hack}, but generally implies that the result is
 a hack in sense  (a quick hack). contrast this with {hack on}.
 to `hack up on' implies a {quick-and-dirty} modification to an
 existing system. contrast {hacked up}; compare {kluge up},
 {monkey up}, {cruft together}.
:hack value: n. often adduced as the reason or motivation for
 expending effort toward a seemingly useless goal, the point being
 that the accomplished goal is a hack. for example, maclisp had
 features for reading and printing roman numerals, which were
 installed purely for hack value. see {display hack} for one
 method of computing hack value, but this cannot really be
 explained. as a great artist once said of jazz: "if you hafta ask,
 you ain't never goin' to find out."
:hack-and-slay: v. (also `hack-and-slash') . to play a {mud}
or go mudding, especially with the intention of {berserking} for
pleasure. . to undertake an all-night programming/hacking
session, interspersed with stints of mudding as a change of pace.
this term arose on the british academic network amongst students
who worked nights and logged onto essex university's muds during
public-access hours ( a.m. to  a.m.). usually more
mudding than work was done in these sessions.
:hacked off: [analogous to `pissed off'] adj. said of system
administrators who have become annoyed, upset, or touchy owing to
suspicions that their sites have been or are going to be victimized
by crackers, or used for inappropriate, technically illegal, or
even overtly criminal activities. for example, having unreadable
files in your home directory called `worm', `lockpick', or `goroot'
would probably be an effective (as well as impressively obvious and
stupid) way to get your sysadmin hacked off at you.
:hacked up: adj. sufficiently patched, kluged, and tweaked that the
 surgical scars are beginning to crowd out normal tissue (compare
 {critical mass}). not all programs that are hacked become
 `hacked up'; if modifications are done with some eye to coherence
 and continued maintainability, the software may emerge better for
 the experience. contrast {hack up}.
:hacker: [originally, someone who makes furniture with an axe] n.
 . a person who enjoys exploring the details of programmable
 systems and how to stretch their capabilities, as opposed to most
 users, who prefer to learn only the minimum necessary. . one who
 programs enthusiastically (even obsessively) or who enjoys
 programming rather than just theorizing about programming. . a
 person capable of appreciating {hack value}. . a person who is
 good at programming quickly. . an expert at a particular program,
 or one who frequently does work using it or on it; as in `a unix
 hacker'. (definitions  through  are correlated, and people who
 fit them congregate.) . an expert or enthusiast of any kind. one
 might be an astronomy hacker, for example. . one who enjoys the
 intellectual challenge of creatively overcoming or circumventing
 limitations. . [deprecated] a malicious meddler who tries to
 discover sensitive information by poking around. hence `password
 hacker', `network hacker'. see {cracker}.
 the term `hacker' also tends to connote membership in the global
 community defined by the net (see {network, the} and
 {internet address}). it also implies that the person described
 is seen to subscribe to some version of the hacker ethic (see
 {hacker ethic, the}.
 it is better to be described as a hacker by others than to describe
 oneself that way. hackers consider themselves something of an
 elite (a meritocracy based on ability), though one to which new
 members are gladly welcome. there is thus a certain ego
 satisfaction to be had in identifying yourself as a hacker (but if
 you claim to be one and are not, you'll quickly be labeled
 {bogus}). see also {wannabee}.
:hacker ethic, the: n. . the belief that information-sharing
 is a powerful positive good, and that it is an ethical duty of
 hackers to share their expertise by writing free software and
 facilitating access to information and to computing resources
 wherever possible. . the belief that system-cracking for fun
 and exploration is ethically ok as long as the cracker commits
 no theft, vandalism, or breach of confidentiality.
 both of these normative ethical principles are widely, but by no
 means universally) accepted among hackers. most hackers subscribe
 to the hacker ethic in sense , and many act on it by writing and
 giving away free software. a few go further and assert that
 *all* information should be free and *any* proprietary
 control of it is bad; this is the philosophy behind the {gnu}
 project.
 sense  is more controversial: some people consider the act of
 cracking itself to be unethical, like breaking and entering.
 but this principle at least moderates the behavior of people who
 see themselves as `benign' crackers (see also {samurai}). on
 this view, it is one of the highest forms of hackerly courtesy
 to (a) break into a system, and then (b) explain to the sysop,
 preferably by email from a {superuser} account, exactly how it
 was done and how the hole can be plugged —- acting as an
 unpaid (and unsolicited) {tiger team}.
 the most reliable manifestation of either version of the hacker
 ethic is that almost all hackers are actively willing to share
 technical tricks, software, and (where possible) computing
 resources with other hackers. huge cooperative networks such as
 {usenet}, {fidonet} and internet (see {internet address})
 can function without central control because of this trait; they
 both rely on and reinforce a sense of community that may be
 hackerdom's most valuable intangible asset.
:hacking run: [analogy with `bombing run' or `speed run'] n. a
 hack session extended long outside normal working times, especially
 one longer than  hours. may cause you to `change phase the hard
 way' (see {phase}).
:hacking x for y: [its] n. the information its made publicly
 available about each user (the inquir record) was a sort of form in
 which the user could fill out fields. on display, two of these
 fields were combined into a project description of the form
 "hacking x for y" (e.g., `"hacking perceptrons for
 minsky"'). this form of description became traditional and has
 since been carried over to other systems with more general
 facilities for self-advertisement (such as unix {plan file}s).
:hackintosh: n. . an apple lisa that has been hacked into emulating a
macintosh (also called a `mac xl'). . a macintosh assembled
from parts theoretically belonging to different models in the line.
:hackish: /hak'ish/ adj. (also {hackishness} n.) . said of
something that is or involves a hack. . of or pertaining to
hackers or the hacker subculture. see also {true-hacker}.
:hackishness: n. the quality of being or involving a hack. this
 term is considered mildly silly. syn. {hackitude}.
:hackitude: n. syn. {hackishness}; this word is considered sillier.
:hair: [back-formation from {hairy}] n. the complications that
 make something hairy. "decoding {teco} commands requires a
 certain amount of hair." often seen in the phrase `infinite
 hair', which connotes extreme complexity. also in `hairiferous'
 (tending to promote hair growth): "gnumacs elisp encourages lusers
 to write complex editing modes." "yeah, it's pretty hairiferous
 all right." (or just: "hair squared!")
:hairy: adj. . annoyingly complicated. "{dwim} is incredibly
 hairy." . incomprehensible. "{dwim} is incredibly hairy."
 . of people, high-powered, authoritative, rare, expert, and/or
 incomprehensible. hard to explain except in context: "he knows
 this hairy lawyer who says there's nothing to worry about." see
 also {hirsute}.
 the adjective `long-haired' is well-attested to have been in
 slang use among scientists and engineers during the early s; it
 was equivalent to modern `hairy' senses  and , and was very
 likely ancestral to the hackish use. in fact the noun
 `long-hair' was at the time used to describe a person satisfying
 sense . both senses probably passed out of use when long hair
 was adopted as a signature trait by the s counterculture,
 leaving hackish `hairy' as a sort of stunted mutant relic.
:hakmem: /hak'mem/ n. mit ai memo  (february ). a
 legendary collection of neat mathematical and programming hacks
 contributed by many people at mit and elsewhere. (the title of the
 memo really is "hakmem", which is a -letterism for `hacks
 memo'.) some of them are very useful techniques, powerful
 theorems, or interesting unsolved problems, but most fall into the
 category of mathematical and computer trivia. here is a sampling
 of the entries (with authors), slightly paraphrased:
 item  (gene salamin): there are exactly , prime numbers less
 than ^.
 item  (rich schroeppel): the most *probable* suit
 distribution in bridge hands is ---, as compared to ---,
 which is the most *evenly* distributed. this is because the
 world likes to have unequal numbers: a thermodynamic effect saying
 things will not be in the state of lowest energy, but in the state
 of lowest disordered energy.
 item  (rich schroeppel): count the magic squares of order 
 (that is, all the -by- arrangements of the numbers from  to 
 such that all rows, columns, and diagonals add up to the same
 number). there are about  million, not counting those that
 differ only by rotation and reflection.
 item  (bill gosper): the myth that any given programming
 language is machine independent is easily exploded by computing the
 sum of powers of . if the result loops with period = 
 with sign +, you are on a sign-magnitude machine. if the
 result loops with period =  at -, you are on a
 twos-complement machine. if the result loops with period greater
 than , including the beginning, you are on a ones-complement
 machine. if the result loops with period greater than , not
 including the beginning, your machine isn't binary —- the pattern
 should tell you the base. if you run out of memory, you are on a
 string or bignum system. if arithmetic overflow is a fatal error,
 some fascist pig with a read-only mind is trying to enforce machine
 independence. but the very ability to trap overflow is machine
 dependent. by this strategy, consider the universe, or, more
 precisely, algebra: let x = the sum of many powers of  =
 …. now add x to itself:
 x + x = … thus, x = x - , so
 x = -. therefore algebra is run on a machine (the
 universe) that is two's-complement.
 item  (bill gosper and stuart nelson):  is the only
 number such that if you represent it on the {pdp-} as both an
 integer and a floating-point number, the bit patterns of the two
 representations are identical.
 item  (gosper): the "banana phenomenon" was encountered when
 processing a character string by taking the last  letters typed
 out, searching for a random occurrence of that sequence in the
 text, taking the letter following that occurrence, typing it out,
 and iterating. this ensures that every -letter string output
 occurs in the original. the program typed bananananananana…. we
 note an ambiguity in the phrase, "the nth occurrence of." in one
 sense, there are five 's in ; in another, there are
 nine. the editing program teco finds five. thus it finds only the
 first ana in banana, and is thus obligated to type n next. by
 murphy's law, there is but one nan, thus forcing a, and thus a
 loop. an option to find overlapped instances would be useful,
 although it would require backing up n -  characters before
 seeking the next n-character string.
note: this last item refers to a {dissociated press}
implementation. see also {banana problem}.
hakmem also contains some rather more complicated mathematical and
technical items, but these examples show some of its fun flavor.
:hakspek: /hak'speek/ n. a shorthand method of spelling found on
 many british academic bulletin boards and {talker system}s.
 syllables and whole words in a sentence are replaced by single
 ascii characters the names of which are phonetically similar or
 equivalent, while multiple letters are usually dropped. hence,
 `for' becomes `'; `two', `too', and `to' become `'; `ck'
 becomes `k'. "before i see you tomorrow" becomes "b i c u
 moro". first appeared in london about , and was probably
 caused by the slowness of available talker systems, which
 operated on archaic machines with outdated operating systems and
 no standard methods of communication. has become rarer since.
 see also {talk mode}.
:hammer: vt. commonwealth hackish syn. for {bang on}.
:hamster: n. . [fairchild] a particularly slick little piece of
 code that does one thing well; a small, self-contained hack. the
 image is of a hamster happily spinning its exercise wheel. . a
 tailless mouse; that is, one with an infrared link to a receiver on
 the machine, as opposed to the conventional cable. . [uk] any
 item of hardware made by amstrad, a company famous for its cheap
 plastic pc-almost-compatibles.
:hand-hacking: n. . the practice of translating {hot spot}s from
 an {hll} into hand-tuned assembler, as opposed to trying to
 coerce the compiler into generating better code. both the term and
 the practice are becoming uncommon. see {tune}, {bum}, {by
 hand}; syn. with v. {cruft}. . more generally, manual
 construction or patching of data sets that would normally be
 generated by a translation utility and interpreted by another
 program, and aren't really designed to be read or modified by
 humans.
:handle: [from cb slang] n. an electronic pseudonym; a `nom de
guerre' intended to conceal the user's true identity. network and
bbs handles function as the same sort of simultaneous concealment
and display one finds on citizen's band radio, from which the term
was adopted. use of grandiose handles is characteristic of
{cracker}s, {weenie}s, {spod}s, and other lower forms of
network life; true hackers travel on their own reputations rather
than invented legendry.
:hand-roll: [from obs. mainstream slang `hand-rolled' in
 opposition to `ready-made', referring to cigarettes] v. to
 perform a normally automated software installation or configuration
 process {by hand}; implies that the normal process failed due to
 bugs in the configurator or was defeated by something exceptional
 in the local environment. "the worst thing about being a gateway
 between four different nets is having to hand-roll a new sendmail
 configuration every time any of them upgrades."
:handshaking: n. hardware or software activity designed to start or
 keep two machines or programs in synchronization as they {do
 protocol}. often applied to human activity; thus, a hacker might
 watch two people in conversation nodding their heads to indicate
 that they have heard each others' points and say "oh, they're
 handshaking!". see also {protocol}.
:handwave: [poss. from gestures characteristic of stage magicians]
 . v. to gloss over a complex point; to distract a listener; to
 support a (possibly actually valid) point with blatantly faulty
 logic. . n. the act of handwaving. "boy, what a handwave!"
 if someone starts a sentence with "clearly…" or
 "obviously…" or "it is self-evident that…", it is
 a good bet he is about to handwave (alternatively, use of these
 constructions in a sarcastic tone before a paraphrase of someone
 else's argument suggests that it is a handwave). the theory behind
 this term is that if you wave your hands at the right moment, the
 listener may be sufficiently distracted to not notice that what you
 have said is {bogus}. failing that, if a listener does object,
 you might try to dismiss the objection with a wave of your hand.
 the use of this word is often accompanied by gestures: both hands
 up, palms forward, swinging the hands in a vertical plane pivoting
 at the elbows and/or shoulders (depending on the magnitude of the
 handwave); alternatively, holding the forearms in one position
 while rotating the hands at the wrist to make them flutter. in
 context, the gestures alone can suffice as a remark; if a speaker
 makes an outrageously unsupported assumption, you might simply wave
 your hands in this way, as an accusation, far more eloquent than
 words could express, that his logic is faulty.
:hang: v. . to wait for an event that will never occur. "the
 system is hanging because it can't read from the crashed drive".
 see {wedged}, {hung}. . to wait for some event to occur; to
 hang around until something happens. "the program displays a menu
 and then hangs until you type a character." compare {block}.
 . to attach a peripheral device, esp. in the construction `hang
 off': "we're going to hang another tape drive off the file
 server." implies a device attached with cables, rather than
 something that is strictly inside the machine's chassis.
:hanlon's razor: prov. a corollary of {finagle's law}, similar to
 occam's razor, that reads "never attribute to malice that which can
 be adequately explained by stupidity." the derivation of the
 common title hanlon's razor is unknown; a similar epigram has been
 attributed to william james. quoted here because it seems to be a
 particular favorite of hackers, often showing up in {fortune
 cookie} files and the login banners of bbs systems and commercial
 networks. this probably reflects the hacker's daily experience of
 environments created by well-intentioned but short-sighted people.
:happily: adv. of software, used to emphasize that a program is
 unaware of some important fact about its environment, either
 because it has been fooled into believing a lie, or because it
 doesn't care. the sense of `happy' here is not that of elation,
 but rather that of blissful ignorance. "the program continues to
 run, happily unaware that its output is going to /dev/null."
:haque: /hak/ [usenet] n. variant spelling of {hack}, used
 only for the noun form and connoting an {elegant} hack.
:hard boot: n. see {boot}.
:hardcoded: adj. . said of data inserted directly into a program,
 where it cannot be easily modified, as opposed to data in some
 {profile}, resource (see {de-rezz} sense ), or environment
 variable that a {user} or hacker can easily modify. . in c,
 this is esp. applied to use of a literal instead of a
 `#define' macro (see {magic number}).
:hardwarily: /hard-weir'*-lee/ adv. in a way pertaining to
 hardware. "the system is hardwarily unreliable." the adjective
 `hardwary' is *not* traditionally used, though it has recently
 been reported from the u.k. see {softwarily}.
:hardwired: adj. . in software, syn. for {hardcoded}. . by
 extension, anything that is not modifiable, especially in the sense
 of customizable to one's particular needs or tastes.
:has the x nature: [seems to derive from zen buddhist koans of the
 form "does an x have the buddha-nature?"] adj. common hacker
 construction for `is an x', used for humorous emphasis. "anyone
 who can't even use a program with on-screen help embedded in it
 truly has the {loser} nature!" see also {the x that can be y
 is not the true x}.
:hash bucket: n. a notional receptacle into which more than one
 thing accessed by the same key or short code might be dropped.
 when you look up a name in the phone book (for example), you
 typically hash it by extracting its first letter; the hash buckets
 are the alphabetically ordered letter sections. this is used as
 techspeak with respect to code that uses actual hash functions; in
 jargon, it is used for human associative memory as well. thus, two
 things `in the same hash bucket' may be confused with each other.
 "if you hash english words only by length, you get too many common
 grammar words in the first couple of hash buckets." compare {hash
 collision}.
:hash collision: [from the technical usage] n. (var. `hash
 clash') when used of people, signifies a confusion in associative
 memory or imagination, especially a persistent one (see
 {thinko}). true story: one of us [esr] was once on the phone
 with a friend about to move out to berkeley. when asked what he
 expected berkeley to be like, the friend replied: "well, i have
 this mental picture of naked women throwing molotov cocktails, but
 i think that's just a collision in my hash tables." compare
 {hash bucket}.
:hat: n. common (spoken) name for the circumflex (`^', ascii
 ) character. see {ascii} for other synonyms.
:hcf: /h-c-f/ n. mnemonic for `halt and catch fire', any of
 several undocumented and semi-mythical machine instructions with
 destructive side-effects, supposedly included for test purposes on
 several well-known architectures going as far back as the ibm .
 the mc microprocessor was the first for which an hcf opcode
 became widely known. this instruction caused the processor to
 {toggle} a subset of the bus lines as rapidly as it could; in
 some configurations this could actually cause lines to burn
 up.
:heads down: [sun] adj. concentrating, usually so heavily and for so
 long that everything outside the focus area is missed. see also
 {hack mode} and {larval stage}, although it is not confined to
 fledgling hackers.
:heartbeat: n. . the signal emitted by a level  ethernet
 transceiver at the end of every packet to show that the
 collision-detection circuit is still connected. . a periodic
 synchronization signal used by software or hardware, such as a bus
 clock or a periodic interrupt. . the `natural' oscillation
 frequency of a computer's clock crystal, before frequency division
 down to the machine's clock rate. . a signal emitted at regular
 intervals by software to demonstrate that it is still alive.
 sometimes hardware is designed to reboot the machine if it stops
 hearing a heartbeat. see also {breath-of-life packet}.
:heatseeker: [ibm] n. a customer who can be relied upon to always
 buy the latest version of an existing product (not quite the same
 as a member the {lunatic fringe}). a  example of a
 heatseeker is someone who, owning a  pc and windows ., goes
 out and buys windows . (which offers no worthwhile benefits
 unless you have a ). if all customers were heatseekers, vast
 amounts of money could be made by just fixing the bugs in each
 release (n) and selling it to them as release (n+).
:heavy metal: [cambridge] n. syn. {big iron}.
:heavy wizardry: n. code or designs that trade on a particularly
 intimate knowledge or experience of a particular operating system
 or language or complex application interface. distinguished from
 {deep magic}, which trades more on arcane *theoretical*
 knowledge. writing device drivers is heavy wizardry; so is
 interfacing to {x} (sense ) without a toolkit. esp. found in
 comments similar to "heavy wizardry begins here …". compare
 {voodoo programming}.
:heavyweight: adj. high-overhead; {baroque}; code-intensive;
 featureful, but costly. esp. used of communication protocols,
 language designs, and any sort of implementation in which maximum
 generality and/or ease of implementation has been pushed at the
 expense of mundane considerations such as speed, memory
 utilization, and startup time. {emacs} is a heavyweight editor;
 {x} is an *extremely* heavyweight window system. this term
 isn't pejorative, but one man's heavyweight is another's
 {elephantine} and a third's {monstrosity}. oppose
 `lightweight'. usage: now borders on techspeak, especially in
 the compound `heavyweight process'.
:heisenbug: /hi:'zen-buhg/ [from heisenberg's uncertainty
 principle in quantum physics] n. a bug that disappears or alters
 its behavior when one attempts to probe or isolate it. antonym of
 {bohr bug}; see also {mandelbug}, {schroedinbug}. in c,
 nine out of ten heisenbugs result from either {fandango on core}
 phenomena (esp. lossage related to corruption of the malloc
 {arena}) or errors that {smash the stack}.
:helen keller mode: n. . state of a hardware or software system
 that is deaf, dumb, and blind, i.e., accepting no input and
 generating no output, usually due to an infinite loop or some other
 excursion into {deep space}. (unfair to the real helen keller,
 whose success at learning speech was triumphant.) see also
 {go flatline}, {catatonic}. . on ibm pcs under dos, refers
 to a specific failure mode in which a screen saver has kicked in
 over an {ill-behaved} application which bypasses the interrupts
 the screen saver watches for activity. your choices are to try to
 get from the program's current state through a successful
 save-and-exit without being able to see what you're doing, or
 re-boot the machine. this isn't (strictly speaking) a crash.
:hello, sailor!: interj. occasional west coast equivalent of
 {hello, world}; seems to have originated at sail, later
 associated with the game {zork} (which also included "hello,
 aviator" and "hello, implementor"). originally from the
 traditional hooker's greeting to a swabbie fresh off the boat, of
 course.
:hello, wall!: excl. see {wall}.
:hello, world: interj. . the canonical minimal test message in the
 c/unix universe. . any of the minimal programs that emit this
 message. traditionally, the first program a c coder is supposed to
 write in a new environment is one that just prints "hello, world"
 to standard output (and indeed it is the first example program
 in {k&r}). environments that generate an unreasonably large
 executable for this trivial test or which require a {hairy}
 compiler-linker invocation to generate it are considered to
 {lose} (see {x}). . greeting uttered by a hacker making an
 entrance or requesting information from anyone present. "hello,
 world! is the {vax} back up yet?"
:hex: n. . short for {{hexadecimal}}, base . . a -pack
 of anything (compare {quad}, sense ). neither usage has
 anything to do with {magic} or {black art}, though the pun is
 appreciated and occasionally used by hackers. true story: as a
 joke, some hackers once offered some surplus ics for sale to be
 worn as protective amulets against hostile magic. the chips were,
 of course, hex inverters.
:hexadecimal:: n. base . coined in the early s to replace
 earlier `sexadecimal', which was too racy and amusing for stuffy
 ibm, and later adopted by the rest of the industry.
 actually, neither term is etymologically pure. if we take `binary'
 to be paradigmatic, the most etymologically correct term for
 base , for example, is `denary', which
 comes from `deni' (ten at a time, ten each), a latin `distributive'
 number; the corresponding term for base- would be something like
 `sendenary'. `decimal' is from an ordinal number; the
 corresponding prefix for  would imply something like
 `sextidecimal'. the `sexa-' prefix is latin but incorrect in this
 context, and `hexa-' is greek. the word `octal' is similarly
 incorrect; a correct form would be `octaval' (to go with decimal),
 or `octonary' (to go with binary). if anyone ever implements a
 base- computer, computer scientists will be faced with the
 unprecedented dilemma of a choice between two *correct* forms;
 both `ternary' and `trinary' have a claim to this throne.
:hexit: /hek'sit/ n. a hexadecimal digit (—, and a—f or a—f).
 used by people who claim that there are only *ten* digits,
 dammit; sixteen-fingered human beings are rather rare, despite what
 some keyboard designs might seem to imply (see {space-cadet
 keyboard}).
:hhok: see {ha ha only serious}.
:hhos: see {ha ha only serious}.
:hidden flag: [scientific computation] n. an extra option added to a
 routine without changing the calling sequence. for example,
 instead of adding an explicit input variable to instruct a routine
 to give extra diagnostic output, the programmer might just add a
 test for some otherwise meaningless feature of the existing inputs,
 such as a negative mass. liberal use of hidden flags can make a
 program very hard to debug and understand.
:high bit: [from `high-order bit'] n. . the most significant
 bit in a byte. . by extension, the most significant part of
 something other than a data byte: "spare me the whole {saga},
 just give me the high bit." see also {meta bit}, {hobbit},
 {dread high-bit disease}, and compare the mainstream slang
 `bottom line'.
:high moby: /hi:' mohb'ee/ n. the high half of a k
{pdp-}'s physical address space; the other half was of course
the low moby. this usage has been generalized in a way that has
outlasted the {pdp-}; for example, at the  washington d.c.
area science fiction conclave (disclave), when a miscommunication
resulted in two separate wakes being held in commemoration of the
shutdown of mit's last {{its}} machines, the one on the upper
floor was dubbed the `high moby' and the other the `low moby'.
all parties involved {grok}ked this instantly. see {moby}.
:highly: [scientific computation] adv. the preferred modifier for
 overstating an understatement. as in: `highly nonoptimal', the
 worst possible way to do something; `highly nontrivial', either
 impossible or requiring a major research project; `highly
 nonlinear', completely erratic and unpredictable; `highly
 nontechnical', drivel written for {luser}s, oversimplified to the
 point of being misleading or incorrect (compare {drool-proof
 paper}). in other computing cultures, postfixing of {in the
 extreme} might be preferred.
:hing: // [irc] n. fortuitous typo for `hint', now in wide
 intentional use among players of {initgame}. compare
 {newsfroup}, {filk}.
:hirsute: adj. occasionally used humorously as a synonym for {hairy}.
:hll: /h-l-l/ n. [high-level language (as opposed to assembler)]
 found primarily in email and news rather than speech. rarely, the
 variants `vhll' and `mll' are found. vhll stands for
 `very-high-level language' and is used to describe a
 {bondage-and-discipline language} that the speaker happens to
 like; prolog and backus's fp are often called vhlls. `mll' stands
 for `medium-level language' and is sometimes used half-jokingly to
 describe {c}, alluding to its `structured-assembler' image.
 see also {languages of choice}.
:hobbit: n. . the high order bit of a byte; same as the {meta
 bit} or {high bit}. . the non-its name of vad@ai.mit.edu
 (*hobbit*), master of lasers.
:hog: n.,vt. . favored term to describe programs or hardware that
 seem to eat far more than their share of a system's resources,
 esp. those which noticeably degrade interactive response.
 *not* used of programs that are simply extremely large or
 complex or that are merely painfully slow themselves (see {pig,
 run like a}). more often than not encountered in qualified forms,
 e.g., `memory hog', `core hog', `hog the processor', `hog
 the disk'. "a controller that never gives up the i/o bus
 gets killed after the bus-hog timer expires." . also said
 of *people* who use more than their fair share of resources
 (particularly disk, where it seems that % of the people use %
 of the disk, no matter how big the disk is or how many people use
 it). of course, once disk hogs fill up one filesystem, they
 typically find some other new one to infect, claiming to the
 sysadmin that they have an important new project to complete.
:holy wars: [from {usenet}, but may predate it] n. {flame
 war}s over {religious issues}. the paper by danny cohen that
 popularized the terms {big-endian} and {little-endian} in
 connection with the lsb-first/msb-first controversy was entitled
 "on holy wars and a plea for peace". other perennial holy
 wars have included {emacs} vs. {vi}, my personal computer vs.
 everyone else's personal computer, {{its}} vs. {{unix}},
 {{unix}} vs. {vms}, {bsd} unix vs. {usg unix}, {c} vs.
 {{pascal}}, {c} vs. {lisp}, etc., ad nauseam. the
 characteristic that distinguishes holy wars from normal
 technical disputes is that in a holy wars most of the participants
 spend their time trying to pass off personal value choices and
 cultural attachments as objective technical evaluations. see also
 {theology}.
:home box: n. a hacker's personal machine, especially one he or she
 owns. "yeah? well, *my* home box runs a full . bsd, so
 there!"
:hook: n. a software or hardware feature included in order to
 simplify later additions or changes by a user. for example, a
 simple program that prints numbers might always print them in base
 , but a more flexible version would let a variable determine what
 base to use; setting the variable to  would make the program print
 numbers in base . the variable is a simple hook. an even more
 flexible program might examine the variable and treat a value of 
 or less as the base to use, but treat any other number as the
 address of a user-supplied routine for printing a number. this is
 a {hairy} but powerful hook; one can then write a routine to
 print numbers as roman numerals, say, or as hebrew characters, and
 plug it into the program through the hook. often the difference
 between a good program and a superb one is that the latter has
 useful hooks in judiciously chosen places. both may do the
 original job about equally well, but the one with the hooks is much
 more flexible for future expansion of capabilities ({emacs}, for
 example, is *all* hooks). the term `user exit' is
 synonymous but much more formal and less hackish.
:hop: n. one file transmission in a series required to get a file
 from point a to point b on a store-and-forward network. on such
 networks (including {uucpnet} and {fidonet}), the important
 inter-machine metric is the number of hops in the shortest path
 between them, rather than their geographical separation. see
 {bang path}.
:hose: . vt. to make non-functional or greatly degraded in
 performance. "that big ray-tracing program really hoses the
 system." see {hosed}. . n. a narrow channel through which
 data flows under pressure. generally denotes data paths that
 represent performance bottlenecks. . n. cabling, especially
 thick ethernet cable. this is sometimes called `bit hose' or
 `hosery' (play on `hosiery') or `etherhose'. see also
 {washing machine}.
:hosed: adj. same as {down}. used primarily by unix hackers.
 humorous: also implies a condition thought to be relatively easy to
 reverse. probably derived from the canadian slang `hoser'
 popularized by the bob and doug mackenzie skits on sctv. see
 {hose}. it is also widely used of people in the mainstream sense
 of `in an extremely unfortunate situation'.
 once upon a time, a cray that had been experiencing periodic
 difficulties crashed, and it was announced to have been hosed.
 it was discovered that the crash was due to the disconnection of
 some coolant hoses. the problem was corrected, and users were then
 assured that everything was ok because the system had been rehosed.
 see also {dehose}.
:hot spot: n. . [primarily used by c/unix programmers, but
 spreading] it is received wisdom that in most programs, less than
 % of the code eats % of the execution time; if one were to
 graph instruction visits versus code addresses, one would typically
 see a few huge spikes amidst a lot of low-level noise. such spikes
 are called `hot spots' and are good candidates for heavy
 optimization or {hand-hacking}. the term is especially used of
 tight loops and recursions in the code's central algorithm, as
 opposed to (say) initial set-up costs or large but infrequent i/o
 operations. see {tune}, {bum}, {hand-hacking}. . the
 active location of a cursor on a bit-map display. "put the
 mouse's hot spot on the `on' widget and click the left button."
 . a screen region that is sensitive to mouse clicks, which trigger
 some action. hypertext help screens are an example, in which a hot
 spot exists in the vicinity of any word for which additional
 material is available. . in a massively parallel computer with
 shared memory, the one location that all , processors are
 trying to read or write at once (perhaps because they are all doing
 a {busy-wait} on the same lock).
:house wizard: [prob. from ad-agency lingo, `house freak'] n. a
 hacker occupying a technical-specialist, r&d, or systems position
 at a commercial shop. a really effective house wizard can have
 influence out of all proportion to his/her ostensible rank and
 still not have to wear a suit. used esp. of unix wizards. the
 term `house guru' is equivalent.
:hp-sux: /h-p suhks/ n. unflattering hackerism for hp-ux,
 hewlett-packard's unix port, which eatures some truly unique bogosities
 in the filesystem internals and elsewhere (these occasionally create
 portability problems). hp-ux is often referred to as `hockey-pux'
 inside hp, and one respondent claims that the proper pronunciation
 is /h-p ukkkhhhh/ as though one were about to spit. another such
 alternate spelling and pronunciation is "h-pux" /h-puhks/.
 hackers at hp/apollo (the former apollo computers which was
 swallowed by hp in ) have been heard to complain that
 mr. packard should have pushed to have his name first, if for no
 other reason than the greater eloquence of the resulting acronym.
 compare {aidx}, {buglix}. see also {nominal semidestructor},
 {telerat}, {open deathtrap}, {scumos}, {sun-stools},
 {terminak}.
:huff: v. to compress data using a huffman code. various programs
 that use such methods have been called `huff' or some variant
 thereof. oppose {puff}. compare {crunch}, {compress}.
:humma: // excl. a filler word used on various `chat' and
 `talk' programs when you had nothing to say but felt that it was
 important to say something. the word apparently originated (at
 least with this definition) on the mecc timeshare system (mts, a
 now-defunct educational time-sharing system running in minnesota
 during the s and the early s) but was later sighted on
 early unix systems.
:humor, hacker:: n. a distinctive style of shared intellectual
 humor found among hackers, having the following marked
 characteristics:
 . fascination with form-vs.-content jokes, paradoxes, and humor
 having to do with confusion of metalevels (see {meta}). one way
 to make a hacker laugh: hold a red index card in front of him/her
 with "green" written on it, or vice-versa (note, however, that
 this is funny only the first time).
 . elaborate deadpan parodies of large intellectual constructs,
 such as specifications (see {write-only memory}), standards
 documents, language descriptions (see {intercal}), and even
 entire scientific theories (see {quantum bogodynamics},
 {computron}).
 . jokes that involve screwily precise reasoning from bizarre,
 ludicrous, or just grossly counter-intuitive premises.
 . fascination with puns and wordplay.
 . a fondness for apparently mindless humor with subversive
 currents of intelligence in it —- for example, old warner brothers
 and rocky & bullwinkle cartoons, the marx brothers, the early
 b-s, and monty python's flying circus. humor that combines this
 trait with elements of high camp and slapstick is especially
 favored.
 . references to the symbol-object antinomies and associated ideas
 in zen buddhism and (less often) taoism. see {has the x nature},
 {discordianism}, {zen}, {ha ha only serious}, {ai koans}.
 see also {filk}, {retrocomputing}, and {appendix b}. if you
 have an itchy feeling that all  of these traits are really aspects
 of one thing that is incredibly difficult to talk about exactly,
 you are (a) correct and (b) responding like a hacker. these traits
 are also recognizable (though in a less marked form) throughout
 {{science-fiction fandom}}.
:hung: [from `hung up'] adj. equivalent to {wedged}, but more
 common at unix/c sites. not generally used of people. syn. with
 {locked up}, {wedged}; compare {hosed}. see also {hang}.
 a hung state is distinguished from {crash}ed or {down}, where the
 program or system is also unusable but because it is not running
 rather than because it is waiting for something. however, the
 recovery from both situations is often the same.
:hungry puppy: n. syn. {slopsucker}.
:hungus: /huhng'g*s/ [perhaps related to slang `humongous'] adj.
 large, unwieldy, usually unmanageable. "tcp is a hungus piece of
 code." "this is a hungus set of modifications."
:hyperspace: /hi:'per-spays/ n. a memory location that is *far*
 away from where the program counter should be pointing, often
 inaccessible because it is not even mapped in. "another core
 dump —- looks like the program jumped off to hyperspace
 somehow." (compare {jump off into never-never land}.) this
 usage is from the sf notion of a spaceship jumping `into
 hyperspace', that is, taking a shortcut through higher-dimensional
 space —- in other words, bypassing this universe. the variant
 `east hyperspace' is recorded among cmu and bliss hackers.
:i didn't change anything!: interj. an aggrieved cry often heard as
 bugs manifest during a regression test. the {canonical} reply to
 this assertion is "then it works just the same as it did before,
 doesn't it?" see also {one-line fix}. this is also heard from
 applications programmers trying to blame an obvious applications
 problem on an unrelated systems software change, for example a
 divide-by- fault after terminals were added to a network.
 usually, their statement is found to be false. upon close
 questioning, they will admit some major restructuring of the
 program that shouldn't have broken anything, in their opinion,
 but which actually {hosed} the code completely.
:i see no x here.: hackers (and the interactive computer games they
 write) traditionally favor this slightly marked usage over other
 possible equivalents such as "there's no x here!" or "x is
 missing." or "where's the x?". this goes back to the original
 pdp- {advent}, which would respond in this wise if you asked
 it to do something involving an object not present at your location
 in the game.
:iy: // n. abbrev. for `interoperability', with the `'
 replacing fourteen letters. used in the {x} (windows)
 community. refers to portability and compatibility of data formats
 (even binary ones) between different programs or implementations of
 the same program on different machines.
:in: // n. abbrev. for `internationali{z,s}ation', with the 
 replacing  letters. used in the {x} (windows) community.
:ibm: /i-b-m/ inferior but marketable; it's better manually;
 insidious black magic; it's been malfunctioning; incontinent bowel
 movement; and a near-{infinite} number of even less complimentary
 expansions, including `international business machines'. see
 {tla}. these abbreviations illustrate the considerable
 antipathy most hackers have long felt toward the `industry leader'
 (see {fear and loathing}).
 what galls hackers about most ibm machines above the pc level isn't
 so much that they are underpowered and overpriced (though that does
 count against them), but that the designs are incredibly archaic,
 {crufty}, and {elephantine} … and you can't *fix* them
 —- source code is locked up tight, and programming tools are
 expensive, hard to find, and bletcherous to use once you've found
 them. with the release of the unix-based rios family this may have
 begun to change —- but then, we thought that when the pc-rt came
 out, too.
 in the spirit of universal peace and brotherhood, this lexicon now
 includes a number of entries attributed to `ibm'; these derive from
 some rampantly unofficial jargon lists circulated within ibm's own
 beleaguered hacker underground.
:ibm discount: n. a price increase. outside ibm, this derives from
 the common perception that ibm products are generally overpriced
 (see {clone}); inside, it is said to spring from a belief that
 large numbers of ibm employees living in an area cause prices to
 rise.
:icbm address: n. (also `missile address') the form used to
 register a site with the usenet mapping project includes a blank
 for longitude and latitude, preferably to seconds-of-arc accuracy.
 this is actually used for generating geographically-correct maps of
 usenet links on a plotter; however, it has become traditional to
 refer to this as one's `icbm address' or `missile address', and
 many people include it in their {sig block} with that name.
:ice: [coined by usenetter tom maddox, popularized by william
 gibson's cyberpunk sf novels: a contrived acronym for `intrusion
 countermeasure electronics'] security software (in gibson's novels,
 software that responds to intrusion by attempting to literally kill
 the intruder). also, `icebreaker': a program designed for
 cracking security on a system. neither term is in serious use yet
 as of mid-, but many hackers find the metaphor attractive, and
 each may develop a denotation in the future.
:idempotent: [from mathematical techspeak] adj. acting exactly
 once. this term is often used with respect to {c} header files,
 which contain common definitions and declarations to be included by
 several source files. if a header file is ever included twice
 during the same compilation (perhaps due to nested #include
 files), compilation errors can result unless the header file has
 protected itself against multiple inclusion; a header file so
 protected is said to be idempotent. the term can also be used to
 describe an initialization subroutine which is arranged to perform
 some critical action exactly once, even if the routine is called
 several times.
:if you want x, you know where to find it.: there is a legend that
 dennis ritchie, inventor of {c}, once responded to demands for
 features resembling those of what at the time was a much more
 popular language by observing "if you want pl/, you know where to
 find it." ever since, this has been hackish standard form for
 fending off requests to alter a new design to mimic some older
 (and, by implication, inferior and {baroque}) one. the case x =
 {pascal} manifests semi-regularly on usenet's comp.lang.c
 newsgroup. indeed, the case x = x has been reported in
 discussions of graphics software (see {x}).
:ifdef out: /if'def owt/ v. syn. for {condition out}, specific
 to {c}.
:ill-behaved: adj. . [numerical analysis] said of an algorithm or
 computational method that tends to blow up because of accumulated
 roundoff error or poor convergence properties. . software that
 bypasses the defined {os} interfaces to do things (like screen,
 keyboard, and disk i/o) itself, often in a way that depends on the
 hardware of the machine it is running on or which is nonportable or
 incompatible with other pieces of software. in the ibm pc/ms-dos
 world, there is a folk theorem (nearly true) to the effect that
 (owing to gross inadequacies and performance penalties in the os
 interface) all interesting applications are ill-behaved. see also
 {bare metal}. oppose {well-behaved}, compare {pc-ism}. see
 {mess-dos}.
:imho: // [from sf fandom via usenet; abbreviation for `in my humble
 opinion'] "imho, mixed-case c names should be avoided, as
 mistyping something in the wrong case can cause hard-to-detect
 errors —- and they look too pascalish anyhow." also seen in
 variant forms such as imnsho (in my not-so-humble opinion) and imao
 (in my arrogant opinion).
:imminent death of the net predicted!: [usenet] prov. since usenet
 first got off the ground in -, it has grown exponentially,
 approximately doubling in size every year. on the other hand, most
 people feel the {signal-to-noise ratio} of usenet has dropped
 steadily. these trends led, as far back as mid-, to predictions of
 the imminent collapse (or death) of the net. ten years and
 numerous doublings later, enough of these gloomy prognostications
 have been confounded that the phrase "imminent death of the net
 predicted!" has become a running joke, hauled out any time someone
 grumbles about the {s/n ratio} or the huge and steadily
 increasing volume.
:in the extreme: adj. a preferred superlative suffix for many hackish
 terms. see, for example, `obscure in the extreme' under {obscure},
 and compare {highly}.
:incantation: n. any particularly arbitrary or obscure command that
one must mutter at a system to attain a desired result. not used
of passwords or other explicit security features. especially used
of tricks that are so poorly documented they must be learned from a
{wizard}. "this compiler normally locates initialized data
in the data segment, but if you {mutter} the right incantation they
will be forced into text space."
:include: vt. [usenet] . to duplicate a portion (or whole) of
another's message (typically with attribution to the source) in a
reply or followup, for clarifying the context of one's response.
see the the discussion of inclusion styles under "hacker
writing style". . [from {c}] `#include <disclaimer.h>'
has appeared in {sig block}s to refer to a notional `standard
{disclaimer} file'.
:include war: n. excessive multi-leveled including within a
 discussion {thread}, a practice that tends to annoy readers. in
 a forum with high-traffic newsgroups, such as usenet, this can lead
 to {flame}s and the urge to start a {kill file}.
:indent style: [c programmers] n. the rules one uses to indent code
 in a readable fashion; a subject of {holy wars}. there are four
 major c indent styles, described below; all have the aim of
 making it easier for the reader to visually track the scope of
 control constructs. the significant variable is the placement of
 `{' and `}' with respect to the statement(s) they
 enclose and the guard or controlling statement (`if',
 `else', `for', `while', or `do') on the block,
 if any.
 `k&r style' —- named after kernighan & ritchie, because the
 examples in {k&r} are formatted this way. also called `kernel
 style' because the unix kernel is written in it, and the `one true
 brace style' (abbrev. tbs) by its partisans. the basic indent
 shown here is eight spaces (or one tab) per level; four are
 occasionally seen, but are much less common.
if (cond) {
<body>
`allman style' —- named for eric allman, a berkeley hacker who
wrote a lot of the bsd utilities in it (it is sometimes called
`bsd style'). resembles normal indent style in pascal and algol.
basic indent per level shown here is eight spaces, but four is just
as common (esp. in c++ code).
if (cond)
<body>
`whitesmiths style' —- popularized by the examples that came
with whitesmiths c, an early commercial c compiler. basic indent
per level shown here is eight spaces, but four is occasionally
seen.
 if (cond)
 <body>
`gnu style' —- used throughout gnu emacs and the free software
foundation code, and just about nowhere else. indents are always
four spaces per level, with `{' and `}' halfway between the
outer and inner indent levels.
if (cond)
<body>
 surveys have shown the allman and whitesmiths styles to be the most
 common, with about equal mind shares. k&r/tbs used to be nearly
 universal, but is now much less common (the opening brace tends to
 get lost against the right paren of the guard part in an `if'
 or `while', which is a {bad thing}). defenders of tbs
 argue that any putative gain in readability is less important than
 their style's relative economy with vertical space, which enables
 one to see more code on one's screen at once. doubtless these
 issues will continue to be the subject of {holy wars}.
:index: n. see {coefficient of x}.
:infant mortality: n. it is common lore among hackers (and in the
 electronics industry at large; this term is possibly techspeak by
 now) that the chances of sudden hardware failure drop off
 exponentially with a machine's time since power-up (that is, until
 the relatively distant time at which enough mechanical wear in i/o
 devices and thermal-cycling stress in components has accumulated
 for the machine to start going senile). up to half of all chip and
 wire failures happen within a new system's first few weeks; such
 failures are often referred to as `infant mortality' problems
 (or, occasionally, as `sudden infant death syndrome'). see
 {bathtub curve}, {burn-in period}.
:infinite: adj. consisting of a large number of objects; extreme.
 used very loosely as in: "this program produces infinite
 garbage." "he is an infinite loser." the word most likely to
 follow `infinite', though, is {hair} (it has been pointed out
 that fractals are an excellent example of infinite hair). these
 uses are abuses of the word's mathematical meaning. the term
 `semi-infinite', denoting an immoderately large amount of some
 resource, is also heard. "this compiler is taking a semi-infinite
 amount of time to optimize my program." see also {semi}.
:infinite loop: n. one that never terminates (that is, the machine
 {spin}s or {buzz}es forever and goes {catatonic}). there
 is a standard joke that has been made about each generation's
 exemplar of the ultra-fast machine: "the cray- is so fast it can
 execute an infinite loop in under  seconds!"
:infinity: n. . the largest value that can be represented in a
 particular type of variable (register, memory location, data type,
 whatever). . `minus infinity': the smallest such value, not
 necessarily or even usually the simple negation of plus infinity.
 in n-bit twos-complement arithmetic, infinity is
 ^(n-) -  but minus infinity is - (^(n-)),
 not -(^(n-) - ). note also that this is different from
 "time t equals minus infinity", which is closer to a
 mathematician's usage of infinity.
:initgame: /in-it'gaym/ [irc] n. an {irc} version of the
 venerable trivia game " questions", in which one user changes
 his {nick} to the initials of a famous person or other named
 entity, and the others on the channel ask yes or no questions, with
 the one to guess the person getting to be "it" next. as a
 courtesy, the one picking the initials starts by providing a
 -letter hint of the form sex, nationality, life-status,
 reality-status. for example, maar means "male, american, alive,
 real" (as opposed to "fictional"). initgame can be surprisingly
 addictive. see also {hing}.
:insanely great: adj. [mac community, from steve jobs; also bsd unix
 people via bill joy] something so incredibly {elegant} that it is
 imaginable only to someone possessing the most puissant of
 {hacker}-natures.
:intercal: /in't*r-kal/ [said by the authors to stand for
 `compiler language with no pronounceable acronym'] n. a
 computer language designed by don woods and james lyon in .
 intercal is purposely different from all other computer
 languages in all ways but one; it is purely a written language,
 being totally unspeakable. an excerpt from the intercal reference
 manual will make the style of the language clear:
 it is a well-known and oft-demonstrated fact that a person whose
 work is incomprehensible is held in high esteem. for example, if
 one were to state that the simplest way to store a value of 
 in a -bit intercal variable is:
 any sensible programmer would say that that was absurd. since this
 is indeed the simplest method, the programmer would be made to look
 foolish in front of his boss, who would of course have happened to
 turn up, as bosses are wont to do. the effect would be no less
 devastating for the programmer having been correct.
 intercal has many other peculiar features designed to make it even
 more unspeakable. the woods-lyons implementation was actually used
 by many (well, at least several) people at princeton. the language
 has been recently reimplemented as c-intercal and is consequently
 enjoying an unprecedented level of unpopularity; there is even an
 alt.lang.intercal newsgroup devoted to the study and …
 appreciation of the language on usenet.
:interesting: adj. in hacker parlance, this word has strong
 connotations of `annoying', or `difficult', or both. hackers
 relish a challenge, and enjoy wringing all the irony possible out
 of the ancient chinese curse "may you live in interesting times".
 oppose {trivial}, {uninteresting}.
:internet address:: n. . [techspeak] an absolute network address of
 the form foo@bar.baz, where foo is a user name, bar is a
 {sitename}, and baz is a `domain' name, possibly including
 periods itself. contrast with {bang path}; see also {network,
 the} and {network address}. all internet machines and most uucp
 sites can now resolve these addresses, thanks to a large amount of
 behind-the-scenes magic and pd software written since  or so.
 see also {bang path}, {domainist}. . more loosely, any
 network address reachable through internet; this includes {bang
 path} addresses and some internal corporate and government
 networks.
 reading internet addresses is something of an art. here are the
 four most important top-level functional internet domains followed
 by a selection of geographical domains:
com
commercial organizations
edu
educational institutions
gov
u.s. government civilian sites
mil
u.s. military sites
note that most of the sites in the com and edu domains are in
the u.s. or canada.
us
sites in the u.s. outside the functional domains
su
sites in the ex-soviet union (see {kremvax}).
uk
sites in the united kingdom
 within the us domain, there are subdomains for the fifty
 states, each generally with a name identical to the state's postal
 abbreviation. within the uk domain, there is an ac subdomain for
 academic sites and a co domain for commercial ones. other
 top-level domains may be divided up in similar ways.
:interrupt: . [techspeak] n. on a computer, an event that
 interrupts normal processing and temporarily diverts
 flow-of-control through an "interrupt handler" routine. see also
 {trap}. . interj. a request for attention from a hacker.
 often explicitly spoken. "interrupt —- have you seen joe
 recently?" see {priority interrupt}. . under ms-dos, the
 term `interrupt' is nearly synonymous with `system call', because
 the os and bios routines are both called using the int instruction
 (see {{interrupt list, the}}) and because programmers so often have
 to bypass the os (going directly to a bios interrupt) to get
 reasonable performance.
:interrupt list, the:: [ms-dos] n. the list of all known software
 interrupt calls (both documented and undocumented) for ibm pcs and
 compatibles, maintained and made available for free redistribution
 by ralf brown <ralf@cs.cmu.edu>. as of early , it had grown to
 approximately a megabyte in length.
:interrupts locked out: adj. when someone is ignoring you. in a
 restaurant, after several fruitless attempts to get the waitress's
 attention, a hacker might well observe "she must have interrupts
 locked out". the synonym `interrupts disabled' is also common.
 variations abound; "to have one's interrupt mask bit set" and
 "interrupts masked out" is also heard. see also {spl}.
:irc: /i-r-c/ [internet relay chat] n. a world-wide "party
 line" network that allows one to converse with others in real
 time. irc is structured as a network of internet servers, each of
 which accepts connections from client programs, one per user. the
 irc community and the {usenet} and {mud} communities overlap
 to some extent, including both hackers and regular folks who have
 discovered the wonders of computer networks. some usenet jargon
 has been adopted on irc, as have some conventions such as
 {emoticon}s. there is also a vigorous native jargon,
 represented in this lexicon by entries marked `[irc]'. see also
 {talk mode}.
:iron: n. hardware, especially older and larger hardware of
 {mainframe} class with big metal cabinets housing relatively
 low-density electronics (but the term is also used of modern
 supercomputers). often in the phrase {big iron}. oppose
 {silicon}. see also {dinosaur}.
:iron age: n. in the history of computing, — —- the
 formative era of commercial {mainframe} technology, when {big
 iron} {dinosaur}s ruled the earth. these began with the delivery
 of the first pdp-, coincided with the dominance of ferrite
 {core}, and ended with the introduction of the first commercial
 microprocessor (the intel ) in . see also {stone age};
 compare {elder days}.
:iron box: [unix/internet] n. a special environment set up to trap
 a {cracker} logging in over remote connections long enough to be
 traced. may include a modified {shell} restricting the cracker's
 movements in unobvious ways, and `bait' files designed to keep
 him interested and logged on. see also {back door},
 {firewall machine}, {venus flytrap}, and clifford stoll's
 account in `{the cuckoo's egg}' of how he made and used
 one (see the bibliography in appendix c). compare {padded
 cell}.
:ironmonger: [ibm] n. derogatory. a hardware specialist. compare
 {sandbender}, {polygon pusher}.
:its:: /i-t-s/ n. . incompatible time-sharing system, an
 influential but highly idiosyncratic operating system written for
 pdp-s and pdp-s at mit and long used at the mit ai lab. much
 ai-hacker jargon derives from its folklore, and to have been `an
 its hacker' qualifies one instantly as an old-timer of the most
 venerable sort. its pioneered many important innovations,
 including transparent file sharing between machines and
 terminal-independent i/o. after about , most actual work was
 shifted to newer machines, with the remaining its boxes run
 essentially as a hobby and service to the hacker community. the
 shutdown of the lab's last its machine in may  marked the end
 of an era and sent old-time hackers into mourning nationwide (see
 {high moby}). the royal institute of technology in sweden is
 maintaining one `live' its site at its computer museum (right next
 to the only tops- system still on the internet), so its is still
 alleged to hold the record for os in longest continuous use
 (however, {{waits}} is a credible rival for this palm). see
 {appendix a}. . a mythical image of operating-system perfection
 worshiped by a bizarre, fervent retro-cult of old-time hackers and
 ex-users (see {troglodyte}, sense ). its worshipers manage
 somehow to continue believing that an os maintained by
 assembly-language hand-hacking that supported only monocase
 -character filenames in one directory per account remains superior
 to today's state of commercial art (their venom against unix is
 particularly intense). see also {holy wars},
 {weenix}.
:iwbni: // [abbreviation] `it would be nice if'. compare {wibni}.
:iyfeg: // [usenet] abbreviation for `insert your favorite ethnic
 group'. used as a meta-name when telling racist jokes on the net
 to avoid offending anyone. see {jedr}.
:j. random: /j rand'm/ n. [generalized from {j. random hacker}]
 arbitrary; ordinary; any one; any old. `j. random' is often
 prefixed to a noun to make a name out of it. it means roughly
 `some particular' or `any specific one'. "would you let
 j. random loser marry your daughter?" the most common uses are
 `j. random hacker', `j. random loser', and `j. random nerd'
 ("should j. random loser be allowed to {gun} down other
 people?"), but it can be used simply as an elaborate version of
 {random} in any sense.
:j. random hacker: [mit] /j rand'm hak'r/ n. a mythical figure
 like the unknown soldier; the archetypal hacker nerd. see
 {random}, {suzie cobol}. this may originally have been
 inspired by `j. fred muggs', a show-biz chimpanzee whose name was a
 household word back in the early days of {tmrc}, and was
 probably influenced by `j. presper eckert' (one of the co-inventors
 of the digital computer).
:jack in: v. to log on to a machine or connect to a network or
 {bbs}, esp. for purposes of entering a {virtual reality}
 simulation such as a {mud} or {irc} (leaving is "jacking
 out"). this term derives from {cyberpunk} sf, in which it was
 used for the act of plugging an electrode set into neural sockets
 in order to interface the brain directly to a virtual reality.
 it's primarily used by mud & irc fans and younger hackers on bbs
 systems.
:jaggies: /jag'eez/ n. the `stairstep' effect observable when an
 edge (esp. a linear edge of very shallow or steep slope) is
 rendered on a pixel device (as opposed to a vector display).
:jcl: /j-c-l/ n. . ibm's supremely {rude} job control
 language. jcl is the script language used to control the execution
 of programs in ibm's batch systems. jcl has a very {fascist}
 syntax, and some versions will, for example, {barf} if two
 spaces appear where it expects one. most programmers confronted
 with jcl simply copy a working file (or card deck), changing the
 file names. someone who actually understands and generates unique
 jcl is regarded with the mixed respect one gives to someone who
 memorizes the phone book. it is reported that hackers at ibm
 itself sometimes sing "who's the breeder of the crud that mangles
 you and me? i-b-m, j-c-l, m-o-u-s-e" to the tune of the
 "mickey mouse club" theme to express their opinion of the
 beast. . a comparative for any very {rude} software that a
 hacker is expected to use. "that's as bad as jcl." as with
 {cobol}, jcl is often used as an archetype of ugliness even by
 those who haven't experienced it. see also {ibm}, {fear and
 loathing}.
:jedr: // n. synonymous with {iyfeg}. at one time, people in
 the usenet newsgroup rec.humor.funny tended to use `jedr'
 instead of {iyfeg} or `<ethnic>'; this stemmed from a public
 attempt to suppress the group once made by a loser with initials
 jedr after he was offended by an ethnic joke posted there. (the
 practice was {retcon}ned by the expanding these initials as
 `joke ethnic/denomination/race'.) after much sound and fury jedr
 faded away; this term appears to be doing likewise. jedr's only
 permanent effect on the net.culture was to discredit
 `sensitivity' arguments for censorship so thoroughly that more
 recent attempts to raise them have met with immediate and
 near-universal rejection.
:jfcl: /jif'kl/, /jaf'kl/, /j*-fi'kl/ vt., obs. (alt.
 `jfcl') to cancel or annul something. "why don't you jfcl that
 out?" the fastest do-nothing instruction on older models of the
 pdp- happened to be jfcl, which stands for "jump if flag set and
 then clear the flag"; this does something useful, but is a very
 fast no-operation if no flag is specified. geoff goodfellow, one
 of the jargon- co-authors, had jfcl on the license plate of his
 bmw for years. usage: rare except among old-time pdp-
 hackers.
:jiffy: n. . the duration of one tick of the system clock on the
 computer (see {tick}). often one ac cycle time (/ second in
 the u.s. and canada, / most other places), but more recently
 / sec has become common. "the swapper runs every  jiffies"
 means that the virtual memory management routine is executed once
 for every  ticks of the clock, or about ten times a second.
 . confusingly, the term is sometimes also used for a -millisecond
 {wall time} interval. even more confusingly, physicists
 semi-jokingly use `jiffy' to mean the time required for light to
 travel one foot in a vacuum, which turns out to be close to one
 *nanosecond*. . indeterminate time from a few seconds to
 forever. "i'll do it in a jiffy" means certainly not now and
 possibly never. this is a bit contrary to the more widespread use
 of the word. oppose {nano}. see also {real soon now}.
:job security: n. when some piece of code is written in a
 particularly {obscure} fashion, and no good reason (such as time
 or space optimization) can be discovered, it is often said that the
 programmer was attempting to increase his job security (i.e., by
 making himself indispensable for maintenance). this sour joke
 seldom has to be said in full; if two hackers are looking over some
 code together and one points at a section and says "job security",
 the other one may just nod.
:jock: n. . a programmer who is characterized by large and somewhat
 brute-force programs. see {brute force}. . when modified by
 another noun, describes a specialist in some particular computing
 area. the compounds `compiler jock' and `systems jock' seem to be
 the best-established examples of this.
:joe code: /joh' kohd`/ n. . code that is overly {tense} and
 unmaintainable. "{perl} may be a handy program, but if you look
 at the source, it's complete joe code." . badly written,
 possibly buggy code.
 correspondents wishing to remain anonymous have fingered a
 particular joe at the lawrence berkeley laboratory and observed
 that usage has drifted slightly; the original sobriquet `joe code'
 was intended in sense .
:jolix: n. /johl'liks/ n.,adj. bsd, the freeware port of the
 bsd net/ release to the intel i architecture by bill jolitz and
 friends. used to differentiate from bsdi's port based on the same
 source tape, which is called bsd/. see {bsd}.
:jr[ln]: /j-r-l/, /j-r-n/ n. the names jrl and jrn were
 sometimes used as example names when discussing a kind of user id
 used under {{tops-}} and {waits}; they were understood to be
 the initials of (fictitious) programmers named `j. random loser'
 and `j. random nerd' (see {j. random}). for example, if one
 said "to log in, type log one comma jay are en" (that is,
 "log ,jrn"), the listener would have understood that he should
 use his own computer id in place of `jrn'.
:jrst: /jerst/ [based on the pdp- jump instruction] v.,obs. to
 suddenly change subjects, with no intention of returning to the
 previous topic. usage: rather rare except among pdp- diehards,
 and considered silly. see also {aos}.
:juggling eggs: vi. keeping a lot of {state} in your head while
 modifying a program. "don't bother me now, i'm juggling eggs",
 means that an interrupt is likely to result in the program's being
 scrambled. in the classic first-contact sf novel `the mote in
 god's eye', by larry niven and jerry pournelle, an alien describes
 a very difficult task by saying "we juggle priceless eggs in
 variable gravity." that is a very hackish use of language. see
 also {hack mode}.
:jump off into never-never land: [from j. m. barrie's `peter
 pan'] v. same as {branch to fishkill}, but more common in
 technical cultures associated with non-ibm computers that use the
 term `jump' rather than `branch'. compare {hyperspace}.
:jupiter: [irc] vt. to kill an {irc} {robot} or user, and
 then take its place by adopting its {nick} so that it cannot
 reconnect. named after a particular irc user who did this to
 nickserv, the robot in charge of preventing people from
 inadvertently using a nick claimed by another user.
:k: /k/ [from {kilo-}] n. a kilobyte. this is used both as a
 spoken word and a written suffix (like {meg} and {gig} for
 megabyte and gigabyte). see {{quantifiers}}.
:k&r: [kernighan and ritchie] n. brian kernighan and dennis ritchie's
 book `the c programming language', esp. the classic and influential
 first edition (prentice-hall ; isbn ---). syn.
 {white book}, {old testament}. see also {new testament}.
:k-line: [irc] v. to ban a particular person from an {irc}
 server, usually for grossly bad {netiquette}. comes from the
 `k' code used to accomplish this in irc's configuration file.
:kahuna: /k*-hoo'nuh/ [ibm: from the hawaiian title for a shaman] n.
 synonym for {wizard}, {guru}.
:kamikaze packet: n. the `official' jargon for what is more commonly
 called a {christmas tree packet}. rfc-, `tcp and ip bake off'
 says:
  points for correctly being able to process a "kamikaze"
 packet (aka nastygram, christmas tree packet, lamp test
 segment, et al.). that is, correctly handle a segment with the
 maximum combination of features at once (e.g., a syn urg push
 fin segment with options and data).
 see also {chernobyl packet}.
:kangaroo code: n. syn. {spaghetti code}.
:ken: /ken/ n. . [unix] ken thompson, principal inventor of
 unix. in the early days he used to hand-cut distribution tapes,
 often with a note that read "love, ken". old-timers still use
 his first name (sometimes uncapitalized, because it's a login name
 and mail address) in third-person reference; it is widely
 understood (on usenet, in particular) that without a last name
 `ken' refers only to ken thompson. similarly, dennis without last
 name means dennis ritchie (and he is often known as dmr). see
 also {demigod}, {{unix}}. . a flaming user. this was
 originated by the software support group at symbolics because the
 two greatest flamers in the user community were both named ken.
:kgbvax: /k-g-b'vaks/ n. see {kremvax}.
:kibo: /kee'boh/ [acronym] knowledge in, bullshit out. a summary
 of what happens whenever valid data is passed through an
 organization (or person) which deliberately or accidentally
 disregards or ignores its significance. consider, for example,
 what advertising campaign can do with a product's actual
 specifications. compare {gigo}; see also {snafu principle}.
:kick: [irc] v. to cause somebody to be removed from a {irc}
 channel, an option only available to {chop}s. this is an
 extreme measure, often used to combat extreme {flamage} or
 {flood}ing, but sometimes used at the chop's whim.
:kill file: [usenet] n. (alt. `kill file') per-user file(s) used
 by some {usenet} reading programs (originally larry wall's
 `rn()') to discard summarily (without presenting for reading)
 articles matching some particularly uninteresting (or unwanted)
 patterns of subject, author, or other header lines. thus to add
 a person (or subject) to one's kill file is to arrange for that
 person to be ignored by one's newsreader in future. by extension,
 it may be used for a decision to ignore the person or subject in
 other media. see also {plonk}.
:killer micro: [popularized by eugene brooks] n. a
 microprocessor-based machine that infringes on mini, mainframe, or
 supercomputer performance turf. often heard in "no one will
 survive the attack of the killer micros!", the battle cry of the
 downsizers. used esp. of risc architectures.
 the popularity of the phrase `attack of the killer micros' is
 doubtless reinforced by the movie title "attack of the killer
 tomatoes" (one of the {canonical} examples of
 so-bad-it's-wonderful among hackers). this has even more flavor
 now that killer micros have gone on the offensive not just
 individually (in workstations) but in hordes (within massively
 parallel computers).
:killer poke: n. a recipe for inducing hardware damage on a machine
 via insertion of invalid values (see {poke}) in a memory-mapped
 control register; used esp. of various fairly well-known tricks
 on {bitty box}es without hardware memory management (such as the
 ibm pc and commodore pet) that can overload and trash analog
 electronics in the monitor. see also {hcf}.
:kilo-: [si] pref. see {{quantifiers}}.
:kips: /kips/ [abbreviation, by analogy with {mips} using {k}] n.
 thousands (*not* s) of instructions per second. usage:
 rare.
:kiss principle: /kis' prin'si-pl/ n. "keep it simple, stupid".
 a maxim often invoked when discussing design to fend off
 {creeping featurism} and control development complexity.
 possibly related to the {marketroid} maxim on sales
 presentations, "keep it short and simple".
:kit: [usenet; poss. fr. dec slang for a full software
 distribution, as opposed to a patch or upgrade] n. a source
 software distribution that has been packaged in such a way that it
 can (theoretically) be unpacked and installed according to a series
 of steps using only standard unix tools, and entirely documented by
 some reasonable chain of references from the top-level {readme
 file}. the more general term {distribution} may imply that
 special tools or more stringent conditions on the host environment
 are required.
:klone: /klohn/ n. see {clone}, sense .
:kludge: /kluhj/ n. common (but incorrect) variant of {kluge}, q.v.
:kluge: /klooj/ [from the german `klug', clever] . n. a rube
 goldberg (or heath robinson) device, whether in hardware or
 software. (a long-ago `datamation' article by jackson granholme
 said: "an ill-assorted collection of poorly matching parts,
 forming a distressing whole.") . n. a clever programming trick
 intended to solve a particular nasty case in an expedient, if not
 clear, manner. often used to repair bugs. often involves
 {ad-hockery} and verges on being a {crock}. in fact, the
 tmrc dictionary defined `kludge' as "a crock that works". . n.
 something that works for the wrong reason. . vt. to insert a
 kluge into a program. "i've kluged this routine to get around
 that weird bug, but there's probably a better way." . [wpi] n. a
 feature that is implemented in a {rude} manner.
 nowadays this term is often encountered in the variant spelling
 `kludge'. reports from {old fart}s are consistent that
 `kluge' was the original spelling, reported around computers as
 far back as the mid-s and, at that time, used exclusively of
 *hardware* kluges. in , the `new york folklore
 quarterly' reported a classic shaggy-dog story `murgatroyd the
 kluge maker' then current in the armed forces, in which a `kluge'
 was a complex and puzzling artifact with a trivial function.
 however, there is reason to believe this slang use may be a decade
 older. several respondents have connected it to the brand name of
 a device called a "kluge paper feeder" dating back at least to
 , an adjunct to mechanical printing presses. the kluge feeder
 was designed before small, cheap electric motors and control
 electronics; it relied on a fiendishly complex assortment of cams,
 belts, and linkages to both power and synchronize all its
 operations from one motive driveshaft. it was accordingly
 tempermental, subject to frequent breakdowns, and devilishly
 difficult to repair —- but oh, so clever! one traditional
 folk etymology of `kluge' makes it the name of a design engineer;
 in fact, `kluge' is a surname in german, and the designer of the
 kluge feeder may well have been the man behind this myth.
 the variant `kludge' was apparently popularized by the
 {datamation} article mentioned above; it was titled "how
 to design a kludge" (february , pages  and ). some people
 who encountered the word first in print or on-line jumped to the
 reasonable but incorrect conclusion that the word should be
 pronounced /kluhj/ (rhyming with `sludge'). the result of this
 tangled history is a mess; in , many (perhaps even most)
 hackers pronounce the word correctly as /klooj/ but spell it
 incorrectly as `kludge' (compare the pronunciation drift of
 {mung}). some observers consider this appropriate in view of
 its meaning.
:kluge around: vt. to avoid a bug or difficult condition by
 inserting a {kluge}. compare {workaround}.
:kluge up: vt. to lash together a quick hack to perform a task; this
 is milder than {cruft together} and has some of the connotations
 of {hack up} (note, however, that the construction `kluge on'
 corresponding to {hack on} is never used). "i've kluged up this
 routine to dump the buffer contents to a safe place."
:knights of the lambda calculus: n. a semi-mythical organization of
 wizardly lisp and scheme hackers. the name refers to a
 mathematical formalism invented by alonzo church, with which lisp
 is intimately connected. there is no enrollment list and the
 criteria for induction are unclear, but one well-known lisper has
 been known to give out buttons and, in general, the *members*
 know who they are….
:knuth: /nooth/ [donald e. knuth's `the art of computer
 programming'] n. mythically, the reference that answers all
 questions about data structures or algorithms. a safe answer when
 you do not know: "i think you can find that in knuth." contrast
 {literature, the}. see also {bible}.
:kremvax: /krem-vaks/ [from the then large number of {usenet}
 {vaxen} with names of the form foovax] n. originally, a
 fictitious usenet site at the kremlin, announced on april , 
 in a posting ostensibly originated there by soviet leader
 konstantin chernenko. the posting was actually forged by piet
 beertema as an april fool's joke. other fictitious sites mentioned
 in the hoax were moskvax and {kgbvax}. this was probably
 the funniest of the many april fool's forgeries perpetrated on
 usenet (which has negligible security against them), because the
 notion that usenet might ever penetrate the iron curtain seemed so
 totally absurd at the time.
 in fact, it was only six years later that the first genuine site in
 moscow, demos.su, joined usenet. some readers needed
 convincing that the postings from it weren't just another prank.
 vadim antonov, senior programmer at demos and the major poster from
 there up to mid-, was quite aware of all this, referred to it
 frequently in his own postings, and at one point twitted some
 credulous readers by blandly asserting that he *was* a
 hoax!
 eventually he even arranged to have the domain's gateway site
 *named* kremvax, thus neatly turning fiction into truth
 and demonstrating that the hackish sense of humor transcends
 cultural barriers. [mr. antonov also contributed the
 russian-language material for this lexicon. —- esr]
 in an even more ironic historical footnote, kremvax became an
 electronic center of the anti-communist resistance during the
 bungled hard-line coup of august . during those three days the
 soviet uucp network centered on kremvax became the only
 trustworthy news source for many places within the ussr. though
 the sysops were concentrating on internal communications,
 cross-border postings included immediate transliterations of boris
 yeltsin's decrees condemning the coup and eyewitness reports of the
 demonstrations in moscow's streets. in those hours, years of
 speculation that totalitarianism would prove unable to maintain its
 grip on politically-loaded information in the age of computer
 networking were proved devastatingly accurate —- and the original
 kremvax joke became a reality as yeltsin and the new russian
 revolutionaries of `glasnost' and `perestroika' made
 kremvax one of the timeliest means of their outreach to the
 west.
:kyrka: /shir'k*/ n. see {feature key}.
:lace card: n. obs. a {{punched card}} with all holes punched
 (also called a `whoopee card'). card readers tended to jam when
 they got to one of these, as the resulting card had too little
 structural strength to avoid buckling inside the mechanism. card
 punches could also jam trying to produce these things owing to
 power-supply problems. when some practical joker fed a lace card
 through the reader, you needed to clear the jam with a `card
 knife' —- which you used on the joker first.
:language lawyer: n. a person, usually an experienced or senior
 software engineer, who is intimately familiar with many or most of
 the numerous restrictions and features (both useful and esoteric)
 applicable to one or more computer programming languages. a
 language lawyer is distinguished by the ability to show you the
 five sentences scattered through a -plus-page manual that
 together imply the answer to your question "if only you had
 thought to look there". compare {wizard}, {legal},
 {legalese}.
:languages of choice: n. {c} and {lisp}. nearly every
 hacker knows one of these, and most good ones are fluent in both.
 smalltalk and prolog are also popular in small but influential
 communities.
 there is also a rapidly dwindling category of older hackers with
 fortran, or even assembler, as their language of choice. they
 often prefer to be known as {real programmer}s, and other
 hackers consider them a bit odd (see "{the story of mel, a
 real programmer}" in {appendix a}). assembler is generally no longer
 considered interesting or appropriate for anything but {hll}
 implementation, {glue}, and a few time-critical and
 hardware-specific uses in systems programs. fortran occupies a
 shrinking niche in scientific programming.
 most hackers tend to frown on languages like {{pascal}} and
 {{ada}}, which don't give them the near-total freedom considered
 necessary for hacking (see {bondage-and-discipline language}),
 and to regard everything that's even remotely connected with
 {cobol} or other traditional {card walloper} languages as a
 total and unmitigated {loss}.
:larval stage: n. describes a period of monomaniacal concentration
 on coding apparently passed through by all fledgling hackers.
 common symptoms include the perpetration of more than one -hour
 {hacking run} in a given week; neglect of all other activities
 including usual basics like food, sleep, and personal hygiene; and
 a chronic case of advanced bleary-eye. can last from  months to 
 years, the apparent median being around  months. a few so
 afflicted never resume a more `normal' life, but the ordeal
 seems to be necessary to produce really wizardly (as opposed to
 merely competent) programmers. see also {wannabee}. a less
 protracted and intense version of larval stage (typically lasting
 about a month) may recur when one is learning a new {os} or
 programming language.
:lase: /layz/ vt. to print a given document via a laser printer.
 "ok, let's lase that sucker and see if all those graphics-macro
 calls did the right things."
:laser chicken: n. kung pao chicken, a standard chinese dish
 containing chicken, peanuts, and hot red peppers in a spicy
 pepper-oil sauce. many hackers call it `laser chicken' for
 two reasons: it can {zap} you just like a laser, and the
 sauce has a red color reminiscent of some laser beams.
 in a variation on this theme, it is reported that some australian
 hackers have redesignated the common dish `lemon chicken' as
 `chernobyl chicken'. the name is derived from the color of the
 sauce, which is considered bright enough to glow in the dark (as,
 mythically, do some of the inhabitants of chernobyl).
:lasherism: [harvard] n. a program which solves a standard problem
 (such as the eight queens puzzle or implementing the {life}
 algorithm) in a deliberately nonstandard way. distinguished from a
 {crock} or {kluge} by the fact that the programmer did it on
 purpose as a mental exercise. lew lasher was a student at harvard
 around  who became notorious for such behavior.
:laundromat: n. syn. {disk farm}; see {washing machine}.
:ldb: /l*'d*b/ [from the pdp- instruction set] vt. to extract
 from the middle. "ldb me a slice of cake, please." this usage
 has been kept alive by common lisp's function of the same name.
 considered silly. see also {dpb}.
:leaf site: n. a machine that merely originates and reads usenet
 news or mail, and does not relay any third-party traffic. often
 uttered in a critical tone; when the ratio of leaf sites to
 backbone, rib, and other relay sites gets too high, the network
 tends to develop bottlenecks. compare {backbone site}, {rib
 site}.
:leak: n. with qualifier, one of a class of resource-management bugs
 that occur when resources are not freed properly after operations
 on them are finished, so they effectively disappear (leak out).
 this leads to eventual exhaustion as new allocation requests come
 in. {memory leak} and {fd leak} have their own entries; one
 might also refer, to, say, a `window handle leak' in a window
 system.
:leaky heap: [cambridge] n. an {arena} with a {memory leak}.
:legal: adj. loosely used to mean `in accordance with all the
 relevant rules', esp. in connection with some set of constraints
 defined by software. "the older =+ alternate for += is no longer
 legal syntax in ansi c." "this parser processes each line of
 legal input the moment it sees the trailing linefeed." hackers
 often model their work as a sort of game played with the
 environment in which the objective is to maneuver through the
 thicket of `natural laws' to achieve a desired objective. their
 use of `legal' is flavored as much by this game-playing sense as by
 the more conventional one having to do with courts and lawyers.
 compare {language lawyer}, {legalese}.
:legalese: n. dense, pedantic verbiage in a language description,
 product specification, or interface standard; text that seems
 designed to obfuscate and requires a {language lawyer} to
 {parse} it. though hackers are not afraid of high information
 density and complexity in language (indeed, they rather enjoy
 both), they share a deep and abiding loathing for legalese; they
 associate it with deception, {suit}s, and situations in which
 hackers generally get the short end of the stick.
:ler: /l-e-r/ [tmrc, from `light-emitting diode'] n. a
light-emitting resistor (that is, one in the process of burning
up). ohm's law was broken. see {sed}.
:lerp: /lerp/ vi.,n. quasi-acronym for linear interpolation, used as a
verb or noun for the operation. e.g., bresenham's algorithm lerps
incrementally between the two endpoints of the line.
:let the smoke out: v. to fry hardware (see {fried}). see
 {magic smoke} for the mythology behind this.
:letterbomb: n. a piece of {email} containing {live data}
 intended to do nefarious things to the recipient's machine or
 terminal. it is possible, for example, to send letterbombs that
 will lock up some specific kinds of terminals when they are viewed,
 so thoroughly that the user must cycle power (see {cycle}, sense
 ) to unwedge them. under unix, a letterbomb can also try to get
 part of its contents interpreted as a shell command to the mailer.
 the results of this could range from silly to tragic. see also
 {trojan horse}; compare {nastygram}.
:lexer: /lek'sr/ n. common hacker shorthand for `lexical
 analyzer', the input-tokenizing stage in the parser for a language
 (the part that breaks it into word-like pieces). "some c lexers
 get confused by the old-style compound ops like `=-'."
:lexiphage: /lek'si-fayj`/ n. a notorious word {chomper} on
 its. see {bagbiter}.
:life: n. . a cellular-automata game invented by john horton
 conway and first introduced publicly by martin gardner
 (`scientific american', october ); the game's popularity
 had to wait a few years for computers on which it could reasonably
 be played, as it's no fun to simulate the cells by hand. many
 hackers pass through a stage of fascination with it, and hackers at
 various places contributed heavily to the mathematical analysis of
 this game (most notably bill gosper at mit, who even implemented
 life in {teco}!; see {gosperism}). when a hacker mentions
 `life', he is much more likely to mean this game than the
 magazine, the breakfast cereal, or the human state of existence.
 . the opposite of {usenet}. as in {get a life!}
:life is hard: [xerox parc] prov. this phrase has two possible
 interpretations: () "while your suggestion may have some merit, i
 will behave as though i hadn't heard it." () "while your
 suggestion has obvious merit, equally obvious circumstances prevent
 it from being seriously considered." the charm of the phrase lies
 precisely in this subtle but important ambiguity.
:light pipe: n. fiber optic cable. oppose {copper}.
:lightweight: adj. opposite of {heavyweight}; usually found in
 combining forms such as `lightweight process'.
:like kicking dead whales down the beach: adj. describes a slow,
difficult, and disgusting process. first popularized by a famous
quote about the difficulty of getting work done under one of ibm's
mainframe oses. "well, you *could* write a c compiler in
cobol, but it would be like kicking dead whales down the beach."
see also {fear and loathing}
:like nailing jelly to a tree: adj. used to describe a task thought
to be impossible, esp. one in which the difficulty arises from
poor specification or inherent slipperiness in the problem domain.
"trying to display the `prettiest' arrangement of nodes and arcs
that diagrams a given graph is like nailing jelly to a tree,
because nobody's sure what `prettiest' means algorithmically."
:line : [from christian eschatological myth] n. the notational
 line of source at which a program fails for obscure reasons,
 implying either that *somebody* is out to get it (when you are
 the programmer), or that it richly deserves to be so gotten (when
 you are not). "it works when i trace through it, but seems to
 crash on line  when i run it." "what happens is that whenever
 a large batch comes through, mmdf dies on the line of the beast.
 probably some twit hardcoded a buffer size."
:line eater, the: [usenet] n. . a bug in some now-obsolete
 versions of the netnews software that used to eat up to bufsiz
 bytes of the article text. the bug was triggered by having the
 text of the article start with a space or tab. this bug was
 quickly personified as a mythical creature called the `line
 eater', and postings often included a dummy line of `line eater
 food'. ironically, line eater `food' not beginning with a space or
 tab wasn't actually eaten, since the bug was avoided; but if there
 *was* a space or tab before it, then the line eater would eat
 the food *and* the beginning of the text it was supposed to be
 protecting. the practice of `sacrificing to the line eater'
 continued for some time after the bug had been {nailed to the
 wall}, and is still humorously referred to. the bug itself is
 still (in mid-) occasionally reported to be lurking in some
 mail-to-netnews gateways. . see {nsa line eater}.
:line noise: n. . [techspeak] spurious characters due to
 electrical noise in a communications link, especially an rs-
 serial connection. line noise may be induced by poor connections,
 interference or crosstalk from other circuits, electrical storms,
 {cosmic rays}, or (notionally) birds crapping on the phone
 wires. . any chunk of data in a file or elsewhere that looks like
 the results of line noise in sense . . text that is
 theoretically a readable text or program source but employs syntax
 so bizarre that it looks like line noise in senses  or . yes,
 there are languages this ugly. the canonical example is {teco};
 it is often claimed that "teco's input syntax is indistinguishable
 from line noise." other non-{wysiwyg} editors, such as multics
 `qed' and unix `ed', in the hands of a real hacker, also
 qualify easily, as do deliberately obfuscated languages such as
:line starve: [mit] . vi. to feed paper through a printer the
 wrong way by one line (most printers can't do this). on a display
 terminal, to move the cursor up to the previous line of the screen.
 "to print `x squared', you just output `x', line starve, `', line
 feed." (the line starve causes the `' to appear on the line
 above the `x', and the line feed gets back to the original line.)
 . n. a character (or character sequence) that causes a terminal to
 perform this action. ascii , also called sub or control-z,
 was one common line-starve character in the days before
 microcomputers and the x. terminal standard. unlike `line
 feed', `line starve' is *not* standard {{ascii}}
 terminology. even among hackers it is considered a bit silly.
 . [proposed] a sequence such as \c (used in system v echo, as well
 as nroff/troff) that suppresses a {newline} or other
 character(s) that would normally be emitted.
:link farm: [unix] n. a directory tree that contains many links to
 files in a master directory tree of files. link farms save space
 when (for example) one is maintaining several nearly identical
 copies of the same source tree, e.g., when the only difference is
 architecture-dependent object files. "let's freeze the source and
 then rebuild the frobozz- and frobozz- link farms." link farms
 may also be used to get around restrictions on the number of
 `-i' (include-file directory) arguments on older
 c preprocessors. however, they can also get completely out of
 hand, becoming the filesystem equivalent of {spaghetti code}.
:link-dead: [mud] adj. said of a {mud} character who has frozen in
 place because of a dropped internet connection.
:lint: [from unix's `lint()', named for the bits of fluff it
 picks from programs] . vt. to examine a program closely for style,
 language usage, and portability problems, esp. if in c, esp. if
 via use of automated analysis tools, most esp. if the unix
 utility `lint()' is used. this term used to be restricted to
 use of `lint()' itself, but (judging by references on usenet)
 it has become a shorthand for {desk check} at some non-unix
 shops, even in languages other than c. also as v. {delint}.
 . n. excess verbiage in a document, as in "this draft has too
 much lint".
:lion food: [ibm] n. middle management or hq staff (by extension,
 administrative drones in general). from an old joke about two
 lions who, escaping from the zoo, split up to increase their
 chances but agreed to meet after  months. when they finally
 meet, one is skinny and the other overweight. the thin one says:
 "how did you manage? i ate a human just once and they turned out
 a small army to chase me —- guns, nets, it was terrible. since
 then i've been reduced to eating mice, insects, even grass." the
 fat one replies: "well, *i* hid near an ibm office and ate a
 manager a day. and nobody even noticed!"
:lions book: n. `source code and commentary on unix level ',
 by john lions. the two parts of this book contained () the entire
 source listing of the unix version  kernel, and () a commentary
 on the source discussing the algorithms. these were circulated
 internally at the university of new south wales beginning —,
 and were for years after the *only* detailed kernel
 documentation available to anyone outside bell labs. because
 western electric wished to maintain trade secret status on the
 kernel, the lions book was never formally published and was only
 supposed to be distributed to affiliates of source licensees. in
 spite of this, it soon spread by samizdat to a good many of the
 early unix hackers.
:lisp: [from `list processing language', but mythically from
 `lots of irritating superfluous parentheses'] n. the name of ai's
 mother tongue, a language based on the ideas of (a) variable-length
 lists and trees as fundamental data types, and (b) the
 interpretation of code as data and vice-versa. invented by john
 mccarthy at mit in the late s, it is actually older than any
 other {hll} still in use except fortran. accordingly, it has
 undergone considerable adaptive radiation over the years; modern
 variants are quite different in detail from the original lisp ..
 the dominant hll among hackers until the early s, lisp now
 shares the throne with {c}. see {languages of choice}.
 all lisp functions and programs are expressions that return
 values; this, together with the high memory utilization of lisps,
 gave rise to alan perlis's famous quip (itself a take on an oscar
 wilde quote) that "lisp programmers know the value of everything
 and the cost of nothing".
 one significant application for lisp has been as a proof by example
 that most newer languages, such as {cobol} and {ada}, are full
 of unnecessary {crock}s. when the {right thing} has already
 been done once, there is no justification for {bogosity} in newer
 languages.
:literature, the: n. computer-science journals and other
 publications, vaguely gestured at to answer a question that the
 speaker believes is {trivial}. thus, one might answer an
 annoying question by saying "it's in the literature." oppose
 {knuth}, which has no connotation of triviality.
:little-endian: adj. describes a computer architecture in which,
 within a given - or -bit word, bytes at lower addresses have
 lower significance (the word is stored `little-end-first'). the
 pdp- and vax families of computers and intel microprocessors and
 a lot of communications and networking hardware are little-endian.
 see {big-endian}, {middle-endian}, {nuxi problem}. the term
 is sometimes used to describe the ordering of units other than
 bytes; most often these are bits within a byte.
:live data: n. . data that is written to be interpreted and takes
 over program flow when triggered by some un-obvious operation, such
 as viewing it. one use of such hacks is to break security. for
 example, some smart terminals have commands that allow one to
 download strings to program keys; this can be used to write live
 data that, when listed to the terminal, infects it with a
 security-breaking {virus} that is triggered the next time a
 hapless user strikes that key. for another, there are some
 well-known bugs in {vi} that allow certain texts to send
 arbitrary commands back to the machine when they are simply viewed.
 . in c code, data that includes pointers to function {hook}s
 (executable code). . an object, such as a {trampoline}, that is
 constructed on the fly by a program and intended to be executed as
 code. . actual real-world data, as opposed to `test data'.
 for example, "i think i have the record deletion module
 finished." "have you tried it out on live data?" it usually
 carries the connotation that live data is more fragile and must not
 be corrupted, else bad things will happen. so a possible alternate
 response to the above claim might be: "well, make sure it works
 perfectly before we throw live data at it." the implication here
 is that record deletion is something pretty significant, and a
 haywire record-deletion module running amok on live data would
 cause great harm and probably require restoring from backups.
:live free or die!: imp. . the state motto of new hampshire, which
 appears on that state's automobile license plates. . a slogan
 associated with unix in the romantic days when unix aficionados saw
 themselves as a tiny, beleaguered underground tilting against the
 windmills of industry. the "free" referred specifically to
 freedom from the {fascist} design philosophies and crufty
 misfeatures common on commercial operating systems. armando
 stettner, one of the early unix developers, used to give out fake
 license plates bearing this motto under a large unix, all in new
 hampshire colors of green and white. these are now valued
 collector's items.
:livelock: /li:v'lok/ n. a situation in which some critical stage
 of a task is unable to finish because its clients perpetually
 create more work for it to do after they have been serviced but
 before it can clear its queue. differs from {deadlock} in that
 the process is not blocked or waiting for anything, but has a
 virtually infinite amount of work to do and can never catch up.
:liveware: /li:v'weir/ n. . synonym for {wetware}. less
 common. . [cambridge] vermin. "waiter, there's some liveware in
 my salad…"
:lobotomy: n. . what a hacker subjected to formal management
 training is said to have undergone. at ibm and elsewhere this term
 is used by both hackers and low-level management; the latter
 doubtless intend it as a joke. . the act of removing the
 processor from a microcomputer in order to replace or upgrade it.
 some very cheap {clone} systems are sold in `lobotomized' form
 —- everything but the brain.
:locked and loaded: [from military slang for an m- rifle with
 magazine inserted and prepared for firing] adj. said of a removable
 disk volume properly prepared for use —- that is, locked into the
 drive and with the heads loaded. ironically, because their heads
 are `loaded' whenever the power is up, this description is never
 used of {{winchester}} drives (which are named after a rifle).
:locked up: adj. syn. for {hung}, {wedged}.
:logic bomb: n. code surreptitiously inserted in an application or
 os that causes it to perform some destructive or
 security-compromising activity whenever specified conditions are
 met. compare {back door}.
:logical: [from the technical term `logical device', wherein a
 physical device is referred to by an arbitrary `logical' name]
 adj. having the role of. if a person (say, les earnest at sail)
 who had long held a certain post left and were replaced, the
 replacement would for a while be known as the `logical' les
 earnest. (this does not imply any judgment on the replacement.)
 compare {virtual}.
 at stanford, `logical' compass directions denote a coordinate
 system in which `logical north' is toward san francisco,
 `logical west' is toward the ocean, etc., even though logical
 north varies between physical (true) north near san francisco and
 physical west near san jose. (the best rule of thumb here is that,
 by definition, el camino real always runs logical north-and-south.)
 in giving directions, one might say: "to get to rincon tarasco
 restaurant, get onto {el camino bignum} going logical north."
 using the word `logical' helps to prevent the recipient from
 worrying about that the fact that the sun is setting almost
 directly in front of him. the concept is reinforced by north
 american highways which are almost, but not quite, consistently
 labeled with logical rather than physical directions. a similar
 situation exists at mit: route  (famous for the electronics
 industry that has grown up along it) is a -quarters circle
 surrounding boston at a radius of  miles, terminating near the
 coastline at each end. it would be most precise to describe the
 two directions along this highway as `clockwise' and
 `counterclockwise', but the road signs all say "north" and
 "south", respectively. a hacker might describe these directions
 as `logical north' and `logical south', to indicate that they
 are conventional directions not corresponding to the usual
 denotation for those words. (if you went logical south along the
 entire length of route , you would start out going northwest,
 curve around to the south, and finish headed due east, including
 one infamous stretch of pavement which is simultaneously route 
 south and interstate  north, and is signed as such!)
:loop through: vt. to process each element of a list of things.
 "hold on, i've got to loop through my paper mail." derives from
 the computer-language notion of an iterative loop; compare `cdr
 down' (under {cdr}), which is less common among c and unix
 programmers. its hackers used to say `irp over' after an
 obscure pseudo-op in the midas pdp- assembler.
:loose bytes: n. commonwealth hackish term for the padding bytes or
 {shim}s many compilers insert between members of a record or
 structure to cope with alignment requirements imposed by the
 machine architecture.
:lord high fixer: [primarily british, from gilbert & sullivan's
 `lord high executioner'] n. the person in an organization who knows
 the most about some aspect of a system. see {wizard}.
:lose: [mit] vi. . to fail. a program loses when it encounters
 an exceptional condition or fails to work in the expected manner.
 . to be exceptionally unesthetic or crocky. . of people, to
 be obnoxious or unusually stupid (as opposed to ignorant). see
 also {deserves to lose}. . n. refers to something that is
 {losing}, especially in the phrases "that's a lose!" and "what
 a lose!"
:lose lose: interj. a reply to or comment on an undesirable
 situation. "i accidentally deleted all my files!" "lose,
 lose."
:loser: n. an unexpectedly bad situation, program, programmer, or
 person. someone who habitually loses. (even winners can lose
 occasionally.) someone who knows not and knows not that he knows
 not. emphatic forms are `real loser', `total loser', and
 `complete loser' (but not *`moby loser', which would be a
 contradiction in terms). see {luser}.
:losing: adj. said of anything that is or causes a {lose} or
 {lossage}.
:loss: n. something (not a person) that loses; a situation in which
 something is losing. emphatic forms include `moby loss', and
 `total loss', `complete loss'. common interjections are
 "what a loss!" and "what a moby loss!" note that `moby loss'
 is ok even though *`moby loser' is not used; applied to an abstract
 noun, moby is simply a magnifier, whereas when applied to a person
 it implies substance and has positive connotations. compare
 {lossage}.
:lossage: /los'*j/ n. the result of a bug or malfunction. this
 is a mass or collective noun. "what a loss!" and "what
 lossage!" are nearly synonymous. the former is slightly more
 particular to the speaker's present circumstances; the latter
 implies a continuing {lose} of which the speaker is currently a
 victim. thus (for example) a temporary hardware failure is a loss,
 but bugs in an important tool (like a compiler) are serious
 lossage.
:lost in the noise: adj. syn. {lost in the underflow}. this term
 is from signal processing, where signals of very small amplitude
 cannot be separated from low-intensity noise in the system. though
 popular among hackers, it is not confined to hackerdom; physicists,
 engineers, astronomers, and statisticians all use it.
:lost in the underflow: adj. too small to be worth considering;
 more specifically, small beyond the limits of accuracy or
 measurement. this is a reference to `floating underflow', a
 condition that can occur when a floating-point arithmetic processor
 tries to handle quantities smaller than its limit of magnitude. it
 is also a pun on `undertow' (a kind of fast, cold current that
 sometimes runs just offshore and can be dangerous to swimmers).
 "well, sure, photon pressure from the stadium lights alters the
 path of a thrown baseball, but that effect gets lost in the
 underflow." see also {overflow bit}.
:lots of mips but no i/o: adj. used to describe a person who is
 technically brilliant but can't seem to communicate with human
 beings effectively. technically it describes a machine that has
 lots of processing power but is bottlenecked on input-output (in
 , the ibm rios, a.k.a. rs/, is a notorious recent
 example).
:low-bandwidth: [from communication theory] adj. used to indicate a
talk that, although not {content-free}, was not terribly
informative. "that was a low-bandwidth talk, but what can you
expect for an audience of {suit}s!" compare {zero-content},
{bandwidth}, {math-out}.
:lpt: /l-p-t/ or /lip'it/ or /lip-it'/ [mit, via dec] n. line
printer, of course. rare under unix, commoner in hackers with
ms-dos or cp/m background. the printer device is called
`lpt:' on those systems that, like its, were strongly
influenced by early dec conventions.
:lunatic fringe: [ibm] n. customers who can be relied upon to accept
 release  versions of software.
:lurker: n. one of the `silent majority' in a electronic forum;
 one who posts occasionally or not at all but is known to read the
 group's postings regularly. this term is not pejorative and indeed
 is casually used reflexively: "oh, i'm just lurking." often used
 in `the lurkers', the hypothetical audience for the group's
 {flamage}-emitting regulars.
:luser: /loo'zr/ n. a {user}; esp. one who is also a
 {loser}. ({luser} and {loser} are pronounced
 identically.) this word was coined around  at mit. under
 its, when you first walked up to a terminal at mit and typed
 control-z to get the computer's attention, it printed out some
 status information, including how many people were already using
 the computer; it might print " users", for example. someone
 thought it would be a great joke to patch the system to print
 " losers" instead. there ensued a great controversy, as some
 of the users didn't particularly want to be called losers to their
 faces every time they used the computer. for a while several
 hackers struggled covertly, each changing the message behind the
 back of the others; any time you logged into the computer it was
 even money whether it would say "users" or "losers". finally,
 someone tried the compromise "lusers", and it stuck. later one
 of the its machines supported `luser' as a request-for-help
 command. its died the death in mid-, except as a museum piece;
 the usage lives on, however, and the term `luser' is often seen
 in program comments.
:m: [si] pref. (on units) suff. (on numbers) see {{quantifiers}}.
:macdink: /mak'dink/ [from the apple macintosh, which is said to
 encourage such behavior] vt. to make many incremental and
 unnecessary cosmetic changes to a program or file. often the
 subject of the macdinking would be better off without them.
 "when i left at  p.m. last night, he was still macdinking the
 slides for his presentation." see also {fritterware}.
:machinable: adj. machine-readable. having the {softcopy} nature.
:machoflops: /mach'oh-flops/ [pun on `megaflops', a coinage for
 `millions of floating-point operations per second'] n. refers to
 artificially inflated performance figures often quoted by computer
 manufacturers. real applications are lucky to get half the quoted
 speed. see {your mileage may vary}, {benchmark}.
:macintoy: /mak'in-toy/ n. the apple macintosh, considered as a
 {toy}. less pejorative than {macintrash}.
:macintrash: /mak'in-trash`/ n. the apple macintosh, as described
by a hacker who doesn't appreciate being kept away from the
*real computer* by the interface. the term {maggotbox} has
been reported in regular use in the research triangle area of north
carolina. compare {macintoy}. see also {beige toaster},
{wimp environment}, {point-and-drool interface},
{drool-proof paper}, {user-friendly}.
:macro: /mak'roh/ [techspeak] n. a name (possibly followed by a
formal {arg} list) that is equated to a text or symbolic
expression to which it is to be expanded (possibly with the
substitution of actual arguments) by a macro expander. this
definition can be found in any technical dictionary; what those
won't tell you is how the hackish connotations of the term have
changed over time.
 the term `macro' originated in early assemblers, which encouraged
 the use of macros as a structuring and information-hiding device.
 during the early s, macro assemblers became ubiquitous, and
 sometimes quite as powerful and expensive as {hll}s, only to fall
 from favor as improving compiler technology marginalized assembler
 programming (see {languages of choice}). nowadays the term is
 most often used in connection with the c preprocessor, lisp, or one
 of several special-purpose languages built around a macro-expansion
 facility (such as tex or unix's [nt]roff suite).
 indeed, the meaning has drifted enough that the collective
 `macros' is now sometimes used for code in any special-purpose
 application control language (whether or not the language is
 actually translated by text expansion), and for macro-like entities
 such as the `keyboard macros' supported in some text editors
 (and pc tsr or macintosh init/cdev keyboard enhancers).
:macro-: pref. large. opposite of {micro-}. in the mainstream
 and among other technical cultures (for example, medical people)
 this competes with the prefix {mega-}, but hackers tend to
 restrict the latter to quantification.
:macrology: /mak-rol'*-jee/ n. . set of usually complex or crufty
 macros, e.g., as part of a large system written in {lisp},
 {teco}, or (less commonly) assembler. . the art and science
 involved in comprehending a macrology in sense . sometimes
 studying the macrology of a system is not unlike archeology,
 ecology, or {theology}, hence the sound-alike construction. see
 also {boxology}.
:macrotape: /ma'kroh-tayp/ n. an industry-standard reel of tape, as
opposed to a {microtape}.
:maggotbox: /mag'*t-boks/ n. see {macintrash}. this is even
more derogatory.
:magic: adj. . as yet unexplained, or too complicated to explain;
 compare {automagically} and (arthur c.) clarke's third law:
 "any sufficiently advanced technology is indistinguishable from
 magic." "tty echoing is controlled by a large number of magic
 bits." "this routine magically computes the parity of an -bit
 byte in three instructions." . characteristic of something that
 works although no one really understands why (this is especially
 called {black magic}). . [stanford] a feature not generally
 publicized that allows something otherwise impossible, or a feature
 formerly in that category but now unveiled. compare {black
 magic}, {wizardly}, {deep magic}, {heavy wizardry}.
 for more about hackish `magic', see {a story about `magic'}
 (in {appendix a}).
:magic cookie: [unix] n. . something passed between routines or
 programs that enables the receiver to perform some operation; a
 capability ticket or opaque identifier. especially used of small
 data objects that contain data encoded in a strange or
 intrinsically machine-dependent way. e.g., on non-unix oses with a
 non-byte-stream model of files, the result of `ftell()' may
 be a magic cookie rather than a byte offset; it can be passed to
 `fseek()', but not operated on in any meaningful way. the
 phrase `it hands you a magic cookie' means it returns a result
 whose contents are not defined but which can be passed back to the
 same or some other program later. . an in-band code for
 changing graphic rendition (e.g., inverse video or underlining) or
 performing other control functions. some older terminals would
 leave a blank on the screen corresponding to mode-change magic
 cookies; this was also called a {glitch}. see also {cookie}.
:magic number: [unix/c] n. . in source code, some non-obvious
 constant whose value is significant to the operation of a program
 and that is inserted inconspicuously in-line ({hardcoded}),
 rather than expanded in by a symbol set by a commented
 `#define'. magic numbers in this sense are bad style. . a
 number that encodes critical information used in an algorithm in
 some opaque way. the classic examples of these are the numbers
 used in hash or crc functions, or the coefficients in a linear
 congruential generator for pseudo-random numbers. this sense
 actually predates and was ancestral to the more common sense .
 . special data located at the beginning of a binary data file to
 indicate its type to a utility. under unix, the system and various
 applications programs (especially the linker) distinguish between
 types of executable file by looking for a magic number. once upon
 a time, these magic numbers were pdp- branch instructions that
 skipped over header data to the start of executable code; the ,
 for example, was octal for `branch  bytes relative'. nowadays
 only a {wizard} knows the spells to create magic numbers. how do
 you choose a fresh magic number of your own? simple —- you pick
 one at random. see? it's magic!
:magic smoke: n. a substance trapped inside ic packages that enables
 them to function (also called `blue smoke'; this is similar to
 the archaic `phlogiston' hypothesis about combustion). its
 existence is demonstrated by what happens when a chip burns up —-
 the magic smoke gets let out, so it doesn't work any more. see
 {smoke test}, {let the smoke out}.
 usenetter jay maynard tells the following story: "once, while
 hacking on a dedicated z system, i was testing code by blowing
 eproms and plugging them in the system, then seeing what happened.
 one time, i plugged one in backwards. i only discovered that
 *after* i realized that intel didn't put power-on lights under
 the quartz windows on the tops of their eproms —- the die was
 glowing white-hot. amazingly, the eprom worked fine after i erased
 it, filled it full of zeros, then erased it again. for all i know,
 it's still in service. of course, this is because the magic smoke
 didn't get let out." compare the original phrasing of {murphy's
 law}.
:mailing list: n. (often shortened in context to `list') . an
 {email} address that is an alias (or {macro}, though that word
 is never used in this connection) for many other email addresses.
 some mailing lists are simple `reflectors', redirecting mail sent
 to them to the list of recipients. others are filtered by humans
 or programs of varying degrees of sophistication; lists filtered by
 humans are said to be `moderated'. . the people who receive
 your email when you send it to such an address.
 mailing lists are one of the primary forms of hacker interaction,
 along with {usenet}. they predate usenet, having originated
 with the first uucp and arpanet connections. they are often used
 for private information-sharing on topics that would be too
 specialized for or inappropriate to public usenet groups. though
 some of these maintain purely technical content (such as the
 internet engineering task force mailing list), others (like the
 `sf-lovers' list maintained for many years by saul jaffe) are
 recreational, and others are purely social. perhaps the most
 infamous of the social lists was the eccentric bandykin
 distribution; its latter-day progeny, lectroids and
 tanstaafl, still include a number of the oddest and most
 interesting people in hackerdom.
 mailing lists are easy to create and (unlike usenet) don't tie up a
 significant amount of machine resources (until they get very large,
 at which point they can become interesting torture tests for mail
 software). thus, they are often created temporarily by working
 groups, the members of which can then collaborate on a project
 without ever needing to meet face-to-face. much of the material in
 this lexicon was criticized and polished on just such a mailing
 list (called `jargon-friends'), which included all the co-authors
 of steele-.
:main loop: n. software tools are often written to perform some
 actions repeatedly on whatever input is handed to them, terminating
 when there is no more input or they are explicitly told to go away.
 in such programs, the loop that gets and processes input is called
 the `main loop'. see also {driver}.
:mainframe: n. term originally referring to the cabinet
 containing the central processor unit or `main frame' of a
 room-filling {stone age} batch machine. after the emergence of
 smaller `minicomputer' designs in the early s, the
 traditional {big iron} machines were described as `mainframe
 computers' and eventually just as mainframes. the term carries the
 connotation of a machine designed for batch rather than interactive
 use, though possibly with an interactive timesharing operating
 system retrofitted onto it; it is especially used of machines built
 by ibm, unisys, and the other great {dinosaur}s surviving from
 computing's {stone age}.
 it is common wisdom among hackers that the mainframe architectural
 tradition is essentially dead (outside of the tiny market for
 {number-crunching} supercomputers (see {cray})), having been
 swamped by the recent huge advances in ic technology and low-cost
 personal computing. as of , corporate america hasn't quite
 figured this out yet, though the wave of failures, takeovers, and
 mergers among traditional mainframe makers are certainly straws in
 the wind (see {dinosaurs mating}).
:management: n. . corporate power elites distinguished primarily by
 their distance from actual productive work and their chronic
 failure to manage (see also {suit}). spoken derisively, as in
 "*management* decided that …". . mythically, a vast
 bureaucracy responsible for all the world's minor irritations.
 hackers' satirical public notices are often signed `the mgt'; this
 derives from the `illuminatus' novels (see the bibliography in
 {appendix c}).
:mandelbug: /mon'del-buhg/ [from the mandelbrot set] n. a bug
whose underlying causes are so complex and obscure as to make its
behavior appear chaotic or even non-deterministic. this term
implies that the speaker thinks it is a {bohr bug}, rather than a
{heisenbug}. see also {schroedinbug}.
:manged: /monjd/ [probably from the french `manger' or italian
`mangiare', to eat; perhaps influenced by english n. `mange',
`mangy'] adj. refers to anything that is mangled or damaged,
usually beyond repair. "the disk was manged after the electrical
storm." compare {mung}.
:mangle: vt. used similarly to {mung} or {scribble}, but more violent
in its connotations; something that is mangled has been
irreversibly and totally trashed.
:mangler: [dec] n. a manager. compare {mango}; see also
{management}. note that {system mangler} is somewhat different
in connotation.
:mango: /mang'go/ [orig. in-house jargon at symbolics] n. a manager.
compare {mangler}. see also {devo} and {doco}.
:manularity: [prob. fr. techspeak `granularity' + `manual']
 n. a notional measure of the manual labor required for some task,
 particularly one of the sort that automation is supposed to
 eliminate. "composing english on paper has much higher manularity
 than using a text editor, especially in the revising stage."
 hackers tend to consider manularity a symptom of primitive methods;
 in fact, a true hacker confronted with an apparent requirement to
 do a computing task {by hand} will usually consider it
 motivation enough to build another tool.
:marbles: [from mainstream "lost all his/her marbles"] pl.n. the
 minimum needed to build your way further up some hierarchy of tools
 or abstractions. after a bad system crash, you need to determine
 if the machine has enough marbles to come up on its own, or enough
 marbles to allow a rebuild from backups, or if you need to rebuild
 from scratch. "this compiler doesn't even have enough marbles to
 compile {hello, world}."
:marginal: adj. . extremely small. "a marginal increase in
 {core} can decrease {gc} time drastically." in everyday
 terms, this means that it is a lot easier to clean off your desk if
 you have a spare place to put some of the junk while you sort
 through it. . of extremely small merit. "this proposed new
 feature seems rather marginal to me." . of extremely small
 probability of {win}ning. "the power supply was rather marginal
 anyway; no wonder it fried."
:marginal hacks: n. margaret jacks hall, a building into which the
stanford ai lab was moved near the beginning of the s (from the
{d. c. power lab}).
:marginally: adv. slightly. "the ravs here are only marginally
 better than at small eating place." see {epsilon}.
:marketroid: /mar'k*-troyd/ alt. `marketing slime',
 `marketing droid', `marketeer' n. a member of a company's
 marketing department, esp. one who promises users that the next
 version of a product will have features that are not actually
 scheduled for inclusion, are extremely difficult to implement,
 and/or are in violation of the laws of physics; and/or one who
 describes existing features (and misfeatures) in ebullient,
 buzzword-laden adspeak. derogatory. compare {droid}.
:mars: n. a legendary tragic failure, the archetypal hacker dream
 gone wrong. mars was the code name for a family of pdp-
 compatible computers built by systems concepts (now, the sc group);
 the multi-processor sc-m, the small uniprocessor sc-m, and the
 never-built superprocessor sc-m. these machines were marvels of
 engineering design; although not much slower than the unique
 {foonly} f-, they were physically smaller and consumed less
 power than the much slower dec ks or foonly f-, f-, or f-
 machines. they were also completely compatible with the dec kl,
 and ran all kl binaries, including the operating system, with no
 modifications at about — times faster than a kl.
 when dec cancelled the jupiter project in , systems concepts
 should have made a bundle selling their machine into shops with a
 lot of software investment in pdp-s, and in fact their spring
  announcement generated a great deal of excitement in the
 pdp- world. tops- was running on the mars by the summer of
 , and tops- by early fall. unfortunately, the hackers
 running systems concepts were much better at designing machines
 than at mass producing or selling them; the company allowed itself
 to be sidetracked by a bout of perfectionism into continually
 improving the design, and lost credibility as delivery dates
 continued to slip. they also overpriced the product ridiculously;
 they believed they were competing with the kl and vax  and
 failed to reckon with the likes of sun microsystems and other
 hungry startups building workstations with power comparable to the
 kl at a fraction of the price. by the time sc shipped the first
 sc-m to stanford in late , most customers had already made
 the traumatic decision to abandon the pdp-, usually for vms or
 unix boxes. most of the mars computers built ended up being
 purchased by compuserve.
 this tale and the related saga of {foonly} hold a lesson for hackers:
 if you want to play in the {real world}, you need to learn real world
 moves.
:martian: n. a packet sent on a tcp/ip network with a source
address of the test loopback interface [...]. this means
that it will come back at you labeled with a source address that
is clearly not of this earth. "the domain server is getting lots
of packets from mars. does that gateway have a martian filter?"
:massage: vt. vague term used to describe `smooth' transformations of
a data set into a different form, esp. transformations that do
not lose information. connotes less pain than {munch} or {crunch}.
"he wrote a program that massages x bitmap files into gif
format." compare {slurp}.
:math-out: [poss. from `white-out' (the blizzard variety)] n. a
paper or presentation so encrusted with mathematical or other
formal notation as to be incomprehensible. this may be a device
for concealing the fact that it is actually {content-free}. see
also {numbers}, {social science number}.
:matrix: [fidonet] n. . what the opus bbs software and sysops call
 {fidonet}. . fanciful term for a {cyberspace} expected to
 emerge from current networking experiments (see {network, the}).
 . the totality of present-day computer networks.
:maximum maytag mode: what a {washing machine} or, by extension,
 any hard disk is in when it's being used so heavily that it's
 shaking like an old maytag with an unbalanced load. if prolonged
 for any length of time, can lead to disks becoming {walking
 drives}.
:mbogo, dr. fred: /*m-boh'goh, dok'tr fred/ [stanford] n. the
 archetypal man you don't want to see about a problem, esp. an
 incompetent professional; a shyster. "do you know a good eye
 doctor?" "sure, try mbogo eye care and professional dry
 cleaning." the name comes from synergy between {bogus} and the
 original dr. mbogo, a witch doctor who was gomez addams' physician
 on the old "addams family" tv show. see also
 {fred}.
:meatware: n. synonym for {wetware}. less common.
:meeces: /mees'*z/ [tmrc] n. occasional furry visitors who are
 not {urchin}s. [that is, mice. this may no longer be in live
 use; it clearly derives from the refrain of the early-s cartoon
 character mr. jinx: "i hate meeces to *pieces*!" —- esr]
:meg: /meg/ n. see {{quantifiers}}.
:mega-: /me'g*/ [si] pref. see {{quantifiers}}.
:megapenny: /meg'*-pen`ee/ n. $, ( cent * ^).
 used semi-humorously as a unit in comparing computer cost and
 performance figures.
:mego: /me'goh/ or /mee'goh/ [`my eyes glaze over', often `mine eyes
 glazeth (sic) over', attributed to the futurologist herman kahn]
 also `mego factor'. . n. a {handwave} intended to confuse the
 listener and hopefully induce agreement because the listener does
 not want to admit to not understanding what is going on. mego is
 usually directed at senior management by engineers and contains a
 high proportion of {tla}s. . excl. an appropriate response to
 mego tactics. . among non-hackers this term often refers not to
 behavior that causes the eyes to glaze, but to the eye-glazing
 reaction itself, which may be triggered by the mere threat of
 technical detail as effectively as by an actual excess of it.
:meltdown, network: n. see {network meltdown}.
:meme: /meem/ [coined on analogy with `gene' by richard
 dawkins] n. an idea considered as a {replicator}, esp. with
 the connotation that memes parasitize people into propagating them
 much as viruses do. used esp. in the phrase `meme complex'
 denoting a group of mutually supporting memes that form an
 organized belief system, such as a religion. this lexicon is an
 (epidemiological) vector of the `hacker subculture' meme complex;
 each entry might be considered a meme. however, `meme' is often
 misused to mean `meme complex'. use of the term connotes
 acceptance of the idea that in humans (and presumably other tool-
 and language-using sophonts) cultural evolution by selection of
 adaptive ideas has superseded biological evolution by selection of
 hereditary traits. hackers find this idea congenial for tolerably
 obvious reasons.
:meme plague: n. the spread of a successful but pernicious
 {meme}, esp. one that parasitizes the victims into giving
 their all to propagate it. astrology, basic, and the other guy's
 religion are often considered to be examples. this usage is given
 point by the historical fact that `joiner' ideologies like
 naziism or various forms of millennarian christianity have
 exhibited plague-like cycles of exponential growth followed by
 collapses to small reservoir populations.
:memetics: /me-met'iks/ [from {meme}] the study of memes. as of
 mid-, this is still an extremely informal and speculative
 endeavor, though the first steps towards at least statistical rigor
 have been made by h. keith henson and others. memetics is a
 popular topic for speculation among hackers, who like to see
 themselves as the architects of the new information ecologies in
 which memes live and replicate.
:memory leak: n. an error in a program's dynamic-store allocation
 logic that causes it to fail to reclaim discarded memory, leading
 to eventual collapse due to memory exhaustion. also (esp. at
 cmu) called {core leak}. these problems were severe on older
 machines with small, fixed-size address spaces, and special "leak
 detection" tools were commonly written to root them out. with the
 advent of virtual memory, it is unfortunately easier to be sloppy
 about wasting a bit of memory (although when you run out of memory
 on a vm machine, it means you've got a *real* leak!). see
 {aliasing bug}, {fandango on core}, {smash the stack},
 {precedence lossage}, {overrun screw}, {leaky heap},
 {leak}.
:memory smash: [xerox parc] n. writing through a pointer that
 doesn't point to what you think it does. this occasionally reduces
 your machine to a rubble of bits. note that this is subtly
 different from (and more general than) related terms such as a
 {memory leak} or {fandango on core} because it doesn't imply
 an allocation error or overrun condition.
:menuitis: /men`yoo-i:'tis/ n. notional disease suffered by software
 with an obsessively simple-minded menu interface and no escape.
 hackers find this intensely irritating and much prefer the
 flexibility of command-line or language-style interfaces,
 especially those customizable via macros or a special-purpose
 language in which one can encode useful hacks. see
 {user-obsequious}, {drool-proof paper}, {wimp environment},
 {for the rest of us}.
:mess-dos: /mes-dos/ n. derisory term for ms-dos. often followed
 by the ritual banishing "just say no!" see {{ms-dos}}. most
 hackers (even many ms-dos hackers) loathe ms-dos for its
 single-tasking nature, its limits on application size, its nasty
 primitive interface, and its ties to ibmness (see {fear and
 loathing}). also `mess-loss', `messy-dos', `mess-dog',
 `mess-dross', `mush-dos', and various combinations thereof. in
 ireland and the u.k. it is even sometimes called `domestos' after a
 brand of toilet cleanser.
:meta: /me't*/ or /may't*/ or (commonwealth) /mee't*/ [from
 analytic philosophy] adj.,pref. one level of description up. a
 metasyntactic variable is a variable in notation used to describe
 syntax, and meta-language is language used to describe language.
 this is difficult to explain briefly, but much hacker humor turns
 on deliberate confusion between meta-levels. see {{humor,
 hacker}}.
:meta bit: n. the top bit of an -bit character, which is on in
 character values —. also called {high bit}, {alt bit},
 or {hobbit}. some terminals and consoles (see {space-cadet
 keyboard}) have a meta shift key. others (including,
 *mirabile dictu*, keyboards on ibm pc-class machines) have an
 alt key. see also {bucky bits}.
 historical note: although in modern usage shaped by a universe of
 -bit bytes the meta bit is invariably hex  (octal ), things
 were different on earlier machines with -bit words and -bit
 bytes. the mit and stanford keyboards (see {space-cadet
 keyboard}) generated hex  (octal ) from their meta keys.
:metasyntactic variable: n. a name used in examples and understood
 to stand for whatever thing is under discussion, or any random
 member of a class of things under discussion. the word {foo} is
 the {canonical} example. to avoid confusion, hackers never
 (well, hardly ever) use `foo' or other words like it as permanent
 names for anything. in filenames, a common convention is that any
 filename beginning with a metasyntactic-variable name is a
 {scratch} file that may be deleted at any time.
 to some extent, the list of one's preferred metasyntactic variables
 is a cultural signature. they occur both in series (used for
 related groups of variables or objects) and as singletons. here
 are a few common signatures:
{foo}, {bar}, {baz}, {quux}, quuux, quuuux…:
mit/stanford usage, now found everywhere (thanks largely to early
versions of this lexicon!). at mit, {baz} dropped out of use for
a while in the s and 's. a common recent mutation of this
sequence inserts {qux} before {quux}.
{foo}, {bar}, thud, grunt:
this series was popular at cmu. other cmu-associated variables
include {gorp}.
{foo}, {bar}, fum:
this series is reported common at xerox parc.
{fred}, {barney}:
see the entry for {fred}. these tend to be britishisms.
{toto}, titi, tata, tutu:
standard series of metasyntactic variables among francophones.
{corge}, {grault}, {flarp}:
popular at rutgers university and among {gosmacs} hackers.
zxc, spqr, {wombat}:
cambridge university (england).
 of all these, only `foo' and `bar' are universal (and {baz}
 nearly so). the compounds {foobar} and `foobaz' also enjoy
 very wide currency.
 some jargon terms are also used as metasyntactic names; {barf}
 and {mumble}, for example. see also {{commonwealth hackish}}
 for discussion of numerous metasyntactic variables found in great
 britain and the commonwealth.
:mftl: /m-f-t-l/ [abbreviation: `my favorite toy language'] . adj.
 describes a talk on a programming language design that is heavy on
 the syntax (with lots of bnf), sometimes even talks about semantics
 (e.g., type systems), but rarely, if ever, has any content (see
 {content-free}). more broadly applied to talks —- even when
 the topic is not a programming language —- in which the subject
 matter is gone into in unnecessary and meticulous detail at the
 sacrifice of any conceptual content. "well, it was a typical mftl
 talk". . n. describes a language about which the developers are
 passionate (often to the point of prosyletic zeal) but no one else
 cares about. applied to the language by those outside the
 originating group. "he cornered me about type resolution in his
 the first great goal in the mind of the designer of an mftl is
 usually to write a compiler for it, then bootstrap the design away
 from contamination by lesser languages by writing a compiler for it
 in itself. thus, the standard put-down question at an mftl talk is
 "has it been used for anything besides its own compiler?". on
 the other hand, a language that *cannot* be used to write
 its own compiler is beneath contempt. see {break-even point}.
 (on a related note, dennis ritchie has proposed a test of the
 generality and utility of a language and the operating system under
 which it is compiled: "is the output of a program compiled under
 the language acceptable as input to the compiler?" in other
 words, can you write programs which write programs? (see
 {toolsmith}) alarming numbers of (language, os) pairs fail this
 test, particularly when the language is fortran; ritchie is quick
 to point out that {unix} (even using fortran) passes it handily.
 that the test could ever be failed is only surprising to those who
 have had the good fortune only to have worked under modern systems
 which lack os-supported and -imposed "file types".)
:mickey: n. the resolution unit of mouse movement. it has been
 suggested that the `disney' will become a benchmark unit for
 animation graphics performance.
:mickey mouse program: n. north american equivalent of a {noddy}
 (that is, trivial) program. doesn't necessarily have the
 belittling connotations of mainstream slang "oh, that's just
 mickey mouse stuff!"; sometimes trivial programs can be very
 useful.
:micro-: pref. . very small; this is the root of its use as a
 quantifier prefix. . a quantifier prefix, calling for
 multiplication by ^(-) (see {{quantifiers}}). neither
 of these uses is peculiar to hackers, but hackers tend to fling
 them both around rather more freely than is countenanced in
 standard english. it is recorded, for example, that one
 cs professor used to characterize the standard length of his
 lectures as a microcentury —- that is, about . minutes (see
 also {attoparsec}, {nanoacre}, and especially
 {microfortnight}). . personal or human-scale —- that is,
 capable of being maintained or comprehended or manipulated by one
 human being. this sense is generalized from `microcomputer',
 and is esp. used in contrast with `macro-' (the corresponding
 greek prefix meaning `large'). . local as opposed to global (or
 {macro-}). thus a hacker might say that buying a smaller car to
 reduce pollution only solves a microproblem; the macroproblem of
 getting to work might be better solved by using mass transit,
 moving to within walking distance, or (best of all) telecommuting.
:microfloppies: n. .-inch floppies, as opposed to .-inch
 {vanilla} or mini-floppies and the now-obsolete -inch variety.
 this term may be headed for obsolescence as .-inchers pass out
 of use, only to be revived if anybody floats a sub--inch floppy
 standard. see {stiffy}, {minifloppies}.
:microfortnight: n. / of the fundamental unit of time in
 the furlong/firkin/fortnight system of measurement; . sec.
 the vms operating system has a lot of tuning parameters that you
 can set with the sysgen utility, and one of these is
 timepromptwait, the time the system will wait for an operator to
 set the correct date and time at boot if it realizes that the
 current value is bogus. this time is specified in microfortnights!
 multiple uses of the millifortnight (about  minutes) and
 {nanofortnight} have also been reported.
:microlenat: /mi:-kroh-len'-*t/ n. see {bogosity}.
:microreid: /mi:'kroh-reed/ n. see {bogosity}.
:microsloth windows: /mi:'kroh-sloth` win'dohz/ n. hackerism for
 `microsoft windows', a windowing system for the ibm-pc which is so
 limited by bug-for-bug compatibility with {mess-dos} that it is
 agonizingly slow on anything less than a fast . compare {x},
 {sun-stools}.
:microtape: /mi:'kroh-tayp/ n. occasionally used to mean a
 dectape, as opposed to a {macrotape}. a dectape is a small
 reel, about  inches in diameter, of magnetic tape about an inch
 wide. unlike drivers for today's {macrotape}s, microtape
 drivers allow random access to the data, and therefore could be
 used to support file systems and even for swapping (this was
 generally done purely for {hack value}, as they were far too
 slow for practical use). in their heyday they were used in pretty
 much the same ways one would now use a floppy disk: as a small,
 portable way to save and transport files and programs. apparently
 the term `microtape' was actually the official term used within
 dec for these tapes until someone coined the word `dectape',
 which, of course, sounded sexier to the {marketroid}s; another
 version of the story holds that someone discovered a conflict with
 another company's `microtape' trademark.
:middle-endian: adj. not {big-endian} or {little-endian}.
 used of perverse byte orders such as --- or ---,
 occasionally found in the packed-decimal formats of minicomputer
 manufacturers who shall remain nameless. see {nuxi problem}.
:millilampson: /mil'*-lamp`sn/ n. a unit of talking speed,
 abbreviated ml. most people run about  millilampsons. butler
 lampson (a cs theorist and systems implementor highly regarded
 among hackers) goes at . a few people speak faster. this unit
 is sometimes used to compare the (sometimes widely disparate) rates
 at which people can generate ideas and actually emit them in
 speech. for example, noted computer architect c. gordon bell
 (designer of the pdp-) is said, with some awe, to think at about
  ml but only talk at about ; he is frequently reduced to
 fragments of sentences as his mouth tries to keep up with his
 speeding brain.
:minifloppies: n. .-inch {vanilla} floppy disks, as opposed to
 .-inch or {microfloppies} and the now-obsolescent -inch
 variety. at one time, this term was a trademark of shugart
 associates for their sa- minifloppy drive. nobody paid any
 attention. see {stiffy}.
:mips: /mips/ [abbreviation] n. . a measure of computing speed;
 formally, `million instructions per second' (that's ^
 per second, not ^()!); often rendered by hackers as
 `meaningless indication of processor speed' or in other
 unflattering ways. this joke expresses a nearly universal attitude
 about the value of most {benchmark} claims, said attitude being
 one of the great cultural divides between hackers and
 {marketroid}s. the singular is sometimes ` mip' even though
 this is clearly etymologically wrong. see also {kips} and
 {gips}. . computers, especially large computers, considered
 abstractly as sources of {computron}s. "this is just a
 workstation; the heavy mips are hidden in the basement." . the
 corporate name of a particular risc-chip company; among other
 things, they designed the processor chips used in dec's 
 workstation series. . acronym for `meaningless information per
 second' (a joke, prob. from sense ).
:misbug: /mis-buhg/ [mit] n. an unintended property of a program
 that turns out to be useful; something that should have been a
 {bug} but turns out to be a {feature}. usage: rare. compare
 {green lightning}. see {miswart}.
:misfeature: /mis-fee'chr/ or /mis'fee`chr/ n. a feature that
 eventually causes lossage, possibly because it is not adequate for
 a new situation which has evolved. since it results from a
 deliberate and properly-implemented feature, a misfeature is not a
 bug. nor is it a simple unforeseen side effect; the term implies
 that the feature in question was carefully planned, but its
 long-term consequences were not accurately or adequately predicted
 (which is quite different from not having thought ahead at all). a
 misfeature can be a particularly stubborn problem to resolve,
 because fixing it usually involves a substantial philosophical
 change to the structure of the system involved.
 many misfeatures (especially in user-interface design) arise
 because the designers/implementors mistake their personal tastes
 for laws of nature. often a former feature becomes a misfeature
 because a tradeoff was made whose parameters subsequently change
 (possibly only in the judgment of the implementors). "well, yeah,
 it is kind of a misfeature that file names are limited to 
 characters, but the original implementors wanted to save directory
 space and we're stuck with it for now."
:missed'em-five: n. pejorative hackerism for at&t system v unix,
 generally used by {bsd} partisans in a bigoted mood. (the
 synonym `sysvile' is also encountered.) see {software bloat},
 {berzerkeley}.
:missile address: n. see {icbm address}.
:miswart: /mis-wort/ [from {wart} by analogy with {misbug}] n.
 a {feature} that superficially appears to be a {wart} but has been
 determined to be the {right thing}. for example, in some versions
 of the {emacs} text editor, the `transpose characters' command
 exchanges the character under the cursor with the one before it on the
 screen, *except* when the cursor is at the end of a line, in
 which case the two characters before the cursor are exchanged.
 while this behavior is perhaps surprising, and certainly
 inconsistent, it has been found through extensive experimentation
 to be what most users want. this feature is a miswart.
:moby: /moh'bee/ [mit: seems to have been in use among model
 railroad fans years ago. derived from melville's `moby dick'
 (some say from `moby pickle').] . adj. large, immense, complex,
 impressive. "a saturn v rocket is a truly moby frob." "some
 mit undergrads pulled off a moby hack at the harvard-yale game."
 (see "{the meaning of `hack'}"). . n. obs. the
 maximum address space of a machine (see below). for a [] or
 vax or most modern -bit architectures, it is ,,, -bit
 bytes ( gigabytes). . a title of address (never of third-person
 reference), usually used to show admiration, respect, and/or
 friendliness to a competent hacker. "greetings, moby dave. how's
 that address-book thing for the mac going?" . adj. in
 backgammon, doubles on the dice, as in `moby sixes', `moby
 ones', etc. compare this with {bignum} (sense ): double sixes
 are both bignums and moby sixes, but moby ones are not bignums (the
 use of `moby' to describe double ones is sarcastic). standard
 emphatic forms: `moby foo', `moby win', `moby loss'. `foby
 moo': a spoonerism due to richard greenblatt.
 this term entered hackerdom with the fabritek k memory added to
 the mit ai pdp- machine, which was considered unimaginably huge
 when it was installed in the s (at a time when a more typical
 memory size for a timesharing system was  kilobytes). thus, a
 moby is classically k -bit words, the size of a pdp- or
 pdp- moby. back when address registers were narrow the term was
 more generally useful, because when a computer had virtual memory
 mapping, it might actually have more physical memory attached to it
 than any one program could access directly. one could then say
 "this computer has  mobies" meaning that the ratio of physical
 memory to address space is , without having to say specifically
 how much memory there actually is. that in turn implied that the
 computer could timeshare six `full-sized' programs without having
 to swap programs between memory and disk.
 nowadays the low cost of processor logic means that address spaces
 are usually larger than the most physical memory you can cram onto
 a machine, so most systems have much *less* than one theoretical
 `native' moby of {core}. also, more modern memory-management
 techniques (esp. paging) make the `moby count' less significant.
 however, there is one series of popular chips for which the term
 could stand to be revived —- the intel  and  with their
 incredibly {brain-damaged} segmented-memory designs. on these, a
 `moby' would be the -megabyte address span of a segment/offset
 pair (by coincidence, a pdp- moby was exactly  megabyte of -bit
 bytes).
:mod: vt.,n. . short for `modify' or `modification'. very
 commonly used —- in fact the full terms are considered markers
 that one is being formal. the plural `mods' is used esp. with
 reference to bug fixes or minor design changes in hardware or
 software, most esp. with respect to {patch} sets or a {diff}.
 . short for {modulo} but used *only* for its techspeak sense.
:mode: n. a general state, usually used with an adjective
 describing the state. use of the word `mode' rather than
 `state' implies that the state is extended over time, and
 probably also that some activity characteristic of that state is
 being carried out. "no time to hack; i'm in thesis mode." in its
 jargon sense, `mode' is most often attributed to people, though
 it is sometimes applied to programs and inanimate objects. in
 particular, see {hack mode}, {day mode}, {night mode},
 {demo mode}, {fireworks mode}, and {yoyo mode}; also
 {talk mode}.
 one also often hears the verbs `enable' and `disable' used in
 connection with jargon modes. thus, for example, a sillier way of
 saying "i'm going to crash" is "i'm going to enable crash mode
 now". one might also hear a request to "disable flame mode,
 please".
 in a usage much closer to techspeak, a mode is a special state
 which certain user interfaces must pass into in order to perform
 certain functions. for example, in order to insert characters into a
 document in the unix editor `vi', one must type the "i" key,
 which invokes the "insert" command. the effect of this command
 is to put vi into "insert mode", in which typing the "i" key
 has a quite different effect (to wit, it inserts an "i" into the
 document). one must then hit another special key, "esc", in
 order to leave "insert mode". nowadays, moded interfaces are
 generally considered {losing}, but survive in quite a few
 widely-used tools built in less enlightened times.
:mode bit: n. a {flag}, usually in hardware, that selects between
 two (usually quite different) modes of operation. the connotations
 are different from {flag} bit in that mode bits are mainly
 written during a boot or set-up phase, are seldom explicitly read,
 and seldom change over the lifetime of an ordinary program. the
 classic example was the ebcdic-vs.-ascii bit (#) of the program
 status word of the ibm . another was the bit on a pdp- that
 controlled whether it ran the pdp- or the linc instruction set.
:modulo: /mo'dyu-loh/ prep. except for. an overgeneralization of
 mathematical terminology; one can consider saying that
  =  except for the s ( =  mod ). "well,
 lisp seems to work okay now, modulo that {gc} bug." "i feel
 fine today modulo a slight headache."
:molly-guard: /mol'ee-gard/ [university of illinois] n. a shield
 to prevent tripping of some {big red switch} by clumsy or
 ignorant hands. originally used of some plexiglass covers
 improvised for the brs on an ibm  after a programmer's toddler
 daughter (named molly) frobbed it twice in one day. later
 generalized to covers over stop/reset switches on disk drives and
 networking equipment.
:mongolian hordes technique: n. development by {gang bang}
 (poss. from the sixties counterculture expression `mongolian
 clusterfuck' for a public orgy). implies that large numbers of
 inexperienced programmers are being put on a job better performed
 by a few skilled ones. also called `chinese army technique';
 see also {brooks's law}.
:monkey up: vt. to hack together hardware for a particular task,
 especially a one-shot job. connotes an extremely {crufty} and
 consciously temporary solution. compare {hack up}, {kluge up},
 {cruft together}, {cruft together}.
:monkey, scratch: n. see {scratch monkey}.
:monstrosity: . n. a ridiculously {elephantine} program or
 system, esp. one that is buggy or only marginally functional.
 . the quality of being monstrous (see `overgeneralization' in the
 discussion of jargonification). see also {baroque}.
:moof: /moof/ [mac users] n. the moof or `dogcow' is a
 semi-legendary creature that lurks in the depths of the macintosh
 technical notes hypercard stack v.; specifically, the full story
 of the dogcow is told in technical note # (the particular moof
 illustrated is properly named `clarus'). option-shift-click will
 cause it to emit a characteristic `moof!' or `!foom' sound.
 *getting* to tech note  is the hard part; to discover how
 to do that, one must needs examine the stack script with a hackerly
 eye. clue: {rot} is involved. a dogcow also appears if you
 choose `page setup…' with a laserwriter selected and click on
 the `options' button.
:moore's law: /morz law/ prov. the observation that the logic
 density of silicon integrated circuits has closely followed the
 curve (bits per square inch) = ^((n - )); that is, the
 amount of information storable in one square inch of silicon has
 roughly doubled yearly every year since the technology was
 invented. see also {parkinson's law of data}.
:moose call, the: n. see {whalesong}.
:moria: /mor'ee-*/ n. like {nethack} and {rogue}, one of the
 large pd dungeons-and-dragons-like simulation games, available for
 a wide range of machines and operating systems. extremely
 addictive and a major consumer of time better used for hacking.
:motas: /moh-toz/ [usenet: member of the appropriate sex, after
 {motos} and {motss}] n. a potential or (less often) actual sex
 partner. see also {so}.
:motos: /moh-tohs/ [acronym from the  u.s. census forms via
 usenet: member of the opposite sex] n. a potential or (less often)
 actual sex partner. see {motas}, {motss}, {so}. less
 common than motss or {motas}, which have largely displaced it.
:motss: /mots/ or /m-o-t-s-s/ [from the  u.s. census forms
 via usenet, member of the same sex] n. esp. one considered as a
 possible sexual partner. the gay-issues newsgroup on usenet is
 called soc.motss. see {motos} and {motas}, which derive
 from it. also see {so}.
:mouse ahead: vi. point-and-click analog of `type ahead'. to
 manipulate a computer's pointing device (almost always a mouse in
 this usage, but not necessarily) and its selection or command
 buttons before a computer program is ready to accept such input, in
 anticipation of the program accepting the input. handling this
 properly is rare, but it can help make a {wimp environment} much
 more usable, assuming the users are familiar with the behavior of
 the user interface.
:mouse around: vi. to explore public portions of a large system, esp.
 a network such as internet via {ftp} or {telnet}, looking for
 interesting stuff to {snarf}.
:mouse belt: n. see {rat belt}.
:mouse droppings: [ms-dos] n. pixels (usually single) that are not
 properly restored when the mouse pointer moves away from a
 particular location on the screen, producing the appearance that
 the mouse pointer has left droppings behind. the major causes for
 this problem are programs that write to the screen memory
 corresponding to the mouse pointer's current location without
 hiding the mouse pointer first, and mouse drivers that do not quite
 support the graphics mode in use.
:mouse elbow: n. a tennis-elbow-like fatigue syndrome resulting from
 excessive use of a {wimp environment}. similarly, `mouse
 shoulder'; gls reports that he used to get this a lot before he
 taught himself to be ambimoustrous.
:mouso: /mow'soh/ n. [by analogy with `typo'] an error in mouse usage
 resulting in an inappropriate selection or graphic garbage on the
 screen. compare {thinko}, {braino}.
:ms-dos:: /m-s-dos/ [microsoft disk operating system] n. a
 {clone} of {{cp/m}} for the  crufted together in  weeks by
 hacker tim paterson, who is said to have regretted it ever since.
 numerous features, including vaguely unix-like but rather broken
 support for subdirectories, i/o redirection, and pipelines, were
 hacked into . and subsequent versions; as a result, there are two
 or more incompatible versions of many system calls, and ms-dos
 programmers can never agree on basic things like what character to
 use as an option switch or whether to be case-sensitive. the
 resulting mess is now the highest-unit-volume os in history. often
 known simply as dos, which annoys people familiar with other
 similarly abbreviated operating systems (the name goes back to the
 mid-s, when it was attached to ibm's first disk operating
 system for the ). the name further annoys those who know what
 the term {operating system} does (or ought to) connote; dos is
 more properly a set of relatively simple interrupt services. some
 people like to pronounce dos like "dose", as in "i don't work on
 dose, man!", or to compare it to a dose of brain-damaging drugs
 (a slogan button in wide circulation among hackers exhorts:
 "ms-dos: just say no!"). see {mess-dos}, {ill-behaved}.
:mu: /moo/ the correct answer to the classic trick question
 "have you stopped beating your wife yet?". assuming that you
 have no wife or you have never beaten your wife, the answer "yes"
 is wrong because it implies that you used to beat your wife and
 then stopped, but "no" is worse because it suggests that you have
 one and are still beating her. according to various discordians
 and douglas hofstadter (see the bibliography in {appendix c}),
 the correct answer is usually "mu", a japanese word alleged to
 mean "your question cannot be answered because it depends on
 incorrect assumptions". hackers tend to be sensitive to logical
 inadequacies in language, and many have adopted this suggestion
 with enthusiasm. the word `mu' is actually from chinese, meaning
 `nothing'; it is used in mainstream japanese in that sense, but
 native speakers do not recognize the discordian question-denying
 use. it almost certainly derives from overgeneralization of the
 answer in the following well-known rinzei zen teaching riddle:
a monk asked joshu, "does a dog have the buddha nature?"
joshu retorted, "mu!"
see also {has the x nature}, {ai koans}, and douglas
hofstadter's `g"odel, escher, bach: an eternal golden braid'
(pointer in the bibliography in appendix c).
:mud: /muhd/ [acronym, multi-user dungeon; alt. multi-user
 dimension] . n. a class of {virtual reality} experiments
 accessible via the internet. these are real-time chat forums with
 structure; they have multiple `locations' like an adventure game,
 and may include combat, traps, puzzles, magic, a simple economic
 system, and the capability for characters to build more structure
 onto the database that represents the existing world. . vi. to
 play a mud (see {hack-and-slay}). the acronym mud is often
 lowercased and/or verbed; thus, one may speak of `going
 mudding', etc.
 historically, muds (and their more recent progeny with names of mu-
 form) derive from a hack by richard bartle and roy trubshaw on the
 university of essex's dec- in the early s; descendants of
 that game still exist today (see {bartlemud}). there is a
 widespread myth (repeated, unfortunately, by earlier versions of
 this lexicon) that the name mud was trademarked to the commercial
 mud run by bartle on british telecom (the motto: "you haven't
 *lived* 'til you've *died* on mud!"); however, this is
 false —- richard bartle explicitly placed `mud' in pd in . bt
 was upset at this, as they had already printed trademark claims on
 some maps and posters, which were released and created the
 myth.
 students on the european academic networks quickly improved on the
 mud concept, spawning several new muds (vaxmud, abermud, lpmud).
 many of these had associated bulletin-board systems for social
 interaction. because these had an image as `research' they
 often survived administrative hostility to bbss in general. this,
 together with the fact that usenet feeds have been spotty and
 difficult to get in the u.k., made the muds major foci of hackish
 social interaction there.
 abermud and other variants crossed the atlantic around  and
 quickly gained popularity in the u.s.; they became nuclei for large
 hacker communities with only loose ties to traditional hackerdom
 (some observers see parallels with the growth of usenet in the
 early s). the second wave of muds (tinymud and variants)
 tended to emphasize social interaction, puzzles, and cooperative
 world-building as opposed to combat and competition. in , over
 % of mud sites are of a third major variety, lpmud, which
 synthesizes the combat/puzzle aspects of abermud and older systems
 with the extensibility of tinymud. the trend toward greater
 programmability and flexibility will doubtless continue.
 the state of the art in mud design is still moving very rapidly,
 with new simulation designs appearing (seemingly) every month.
 there is now (early ) a move afoot to deprecate the term
 {mud} itself, as newer designs exhibit an exploding variety of
 names corresponding to the different simulation styles being
 explored. see also {bartlemud}, {berserking}, {bonk/oif},
 {brand brand brand}, {fod}, {hack-and-slay}, {link-dead},
 {mudhead}, {posing}, {talk mode}, {tinycrud}.
:muddie: n. syn. {mudhead}. more common in great britain, possibly
 because system administrators there like to mutter "bloody
 muddies" when annoyed at the species.
:mudhead: n. commonly used to refer to a {mud} player who eats,
 sleeps, and breathes mud. mudheads have been known to fail their
 degrees, drop out, etc., with the consolation, however, that they
 made wizard level. when encountered in person, on a mud, or in a
 chat system, all a mudhead will talk about is three topics: the
 tactic, character, or wizard that is supposedly always unfairly
 stopping him/her from becoming a wizard or beating a favorite mud;
 why the specific game he/she has experience with is so much better
 than any other, and the mud he or she is writing or going to write
 because his/her design ideas are so much better than in any
 existing mud. see also {wannabee}.
:multician: /muhl-ti'shn/ [coined at honeywell, ca. ] n.
 competent user of {{multics}}. perhaps oddly, no one has ever
 promoted the analogous `unician'.
:multics:: /muhl'tiks/ n. [from "multiplexed information and
 computing service"] an early (late s) timesharing operating
 system co-designed by a consortium including mit, ge, and bell
 laboratories. very innovative for its time —- among other things,
 it introduced the idea of treating all devices uniformly as special
 files. all the members but ge eventually pulled out after
 determining that {second-system effect} had bloated multics to
 the point of practical unusability (the `lean' predecessor in
 question was {ctss}). honeywell commercialized multics after
 buying out ge's computer group, but it was never very successful
 (among other things, on some versions one was commonly required to
 enter a password to log out). one of the developers left in the
 lurch by the project's breakup was ken thompson, a circumstance
 which led directly to the birth of {{unix}}. for this and other
 reasons, aspects of the multics design remain a topic of occasional
 debate among hackers. see also {brain-damaged} and {gcos}.
:multitask: n. often used of humans in the same meaning it has for
computers, to describe a person doing several things at once (but
see {thrash}). the term `multiplex', from communications
technology (meaning to handle more than one channel at the same
time), is used similarly.
:mumblage: /muhm'bl*j/ n. the topic of one's mumbling (see
{mumble}). "all that mumblage" is used like "all that
stuff" when it is not quite clear how the subject of discussion
works, or like "all that crap" when `mumble' is being used as
an implicit replacement for pejoratives.
:mumble: interj. . said when the correct response is too
 complicated to enunciate, or the speaker has not thought it out.
 often prefaces a longer answer, or indicates a general reluctance
 to get into a long discussion. "don't you think that we could
 improve lisp performance by using a hybrid reference-count
 transaction garbage collector, if the cache is big enough and there
 are some extra cache bits for the microcode to use?" "well,
 mumble … i'll have to think about it." . sometimes used as
 an expression of disagreement. "i think we should buy a
 {vax}." "mumble!" common variant: `mumble frotz' (see
 {frotz}; interestingly, one does not say `mumble frobnitz'
 even though `frotz' is short for `frobnitz'). . yet another
 {metasyntactic variable}, like {foo}. . when used as a question
 ("mumble?") means "i didn't understand you". . sometimes used
 in `public' contexts on-line as a placefiller for things one is
 barred from giving details about. for example, a poster with
 pre-released hardware in his machine might say "yup, my machine
 now has an extra m of memory, thanks to the card i'm testing for
 mumbleco." . a conversational wild card used to designate
 something one doesn't want to bother spelling out, but which can be
 {glark}ed from context. compare {blurgle}. . [xerox parc]
 a colloquialism used to suggest that further discussion would be
 fruitless.
:munch: [often confused with {mung}, q.v.] vt. to transform
 information in a serial fashion, often requiring large amounts of
 computation. to trace down a data structure. related to {crunch}
 and nearly synonymous with {grovel}, but connotes less pain.
:munching: n. exploration of security holes of someone else's
 computer for thrills, notoriety, or to annoy the system manager.
 compare {cracker}. see also {hacked off}.
:munching squares: n. a {display hack} dating back to the pdp-
 (ca. , reportedly discovered by jackson wright), which employs
 a trivial computation (repeatedly plotting the graph y = x xor t
 for successive values of t —- see {hakmem} items —) to
 produce an impressive display of moving and growing squares that
 devour the screen. the initial value of t is treated as a
 parameter, which, when well-chosen, can produce amazing effects.
 some of these, later (re)discovered on the lisp machine, have been
 christened `munching triangles' (try and for xor and toggling
 points instead of plotting them), `munching w's', and `munching
 mazes'. more generally, suppose a graphics program produces an
 impressive and ever-changing display of some basic form, foo, on a
 display terminal, and does it using a relatively simple program;
 then the program (or the resulting display) is likely to be
 referred to as `munching foos'. [this is a good example of the
 use of the word {foo} as a {metasyntactic variable}.]
:munchkin: /muhnch'kin/ [from the squeaky-voiced little people in
 l. frank baum's `the wizard of oz'] n. a teenage-or-younger micro
 enthusiast hacking basic or something else equally constricted. a
 term of mild derision —- munchkins are annoying but some grow up
 to be hackers after passing through a {larval stage}. the term
 {urchin} is also used. see also {wannabee}, {bitty box}.
:mundane: [from sf fandom] n. . a person who is not in science
 fiction fandom. . a person who is not in the computer industry.
 in this sense, most often an adjectival modifier as in "in my
 mundane life…." see also {real world}.
:mung: /muhng/ alt. `munge' /muhnj/ [in  at mit, `mash
 until no good'; sometime after that the derivation from the
 {{recursive acronym}} `mung until no good' became standard] vt.
 . to make changes to a file, esp. large-scale and irrevocable
 changes. see {blt}. . to destroy, usually accidentally,
 occasionally maliciously. the system only mungs things
 maliciously; this is a consequence of {finagle's law}. see
 {scribble}, {mangle}, {trash}, {nuke}. reports from
 {usenet} suggest that the pronunciation /muhnj/ is now usual
 in speech, but the spelling `mung' is still common in program
 comments (compare the widespread confusion over the proper spelling
 of {kluge}). . the kind of beans of which the sprouts are used
 in chinese food. (that's their real name! mung beans! really!)
 like many early hacker terms, this one seems to have originated at
 {tmrc}; it was already in use there in . peter samson
 (compiler of the tmrc lexicon) thinks it may originally have been
 onomatopoeic for the sound of a relay spring (contact) being
 twanged.
:murphy's law: prov. the correct, *original* murphy's law
 reads: "if there are two or more ways to do something, and one of
 those ways can result in a catastrophe, then someone will do it."
 this is a principle of defensive design, cited here because it is
 usually given in mutant forms less descriptive of the challenges of
 design for lusers. for example, you don't make a two-pin plug
 symmetrical and then label it `this way up'; if it matters which
 way it is plugged in, then you make the design asymmetrical (see
 also the anecdote under {magic smoke}).
 edward a. murphy, jr. was one of the engineers on the rocket-sled
 experiments that were done by the u.s. air force in  to test
 human acceleration tolerances (usaf project mx). one experiment
 involved a set of  accelerometers mounted to different parts of
 the subject's body. there were two ways each sensor could be glued
 to its mount, and somebody methodically installed all  the wrong
 way around. murphy then made the original form of his
 pronouncement, which the test subject (major john paul stapp)
 quoted at a news conference a few days later.
 within months `murphy's law' had spread to various technical
 cultures connected to aerospace engineering. before too many years
 had gone by variants had passed into the popular imagination,
 changing as they went. most of these are variants on "anything
 that can go wrong, will"; this is sometimes referred to as
 {finagle's law}. the memetic drift apparent in these mutants
 clearly demonstrates murphy's law acting on itself!
:music:: n. a common extracurricular interest of hackers (compare
 {{science-fiction fandom}}, {{oriental food}}; see also
 {filk}). hackish folklore has long claimed that musical and
 programming abilities are closely related, and there has been at
 least one large-scale statistical study that supports this.
 hackers, as a rule, like music and often develop musical
 appreciation in unusual and interesting directions. folk music is
 very big in hacker circles; so is electronic music, and the sort of
 elaborate instrumental jazz/rock that used to be called
 `progressive' and isn't recorded much any more. the hacker's
 musical range tends to be wide; many can listen with equal
 appreciation to (say) talking heads, yes, gentle giant, spirogyra,
 scott joplin, tangerine dream, king sunny ade, the pretenders, or
 bach's brandenburg concerti. it is also apparently true that
 hackerdom includes a much higher concentration of talented amateur
 musicians than one would expect from a similar-sized control group
 of {mundane} types.
:mutter: vt. to quietly enter a command not meant for the ears, eyes,
 or fingers of ordinary mortals. often used in `mutter an
 {incantation}'. see also {wizard}.
:n: /n/ quant. . a large and indeterminate number of objects:
 "there were n bugs in that crock!" also used in its
 original sense of a variable name: "this crock has n bugs,
 as n goes to infinity." (the true number of bugs is always
 at least n + .) . a variable whose value is inherited
 from the current context. for example, when a meal is being
 ordered at a restaurant, n may be understood to mean however
 many people there are at the table. from the remark "we'd like to
 order n wonton soups and a family dinner
 for n - " you can deduce that one person at the table
 wants to eat only soup, even though you don't know how many people
 there are (see {great-wall}). . `nth': adj. the
 ordinal counterpart of n, senses  and . "now for the
 nth and last time…" in the specific context
 "nth-year grad student", n is generally assumed to
 be at least , and is usually  or more (see {tenured graduate
 student}). see also {{random numbers}}, {two-to-the-n}.
:nadger: /nad'jr/ [great britain] v. of software or hardware (not
 people), to twiddle some object in a hidden manner, generally so
 that it conforms better to some format. for instance, string
 printing routines on -bit processors often take the string text
 from the instruction stream, thus a print call looks like `jsr
 print:"hello world"'. the print routine has to `nadger' the
 return instruction pointer so that the processor doesn't try to
 execute the text as instructions.
:nailed to the wall: [like a trophy] adj. said of a bug finally
 eliminated after protracted, and even heroic, effort.
:nailing jelly: vi. see {like nailing jelly to a tree}.
:na"ive: adj. untutored in the perversities of some particular
 program or system; one who still tries to do things in an intuitive
 way, rather than the right way (in really good designs these
 coincide, but most designs aren't `really good' in the
 appropriate sense). this is completely unrelated to general
 maturity or competence, or even competence at any other specific
 program. it is a sad commentary on the primitive state of
 computing that the natural opposite of this term is often claimed
 to be `experienced user' but is really more like `cynical
 user'.
:na"ive user: n. a {luser}. tends to imply someone who is
 ignorant mainly owing to inexperience. when this is applied to
 someone who *has* experience, there is a definite implication
 of stupidity.
:nak: /nak/ [from the ascii mnemonic for ] interj.
 . on-line joke answer to {ack}?: "i'm not here."
 . on-line answer to a request for chat: "i'm not available."
 . used to politely interrupt someone to tell them you don't
 understand their point or that they have suddenly stopped making
 sense. see {ack}, sense . "and then, after we recode the
 project in cobol…." "nak, nak, nak! i thought i heard you
 say cobol!"
:nano: /nan'oh/ [cmu: from `nanosecond'] n. a brief period of
 time. "be with you in a nano" means you really will be free
 shortly, i.e., implies what mainstream people mean by "in a
 jiffy" (whereas the hackish use of `jiffy' is quite different —-
 see {jiffy}).
:nano-: [si: the next quantifier below {micro-}; meaning *
 ^(-)] pref. smaller than {micro-}, and used in the same rather
 loose and connotative way. thus, one has {{nanotechnology}}
 (coined by hacker k. eric drexler) by analogy with
 `microtechnology'; and a few machine architectures have a
 `nanocode' level below `microcode'. tom duff at bell labs has
 also pointed out that "pi seconds is a nanocentury".
 see also {{quantifiers}}, {pico-}, {nanoacre}, {nanobot},
 {nanocomputer}, {nanofortnight}.
:nanoacre: /nan'oh-ay`kr/ n. a unit (about  mm square) of real
 estate on a vlsi chip. the term gets its giggle value from the
 fact that vlsi nanoacres have costs in the same range as real acres
 once one figures in design and fabrication-setup costs.
:nanobot: /nan'oh-bot/ n. a robot of microscopic proportions,
 presumably built by means of {{nanotechnology}}. as yet, only
 used informally (and speculatively!). also called a `nanoagent'.
:nanocomputer: /nan'oh-k*m-pyoo'tr/ n. a computer whose switching
 elements are molecular in size. designs for mechanical
 nanocomputers which use single-molecule sliding rods for their
 logic have been proposed. the controller for a {nanobot} would be
 a nanocomputer.
:nanofortnight: [adelaide university] n.  fortnight * ^-,
 or about . msec. this unit was used largely by students doing
 undergraduate practicals. see {microfortnight}, {attoparsec},
 and {micro-}.
:nanotechnology:: /nan'-oh-tek-no`l*-jee/ n. a hypothetical
 fabrication technology in which objects are designed and built with
 the individual specification and placement of each separate atom.
 the first unequivocal nanofabrication experiments are taking place
 now (), for example with the deposition of individual xenon
 atoms on a nickel substrate to spell the logo of a certain very
 large computer company. nanotechnology has been a hot topic in the
 hacker subculture ever since the term was coined by k. eric drexler
 in his book `engines of creation', where he predicted that
 nanotechnology could give rise to replicating assemblers,
 permitting an exponential growth of productivity and personal
 wealth. see also {blue goo}, {gray goo}, {nanobot}.
:nasal demons: n. during a discussion on the usenet group
 comp.std.c in early , a regular remarked "when the
 compiler encounters [a given undefined construct] it is legal for
 it to make demons fly out of your nose" (the implication is that
 it may choose any arbitrarily bizarre way to interpret the code
 without violating the ansi c standard). someone else followed up with a
 reference to "nasal demons", which became recognized shorthand on
 that group for any unexpected behaviour of a c compiler on
 encountering an undefined construct.
:nastygram: /nas'tee-gram/ n. . a protocol packet or item of
 email (the latter is also called a {letterbomb}) that takes
 advantage of misfeatures or security holes on the target system to
 do untoward things. . disapproving mail, esp. from a
 {net.god}, pursuant to a violation of {netiquette} or a
 complaint about failure to correct some mail- or news-transmission
 problem. compare {shitogram}. . a status report from an
 unhappy, and probably picky, customer. "what'd corporate say in
 today's nastygram?" . [deprecated] an error reply by mail from a
 {daemon}; in particular, a {bounce message}.
:nathan hale: n. an asterisk (see also {splat}, {{ascii}}). oh,
 you want an etymology? notionally, from "i regret that i have only
 one asterisk for my country!", a misquote of the famous remark
 uttered by nathan hale just before he was hanged. hale was a
 (failed) spy for the rebels in the american war of independence.
:nature: n. see {has the x nature}.
:neat hack: n. . a clever technique. . a brilliant practical
 joke, where neatness is correlated with cleverness, harmlessness,
 and surprise value. example: the caltech rose bowl card display
 switch (see "{the meaning of `hack'}", appendix a). see
 also {hack}.
:neats vs. scruffies: n. the label used to refer to one of the
 continuing {holy wars} in ai research. this conflict tangles
 together two separate issues. one is the relationship between
 human reasoning and ai; `neats' tend to try to build systems
 that `reason' in some way identifiably similar to the way humans
 report themselves as doing, while `scruffies' profess not to
 care whether an algorithm resembles human reasoning in the least as
 long as it works. more importantly, `neats' tend to believe
 that logic is king, while `scruffies' favor looser, more ad-hoc
 methods driven by empirical knowledge. to a `neat',
 `scruffy' methods appear promiscuous and successful only by
 accident; to a `scruffy', `neat' methods appear to be hung up
 on formalism and irrelevant to the hard-to-capture `common
 sense' of living intelligences.
:neep-neep: /neep neep/ [onomatopoeic, from new york sf fandom] n.
 one who is fascinated by computers. more general than {hacker},
 as it need not imply more skill than is required to boot games on a
 pc. the derived noun `neep-neeping' applies specifically to
 the long conversations about computers that tend to develop in the
 corners at most sf-convention parties. fandom has a related
 proverb to the effect that "hacking is a conversational black
 hole!".
:neophilia: /nee`oh-fil'-ee-*/ n. the trait of being excited and
 pleased by novelty. common trait of most hackers, sf fans, and
 members of several other connected leading-edge subcultures,
 including the pro-technology `whole earth' wing of the ecology
 movement, space activists, many members of mensa, and the
 discordian/neo-pagan underground. all these groups overlap heavily
 and (where evidence is available) seem to share characteristic
 hacker tropisms for science fiction, {{music}}, and {{oriental
 food}}.
:net.-: /net dot/ pref. [usenet] prefix used to describe people and
 events related to usenet. from the time before the {great
 renaming}, when most non-local newsgroups had names beginning
 `net.'. includes {net.god}s, `net.goddesses' (various
 charismatic net.women with circles of on-line admirers),
 `net.lurkers' (see {lurker}), `net.person',
 `net.parties' (a synonym for {boink}, sense ), and
 many similar constructs. see also {net.police}.
:net.god: /net god/ n. used to refer to anyone who satisfies some
 combination of the following conditions: has been visible on usenet
 for more than  years, ran one of the original backbone sites,
 moderated an important newsgroup, wrote news software, or knows
 gene, mark, rick, mel, henry, chuq, and greg personally. see
 {demigod}. net.goddesses such as rissa or the slime sisters have
 (so far) been distinguished more by personality than by authority.
:net.personality: /net per`sn-al'-*-tee/ n. someone who has made a name
 for him or herself on {usenet}, through either longevity or
 attention-getting posts, but doesn't meet the other requirements of
 {net.god}hood.
:net.police: /net-p*-lees'/ n. (var. `net.cops') those usenet
 readers who feel it is their responsibility to pounce on and
 {flame} any posting which they regard as offensive or in
 violation of their understanding of {netiquette}. generally
 used sarcastically or pejoratively. also spelled `net police'.
 see also {net.-}, {code police}.
:netbollix: [from bollix: to bungle] n. {ibm}'s netbios, an
 extremely {brain-damaged} network protocol which, like {blue
 glue}, is used at commercial shops that don't know any better.
:netburp: [irc] n. when {netlag} gets really bad, and delays
 between servers exceed a certain threshhold, the {irc} network
 effectively becomes partitioned for a period of time, and large
 numbers of people seem to be signing off at the same time and then
 signing back on again when things get better. an instance of this
 is called a `netburp' (or, sometimes, {netsplit}).
:netdead: [irc] n. the state of someone who signs off {irc},
 perhaps during a {netburp}, and doesn't sign back on until
 later. in the interim, he is "dead to the net".
:nethack: /net'hak/ [unix] n. a dungeon game similar to
 {rogue} but more elaborate, distributed in c source over
 {usenet} and very popular at unix sites and on pc-class machines
 (nethack is probably the most widely distributed of the freeware
 dungeon games). the earliest versions, written by jay fenlason and
 later considerably enhanced by andries brouwer, were simply called
 `hack'. the name changed when maintenance was taken over by a
 group of hackers originally organized by mike stephenson; the
 current contact address (as of mid-) is
 nethack-bugs@linc.cis.upenn.edu.
:netiquette: /net'ee-ket/ or /net'i-ket/ [portmanteau from "network
 etiquette"] n. conventions of politeness recognized on {usenet},
 such as avoidance of cross-posting to inappropriate groups or
 refraining from commercial pluggery on the net.
:netlag: [irc, mud] n. a condition that occurs when the delays in
 the {irc} network or on a {mud} become severe enough that
 servers briefly lose and then reestablish contact, causing messages
 to be delivered in bursts, often with delays of up to a minute.
 (note that this term has nothing to do with mainstream "jetlag",
 a condition which hackers tend not to be much bothered by.)
:netnews: /net'n[y]ooz/ n. . the software that makes {usenet}
 run. . the content of usenet. "i read netnews right after my
 mail most mornings."
:netrock: /net'rok/ [ibm] n. a {flame}; used esp. on vnet,
 ibm's internal corporate network.
:netsplit: n. syn. {netburp}.
:netter: n. . loosely, anyone with a {network address}. . more
 specifically, a {usenet} regular. most often found in the
 plural. "if you post *that* in a technical group, you're
 going to be flamed by angry netters for the rest of time!"
:network address: n. (also `net address') as used by hackers,
 means an address on `the' network (see {network, the}; this is
 almost always a {bang path} or {{internet address}}). such an
 address is essential if one wants to be to be taken seriously by
 hackers; in particular, persons or organizations that claim to
 understand, work with, sell to, or recruit from among hackers but
 *don't* display net addresses are quietly presumed to be
 clueless poseurs and mentally flushed (see {flush}, sense ).
 hackers often put their net addresses on their business cards and
 wear them prominently in contexts where they expect to meet other
 hackers face-to-face (see also {{science-fiction fandom}}). this
 is mostly functional, but is also a signal that one identifies with
 hackerdom (like lodge pins among masons or tie-dyed t-shirts among
 grateful dead fans). net addresses are often used in email text as
 a more concise substitute for personal names; indeed, hackers may
 come to know each other quite well by network names without ever
 learning each others' `legal' monikers. see also {sitename},
 {domainist}.
:network meltdown: n. a state of complete network overload; the
 network equivalent of {thrash}ing. this may be induced by a
 {chernobyl packet}. see also {broadcast storm}, {kamikaze
 packet}.
:network, the: n. . the union of all the major noncommercial,
 academic, and hacker-oriented networks, such as internet, the old
 arpanet, nsfnet, {bitnet}, and the virtual uucp and {usenet}
 `networks', plus the corporate in-house networks and commercial
 time-sharing services (such as compuserve) that gateway to them. a
 site is generally considered `on the network' if it can be reached
 through some combination of internet-style (@-sign) and uucp
 (bang-path) addresses. see {bang path}, {{internet address}},
 {network address}. . a fictional conspiracy of libertarian
 hacker-subversives and anti-authoritarian monkeywrenchers described
 in robert anton wilson's novel `schr"odinger's cat', to which
 many hackers have subsequently decided they belong (this is an
 example of {ha ha only serious}).
 in sense , `network' is often abbreviated to `net'. "are
 you on the net?" is a frequent question when hackers first meet
 face to face, and "see you on the net!" is a frequent goodbye.
:new jersey: [primarily stanford/silicon valley] adj. brain-damaged
 or of poor design. this refers to the allegedly wretched quality
 of such software as c, c++, and unix (which originated at bell labs
 in murray hill, new jersey). "this compiler bites the bag, but
 what can you expect from a compiler designed in new jersey?"
 compare {berkeley quality software}. see also {unix
 conspiracy}.
:new testament: n. [c programmers] the second edition of k&r's
 `the c programming language' (prentice-hall, ; isbn
 ---), describing ansi standard c. see {k&r}.
:newbie: /n[y]oo'bee/ n. [orig. from british public-school and
 military slang variant of `new boy'] a usenet neophyte.
 this term surfaced in the {newsgroup} talk.bizarre but is
 now in wide use. criteria for being considered a newbie vary
 wildly; a person can be called a newbie in one newsgroup while
 remaining a respected regular in another. the label `newbie'
 is sometimes applied as a serious insult to a person who has been
 around usenet for a long time but who carefully hides all evidence
 of having a clue. see {biff}.
:newgroup wars: /n[y]oo'groop wohrz/ [usenet] n. the salvos of dueling
 `newgroup' and `rmgroup' messages sometimes exchanged by
 persons on opposite sides of a dispute over whether a {newsgroup}
 should be created net-wide. these usually settle out within a week
 or two as it becomes clear whether the group has a natural
 constituency (usually, it doesn't). at times, especially in the
 completely anarchic alt hierarchy, the names of newsgroups
 themselves become a form of comment or humor; e.g., the spinoff of
 alt.swedish.chef.bork.bork.bork from alt.tv.muppets in
 early , or any number of specialized abuse groups named after
 particularly notorious {flamer}s, e.g., alt.weemba.
:newline: /n[y]oo'li:n/ n. . [techspeak, primarily unix] the
 ascii lf character (), used under {{unix}} as a text line
 terminator. a bell-labs-ism rather than a berkeleyism;
 interestingly (and unusually for unix jargon), it is said to have
 originally been an ibm usage. (though the term `newline' appears
 in ascii standards, it never caught on in the general computing
 world before unix). . more generally, any magic character,
 character sequence, or operation (like pascal's writeln procedure)
 required to terminate a text record or separate lines. see
 {crlf}, {terpri}.
:news: /nee'wis/, /n[y]oo'is/ or /n[y]ooz/ [acronym; the
 `network window system'] n. the road not taken in window systems,
 an elegant {postscript}-based environment that would almost certainly
 have won the standards war with {x} if it hadn't been
 {proprietary} to sun microsystems. there is a lesson here that
 too many software vendors haven't yet heeded. many hackers insist
 on the two-syllable pronunciations above as a way of distinguishing
 news from {news} (the {netnews} software).
:news: n. see {netnews}.
:newsfroup: // [usenet] n. silly synonym for {newsgroup},
 originally a typo but now in regular use on usenet's talk.bizarre
 and other lunatic-fringe groups. compare {hing} and {filk}.
:newsgroup: [usenet] n. one of {usenet}'s huge collection of
 topic groups or {fora}. usenet groups can be `unmoderated'
 (anyone can post) or `moderated' (submissions are automatically
 directed to a moderator, who edits or filters and then posts the
 results). some newsgroups have parallel {mailing list}s for
 internet people with no netnews access, with postings to the group
 automatically propagated to the list and vice versa. some
 moderated groups (especially those which are actually gatewayed
 internet mailing lists) are distributed as `digests', with groups
 of postings periodically collected into a single large posting with
 an index.
 among the best-known are comp.lang.c (the c-language forum),
 comp.arch (on computer architectures), comp.unix.wizards
 (for unix wizards), rec.arts.sf-lovers (for science-fiction
 fans), and talk.politics.misc (miscellaneous political
 discussions and {flamage}).
:nick: [irc] n. short for nickname. on {irc}, every user must
 pick a nick, which is sometimes the same as the user's real name or
 login name, but is often more fanciful.
:nickle: /ni'kl/ [from `nickel', common name for the u.s.
 -cent coin] n. a {nybble} + ;  bits. reported among
 developers for mattel's gi  (the intellivision games
 processor), a chip with -bit-wide ram but -bit-wide rom. see
 also {deckle}.
:night mode: n. see {phase} (of people).
:nightmare file system: n. pejorative hackerism for sun's network
 file system (nfs). in any nontrivial network of suns where there
 is a lot of nfs cross-mounting, when one sun goes down, the others
 often freeze up. some machine tries to access the down one, and
 (getting no response) repeats indefinitely. this causes it to
 appear dead to some messages (what is actually happening is that it
 is locked up in what should have been a brief excursion to a higher
 {spl} level). then another machine tries to reach either the
 down machine or the pseudo-down machine, and itself becomes
 pseudo-down. the first machine to discover the down one is now
 trying both to access the down one and to respond to the
 pseudo-down one, so it is even harder to reach. this situation
 snowballs very fast, and soon the entire network of machines is
 frozen —- worst of all, the user can't even abort the file access
 that started the problem! many of nfs'es problems are excused by
 partisans as being an inevitable result of its statelessness, which
 is held to be a great feature (critics, of course, call it a great
 {misfeature}). (its partisans are apt to cite this as proof of
 unix's alleged bogosity; its had a working nfs-like shared file
 system with none of these problems in the early s.) see also
 {broadcast storm}.
:nil: /nil/ no. used in reply to a question, particularly one
 asked using the `-p' convention. most hackers assume this derives
 simply from lisp terminology for `false' (see also {t}), but
 nil as a negative reply was well-established among radio hams
 decades before the advent of lisp. the historical connection
 between early hackerdom and the ham radio word was strong enough
 that this may have been an influence.
:nmi: /n-m-i/ n. non-maskable interrupt. an irq  on the pdp-
 or []; the nmi line on an []. in contrast with a
 {priority interrupt} (which might be ignored, although that is
 unlikely), an nmi is *never* ignored.
:no-op: /noh'op/ alt. nop /nop/ [no operation] n. . (also v.)
 a machine instruction that does nothing (sometimes used in
 assembler-level programming as filler for data or patch areas, or
 to overwrite code to be removed in binaries). see also {jfcl}.
 . a person who contributes nothing to a project, or has nothing
 going on upstairs, or both. as in "he's a no-op." . any
 operation or sequence of operations with no effect, such as
 circling the block without finding a parking space, or putting
 money into a vending machine and having it fall immediately into
 the coin-return box, or asking someone for help and being told to
 go away. "oh, well, that was a no-op." hot-and-sour soup (see
 {great-wall}) that is insufficiently either is `no-op soup';
 so is wonton soup if everybody else is having hot-and-sour.
:noddy: /nod'ee/ [uk: from the children's books] adj.
 . small and un-useful, but demonstrating a point. noddy programs
 are often written by people learning a new language or system. the
 archetypal noddy program is {hello, world}. noddy code may be
 used to demonstrate a feature or bug of a compiler. may be used of
 real hardware or software to imply that it isn't worth using.
 "this editor's a bit noddy." . a program that is more or less
 instant to produce. in this use, the term does not necessarily
 connote uselessness, but describes a {hack} sufficiently trivial
 that it can be written and debugged while carrying on (and during
 the space of) a normal conversation. "i'll just throw together a
 noddy {awk} script to dump all the first fields." in north
 america this might be called a {mickey mouse program}. see
 {toy program}.
:nomex underwear: /noh'meks uhn'-der-weir/ [usenet] n. syn.
 {asbestos longjohns}, used mostly in auto-related mailing lists
 and newsgroups. nomex underwear is an actual product available on
 the racing equipment market, used as a fire resistance measure and
 required in some racing series.
:nominal semidestructor: n. sound-alike slang for `national
 semiconductor', found among other places in the .bsd networking
 sources. during the late s to mid-s this company marketed
 a series of microprocessors including the ns and ns and
 several variants. at one point early in the great microprocessor
 race, the specs on these chips made them look like serious
 competition for the rising intel x and motorola x series.
 unfortunately, the actual parts were notoriously flaky and never
 implemented the full instruction set promised in their literature,
 apparently because the company couldn't get any of the mask
 steppings to work as designed. they eventually sank without trace,
 joining the zilog z, and a few even more obscure also-rans in
 the graveyard of forgotten microprocessors. compare {hp-sux},
 {aidx}, {buglix}, {macintrash}, {telerat}, {open
 deathtrap}, {scumos}, {sun-stools}.
:non-optimal solution: n. (also `sub-optimal solution') an
 astoundingly stupid way to do something. this term is generally
 used in deadpan sarcasm, as its impact is greatest when the person
 speaking looks completely serious. compare {stunning}. see also
 {bad thing}.
:nonlinear: adj. [scientific computation] . behaving in an erratic
 and unpredictable fashion; unstable. when used to describe the
 behavior of a machine or program, it suggests that said machine or
 program is being forced to run far outside of design
 specifications. this behavior may be induced by unreasonable
 inputs, or may be triggered when a more mundane bug sends the
 computation far off from its expected course. . when describing
 the behavior of a person, suggests a tantrum or a {flame}.
 "when you talk to bob, don't mention the drug problem or he'll go
 nonlinear for hours." in this context, `go nonlinear' connotes
 `blow up out of proportion' (proportion connotes linearity).
:nontrivial: adj. requiring real thought or significant computing
 power. often used as an understated way of saying that a problem
 is quite difficult or impractical, or even entirely unsolvable
 ("proving p=np is nontrivial"). the preferred emphatic form is
 `decidedly nontrivial'. see {trivial}, {uninteresting},
 {interesting}.
:notwork: /not'werk/ n. a network, when it is acting {flaky} or is
 {down}. compare {nyetwork}. said at ibm to have orig.
 referred to a particular period of flakiness on ibm's vnet
 corporate network, ca. ; but there are independent reports of
 the term from elsewhere.
:np-: /n-p/ pref. extremely. used to modify adjectives
 describing a level or quality of difficulty; the connotation is
 often `more so than it should be' (np-complete problems all seem
 to be very hard, but so far no one has found a good a priori
 reason that they should be.) "coding a bitblt implementation to
 perform correctly in every case is np-annoying." this is
 generalized from the computer-science terms `np-hard' and
 `np-complete'. np is the set of nondeterministic-polynomial
 algorithms, those that can be completed by a nondeterministic
 turing machine in an amount of time that is a polynomial function
 of the size of the input; a solution for one np-complete problem
 would solve all the others. note, however, that the np- prefix is,
 from a complexity theorist's point of view, the wrong part of
 `np-complete' to connote extreme difficulty; it is the completeness,
 not the np-ness, that puts any problem it describes in the
 `hard' category.
:nroff: /en'rof/ [unix, from "new runoff"] n. a companion
 program to the unix typesetter `troff', accepting identical
 input but preparing output for terminals and line printers.
:nsa line eater: n. the national security agency trawling
 program sometimes assumed to be reading {usenet} for the
 u.s. government's spooks. most hackers describe it as a mythical
 beast, but some believe it actually exists, more aren't sure, and
 many believe in acting as though it exists just in case. some
 netters put loaded phrases like `kgb', `uzi', `nuclear materials',
 `palestine', `cocaine', and `assassination' in their {sig block}s
 in a (probably futile) attempt to confuse and overload the
 creature. the {gnu} version of {emacs} actually has a command
 that randomly inserts a bunch of insidious anarcho-verbiage into
 your edited text.
 there is a mainstream variant of this myth involving a `trunk line
 monitor', which supposedly used speech recognition to extract words
 from telephone trunks. this one was making the rounds in the
 late s, spread by people who had no idea of then-current
 technology or the storage, signal-processing, or speech recognition
 needs of such a project. on the basis of mass-storage costs alone
 it would have been cheaper to hire  high-school students and just
 let them listen in. speech-recognition technology can't do this
 job even now (), and almost certainly won't in this millennium,
 either. the peak of silliness came with a letter to an alternative
 paper in new haven, connecticut, laying out the factoids of this
 big brotherly affair. the letter writer then revealed his actual
 agenda by offering —- at an amazing low price, just this once, we
 take visa and mastercard —- a scrambler guaranteed to daunt the
 trunk trawler and presumably allowing the would-be baader-meinhof
 gangs of the world to get on with their business.
:nuke: vt. . to intentionally delete the entire contents of a
 given directory or storage volume. "on unix, `rm -r /usr'
 will nuke everything in the usr filesystem." never used for
 accidental deletion. oppose {blow away}. . syn. for
 {dike}, applied to smaller things such as files, features, or
 code sections. often used to express a final verdict. "what do
 you want me to do with that -meg {wallpaper} file?" "nuke
 it." . used of processes as well as files; nuke is a frequent
 verbal alias for `kill -' on unix. . on ibm pcs, a bug
 that results in {fandango on core} can trash the operating
 system, including the fat (the in-core copy of the disk block
 chaining information). this can utterly scramble attached disks,
 which are then said to have been `nuked'. this term is also
 used of analogous lossages on macintoshes and other micros without
 memory protection.
:number-crunching: n. computations of a numerical nature, esp.
 those that make extensive use of floating-point numbers. the only
 thing {fortrash} is good for. this term is in widespread
 informal use outside hackerdom and even in mainstream slang, but
 has additional hackish connotations: namely, that the computations
 are mindless and involve massive use of {brute force}. this is
 not always {evil}, esp. if it involves ray tracing or fractals
 or some other use that makes {pretty pictures}, esp. if such
 pictures can be used as {wallpaper}. see also {crunch}.
:numbers: [scientific computation] n. output of a computation that
 may not be significant results but at least indicate that the
 program is running. may be used to placate management, grant
 sponsors, etc. `making numbers' means running a program
 because output —- any output, not necessarily meaningful output
 —- is needed as a demonstration of progress. see {pretty
 pictures}, {math-out}, {social science number}.
:nuxi problem: /nuk'see pro'bl*m/ n. this refers to the problem of
 transferring data between machines with differing byte-order. the
 string `unix' might look like `nuxi' on a machine with a
 different `byte sex' (e.g., when transferring data from a
 {little-endian} to a {big-endian}, or vice-versa). see also
 {middle-endian}, {swab}, and {bytesexual}.
:nybble: /nib'l/ (alt. `nibble') [from v. `nibble' by analogy
 with `bite' => `byte'] n. four bits; one {hex} digit;
 a half-byte. though `byte' is now techspeak, this useful relative
 is still jargon. compare {{byte}}, {crumb}, {tayste},
 {dynner}; see also {bit}, {nickle}, {deckle}. apparently
 this spelling is uncommon in commonwealth hackish, as british
 orthography suggests the pronunciation /ni:'bl/.
:nyetwork: /nyet'werk/ [from russian `nyet' = no] n. a network,
 when it is acting {flaky} or is {down}. compare {notwork}.
:ob-: /ob/ pref. obligatory. a piece of {netiquette}
acknowledging that the author has been straying from the
newsgroup's charter topic. for example, if a posting in alt.sex is
a response to a part of someone else's posting that has nothing
particularly to do with sex, the author may append `obsex' (or
`obsex') and toss off a question or vignette about some unusual
erotic act. it is considered a sign of great {winnitude} when
your obs are more interesting than other people's whole postings.
:obfuscated c contest: n. an annual contest run since  over
usenet by landon curt noll and friends. the overall winner is
whoever produces the most unreadable, creative, and bizarre (but
working) c program; various other prizes are awarded at the judges'
whim. c's terse syntax and macro-preprocessor facilities give
contestants a lot of maneuvering room. the winning programs often
manage to be simultaneously (a) funny, (b) breathtaking works of
art, and (c) horrible examples of how *not* to code in c.
this relatively short and sweet entry might help convey the flavor
of obfuscated c:
* hello world program
* by jack applin and robert heckendorn, 
main(v,c)char**c;{for(v[c++]="hello, world!\n)";
(!!c)[*c]&&(v—||—c&&execlp(*c,*c,c[!!c]+!!c,!c));
**c=!c)write(!!*c,*c,!!**c);}
 here's another good one:
* program to compute an approximation of pi
* by brian westley, 
#define _ -f<||—f-oo—;
int f=,oo=;
main(){f_oo();printf("%.f\n",.*-f/oo/oo);}f_oo()
 see also {hello, world}.
:obi-wan error: /oh'bee-won` er'*r/ [rpi, from `off-by-one' and
 the obi-wan kenobi character in "star wars"] n. a loop of
 some sort in which the index is off by . common when the index
 should have started from  but instead started from . a kind of
 {off-by-one error}. see also {zeroth}.
:objectionable-c: n. hackish take on "objective-c", the name of
 an object-oriented dialect of c in competition with the
 better-known c++ (it is used to write native applications on the
 next machine). objectionable-c uses a smalltalk-like syntax, but
 lacks the flexibility of smalltalk method calls, and (like many
 such efforts) comes frustratingly close to attaining the {right
 thing} without actually doing so.
:obscure: adj. used in an exaggeration of its normal meaning, to
 imply total incomprehensibility. "the reason for that last crash
 is obscure." "the `find()' command's syntax is obscure!"
 the phrase `moderately obscure' implies that it could be
 figured out but probably isn't worth the trouble. the construction
 `obscure in the extreme' is the preferred emphatic form.
:octal forty: /ok'tl for'tee/ n. hackish way of saying "i'm
 drawing a blank." octal  is the {{ascii}} space character,
 ; by an odd coincidence, {hex}  () is the
 {{ebcdic}} space character. see {wall}.
:off the trolley: adj. describes the behavior of a program that
 malfunctions and goes catatonic, but doesn't actually {crash} or
 abort. see {glitch}, {bug}, {deep space}.
:off-by-one error: n. exceedingly common error induced in many
 ways, such as by starting at  when you should have started at  or
 vice versa, or by writing `< n' instead of `<= n' or
 vice-versa. also applied to giving something to the person next to
 the one who should have gotten it. often confounded with
 {fencepost error}, which is properly a particular subtype of it.
:offline: adv. not now or not here. "let's take this
 discussion offline." specifically used on {usenet} to suggest
 that a discussion be taken off a public newsgroup to email.
:old fart: n. tribal elder. a title self-assumed with remarkable
 frequency by (esp.) usenetters who have been programming for more
 than about  years; often appears in {sig block}s attached to
 jargon file contributions of great archeological significance.
 this is a term of insult in the second or third person but one of
 pride in first person.
:old testament: n. [c programmers] the first edition of {k&r}, the
 sacred text describing {classic c}.
:one-banana problem: n. at mainframe shops, where the computers
 have operators for routine administrivia, the programmers and
 hardware people tend to look down on the operators and claim that a
 trained monkey could do their job. it is frequently observed that
 the incentives which would be offered said monkeys can be used
 as a scale to describe the difficulty of a task. a one-banana
 problem is simple; hence "it's only a one-banana job at the most;
 what's taking them so long?"
 at ibm, folklore divides the world into one-, two-, and
 three-banana problems. other cultures have different hierarchies
 and may divide them more finely; at icl, for example, five grapes
 (a bunch) equals a banana. their upper limit for the in-house
 {sysape}s is said to be two bananas and three grapes (another
 source claims it's three bananas and one grape, but observes
 "however, this is subject to local variations, cosmic rays and
 iso"). at a complication level any higher than that, one asks the
 manufacturers to send someone around to check things.
:one-line fix: n. used (often sarcastically) of a change to a
 program that is thought to be trivial or insignificant right up to
 the moment it crashes the system. usually `cured' by another
 one-line fix. see also {i didn't change anything!}
:one-liner wars: n. a game popular among hackers who code in the
 language apl (see {write-only language} and {line noise}).
 the objective is to see who can code the most interesting and/or
 useful routine in one line of operators chosen from
 apl's exceedingly {hairy} primitive set. a similar amusement
 was practiced among {teco} hackers and is now popular among
 {perl} aficionados.
 ken iverson, the inventor of apl, has been credited with a
 one-liner that, given a number n, produces a list of the
 prime numbers from  to n inclusive. it looks like this:
 ( =  +.= t o.| t) / t <- in
 where `o' is the apl null character, the assignment arrow is a
 single character, and `i' represents the apl iota.
:ooblick: /oo'blik/ [from dr. seuss's `bartholomew and the
 oobleck'] n. a bizarre semi-liquid sludge made from cornstarch and
 water. enjoyed among hackers who make batches during playtime at
 parties for its amusing and extremely non-newtonian behavior; it
 pours and splatters, but resists rapid motion like a solid and will
 even crack when hit by a hammer. often found near lasers.
 here is a field-tested ooblick recipe contributed by gls:
  cup cornstarch
  cup baking soda
 / cup water
 n drops of food coloring
 this recipe isn't quite as non-newtonian as a pure cornstarch
 ooblick, but has an appropriately slimy feel.
 some, however, insist that the notion of an ooblick *recipe*
 is far too mechanical, and that it is best to add the water in
 small increments so that the various mixed states the cornstarch
 goes through as it *becomes* ooblick can be grokked in
 fullness by many hands. for optional ingredients of this
 experience, see the "{ceremonial chemicals}" section of
 {appendix b}.
:op: /op/ [irc] n. someone who is endowed with privileges on
 {irc}, not limited to a particular channel. these are generally
 people who are in charge of the irc server at their particular
 site. sometimes used interchangably with {chop}. compare
 {sysop}.
:open: n. abbreviation for `open (or left) parenthesis' —- used when
 necessary to eliminate oral ambiguity. to read aloud the lisp form
 (defun foo (x) (plus x )) one might say: "open defun foo, open
 eks close, open, plus eks one, close close."
:open deathtrap: n. abusive hackerism for the santa cruz
 operation's `open desktop' product, a motif-based graphical
 interface over their unix. the funniest part is that this was
 coined by sco's own developers…compare {aidx},
 {terminak}, {macintrash} {nominal semidestructor},
 {scumos}, {sun-stools}, {hp-sux}.
:open switch: [ibm: prob. from railroading] n. an unresolved
 question, issue, or problem.
:operating system:: [techspeak] n. (often abbreviated `os') the
 foundation software of a machine, of course; that which schedules
 tasks, allocates storage, and presents a default interface to the
 user between applications. the facilities an operating system
 provides and its general design philosophy exert an extremely
 strong influence on programming style and on the technical cultures
 that grow up around its host machines. hacker folklore has been
 shaped primarily by the {{unix}}, {{its}}, {{tops-}},
 {{tops-}}/{{twenex}}, {{waits}}, {{cp/m}}, {{ms-dos}}, and
 {{multics}} operating systems (most importantly by its and
:optical diff: n. see {vdiff}.
:optical grep: n. see {vgrep}.
:orange book: n. the u.s. government's standards document
 `trusted computer system evaluation criteria, dod standard
 .-std, december, ' which characterize secure computing
 architectures and defines levels a (most secure) through d
 (least). stock unixes are roughly c, and can be upgraded to
 about c without excessive pain. see also {{book titles}}.
:oriental food:: n. hackers display an intense tropism towards
 oriental cuisine, especially chinese, and especially of the spicier
 varieties such as szechuan and hunan. this phenomenon (which has
 also been observed in subcultures that overlap heavily with
 hackerdom, most notably science-fiction fandom) has never been
 satisfactorily explained, but is sufficiently intense that one can
 assume the target of a hackish dinner expedition to be the best
 local chinese place and be right at least three times out of four.
 see also {ravs}, {great-wall}, {stir-fried random},
 {laser chicken}, {yu-shiang whole fish}. thai, indian,
 korean, and vietnamese cuisines are also quite popular.
:orphan: [unix] n. a process whose parent has died; one inherited by
 `init()'. compare {zombie}.
:orphaned i-node: /or'f*nd i:'nohd/ [unix] n. . [techspeak] a
 file that retains storage but no longer appears in the directories
 of a filesystem. . by extension, a pejorative for any person
 serving no useful function within some organization, esp.
 {lion food} without subordinates.
:orthogonal: [from mathematics] adj. mutually independent; well
 separated; sometimes, irrelevant to. used in a generalization of
 its mathematical meaning to describe sets of primitives or
 capabilities that, like a vector basis in geometry, span the
 entire `capability space' of the system and are in some sense
 non-overlapping or mutually independent. for example, in
 architectures such as the pdp- or vax where all or nearly all
 registers can be used interchangeably in any role with respect to
 any instruction, the register set is said to be orthogonal. or, in
 logic, the set of operators `not' and `or' is orthogonal,
 but the set `nand', `or', and `not' is not (because any
 one of these can be expressed in terms of the others). also used
 in comments on human discourse: "this may be orthogonal to the
 discussion, but…."
:os: /o-s/ . [operating system] n. an abbreviation heavily used in email,
 occasionally in speech. . n.,obs. on its, an output spy. see
 "{os and jedgar}" (in {appendix a}).
:os/: /o s too/ n. the anointed successor to ms-dos for intel
 - and -based micros; proof that ibm/microsoft couldn't get it
 right the second time, either. mentioning it is usually good for a
 cheap laugh among hackers —- the design was so {baroque}, and
 the implementation of .x so bad, that  years after introduction
 you could still count the major {app}s shipping for it on the
 fingers of two hands —- in unary. often called `half-an-os'. on
 january , , microsoft announced that it was dropping its os/
 development to concentrate on windows, leaving the os entirely in
 the hands of ibm; on january  they claimed the media had got the
 story wrong, but were vague about how. it looks as though os/ is
 moribund. see {vaporware}, {monstrosity}, {cretinous},
 {second-system effect}.
:out-of-band: [from telecommunications and network theory] adj.
 . in software, describes values of a function which are not in its
 `natural' range of return values, but are rather signals that
 some kind of exception has occurred. many c functions, for
 example, return either a nonnegative integral value, or indicate
 failure with an out-of-band return value of -. compare
 {hidden flag}, {green bytes}. . also sometimes used to
 describe what communications people call `shift characters',
 like the esc that leads control sequences for many terminals, or
 the level shift indicators in the old -bit baudot codes. . in
 personal communication, using methods other than email, such as
 telephones or {snail-mail}.
:overflow bit: n. . [techspeak] on some processors, an attempt to
 calculate a result too large for a register to hold causes a
 particular {flag} called an {overflow bit} to be set.
 . hackers use the term of human thought too. "well, the {{ada}}
 description was {baroque} all right, but i could hack it ok until
 they got to the exception handling … that set my overflow bit."
 . the hypothetical bit that will be set if a hacker doesn't get to
 make a trip to the room of porcelain fixtures: "i'd better process
 an internal interrupt before the overflow bit gets set".
:overflow pdl: [mit] n. the place where you put things when your
 {pdl} is full. if you don't have one and too many things get
 pushed, you forget something. the overflow pdl for a person's
 memory might be a memo pad. this usage inspired the following
 doggerel:
hey, diddle, diddle
the overflow pdl
to get a little more stack;
if that's not enough
then you lose it all,
and have to pop all the way back.
—the great quux
 the term {pdl} seems to be primarily an mitism; outside mit this
 term would logically be replaced by `overflow {stack}', but
 the editors have heard no report of the latter term actually being
 in use.
:overrun: n. . [techspeak] term for a frequent consequence of data
 arriving faster than it can be consumed, esp. in serial line
 communications. for example, at  baud there is almost exactly
 one character per millisecond, so if your {silo} can hold only
 two characters and the machine takes longer than  msec to get to
 service the interrupt, at least one character will be lost.
 . also applied to non-serial-i/o communications. "i forgot to pay
 my electric bill due to mail overrun." "sorry, i got four phone
 calls in  minutes last night and lost your message to overrun."
 when {thrash}ing at tasks, the next person to make a request
 might be told "overrun!" compare {firehose syndrome}. . more
 loosely, may refer to a {buffer overflow} not necessarily
 related to processing time (as in {overrun screw}).
:overrun screw: [c programming] n. a variety of {fandango on
 core} produced by scribbling past the end of an array (c
 implementations typically have no checks for this error). this is
 relatively benign and easy to spot if the array is static; if it is
 auto, the result may be to {smash the stack} —- often resulting
 in {heisenbug}s of the most diabolical subtlety. the term
 `overrun screw' is used esp. of scribbles beyond the end of
 arrays allocated with `malloc()'; this typically trashes the
 allocation header for the next block in the {arena}, producing
 massive lossage within malloc and often a core dump on the next
 operation to use `stdio()' or `malloc()' itself. see
 {spam}, {overrun}; see also {memory leak}, {memory
 smash}, {aliasing bug}, {precedence lossage}, {fandango on
 core}, {secondary damage}.
:p.o.d.: /p-o-d/ acronym for `piece of data' (as opposed to a
code section). usage: pedantic and rare. see also {pod}.
:padded cell: n. where you put {luser}s so they can't hurt
 anything. a program that limits a luser to a carefully restricted
 subset of the capabilities of the host system (for example, the
 `rsh()' utility on usg unix). note that this is different
 from an {iron box} because it is overt and not aimed at
 enforcing security so much as protecting others (and the luser)
 from the consequences of the luser's boundless na"ivet'e (see
 {na"ive}). also `padded cell environment'.
:page in: [mit] vi. . to become aware of one's surroundings again
after having paged out (see {page out}). usually confined to
the sarcastic comment: "eric pages in. film at ." see
{film at }. . syn. `swap in'; see {swap}.
:page out: [mit] vi. . to become unaware of one's surroundings
temporarily, due to daydreaming or preoccupation. "can you repeat
that? i paged out for a minute." see {page in}. compare
{glitch}, {thinko}. . syn. `swap out'; see {swap}.
:pain in the net: n. a {flamer}.
:paper-net: n. hackish way of referring to the postal service,
 analogizing it to a very slow, low-reliability network. usenet
 {sig block}s not uncommonly include a "paper-net:" header just
 before the sender's postal address; common variants of this are
 "papernet" and "p-net". compare {voice-net}, {snail-mail}.
:param: /p*-ram'/ n. shorthand for `parameter'. see also
 {parm}; compare {arg}, {var}.
:parc: n. see {xerox parc}.
:parent message: n. see {followup}.
:parity errors: pl.n. little lapses of attention or (in more severe
 cases) consciousness, usually brought on by having spent all night
 and most of the next day hacking. "i need to go home and crash;
 i'm starting to get a lot of parity errors." derives from a
 relatively common but nearly always correctable transient error in
 ram hardware.
:parkinson's law of data: prov. "data expands to fill the space
 available for storage"; buying more memory encourages the use of
 more memory-intensive techniques. it has been observed over the
 last  years that the memory usage of evolving systems tends to
 double roughly once every  months. fortunately, memory density
 available for constant dollars tends to double about once every
  months (see {moore's law}); unfortunately, the laws of
 physics guarantee that the latter cannot continue indefinitely.
:parm: /parm/ n. further-compressed form of {param}. this term
 is an ibmism, and written use is almost unknown outside ibm
 shops; spoken /parm/ is more widely distributed, but the synonym
 {arg} is favored among hackers. compare {arg}, {var}.
:parse: [from linguistic terminology] vt. . to determine the
 syntactic structure of a sentence or other utterance (close to the
 standard english meaning). "that was the one i saw you." "i
 can't parse that." . more generally, to understand or
 comprehend. "it's very simple; you just kretch the glims and then
 aos the zotz." "i can't parse that." . of fish, to have to
 remove the bones yourself. "i object to parsing fish", means "i
 don't want to get a whole fish, but a sliced one is okay". a
 `parsed fish' has been deboned. there is some controversy over
 whether `unparsed' should mean `bony', or also mean
 `deboned'.
:pascal:: n. an algol-descended language designed by niklaus wirth
 on the cdc  around — as an instructional tool for
 elementary programming. this language, designed primarily to keep
 students from shooting themselves in the foot and thus extremely
 restrictive from a general-purpose-programming point of view, was
 later promoted as a general-purpose tool and, in fact, became the
 ancestor of a large family of languages including modula- and
 {{ada}} (see also {bondage-and-discipline language}). the
 hackish point of view on pascal was probably best summed up by a
 devastating (and, in its deadpan way, screamingly funny)  paper
 by brian kernighan (of {k&r} fame) entitled "why pascal is
 not my favorite programming language", which was turned down by the
 technical journals but circulated widely via photocopies. it was
 eventually published in "comparing and assessing programming
 languages", edited by alan feuer and narain gehani (prentice-hall,
 ). part of his discussion is worth repeating here, because its
 criticisms are still apposite to pascal itself after ten years of
 improvement and could also stand as an indictment of many other
 bondage-and-discipline languages. at the end of a summary of the
 case against pascal, kernighan wrote:
 . there is no escape
 this last point is perhaps the most important. the language is
 inadequate but circumscribed, because there is no way to escape its
 limitations. there are no casts to disable the type-checking when
 necessary. there is no way to replace the defective run-time
 environment with a sensible one, unless one controls the compiler
 that defines the "standard procedures". the language is closed.
 people who use pascal for serious programming fall into a fatal
 trap. because the language is impotent, it must be extended. but
 each group extends pascal in its own direction, to make it look
 like whatever language they really want. extensions for separate
 compilation, fortran-like common, string data types, internal
 static variables, initialization, octal numbers, bit operators,
 etc., all add to the utility of the language for one group but
 destroy its portability to others.
 i feel that it is a mistake to use pascal for anything much beyond
 its original target. in its pure form, pascal is a toy language,
 suitable for teaching but not for real programming.
 pascal has since been almost entirely displaced (by {c}) from the
 niches it had acquired in serious applications and systems
 programming, but retains some popularity as a hobbyist language in
 the ms-dos and macintosh worlds.
:pastie: /pay'stee/ n. an adhesive-backed label designed to be
 attached to a key on a keyboard to indicate some non-standard
 character which can be accessed through that key. pasties are
 likely to be used in apl environments, where almost every key is
 associated with a special character. a pastie on the r key, for
 example, would remind the user that it is used to generate the rho
 character. the term properly refers to nipple-concealing devices
 formerly worn by strippers in concession to indecent-exposure
 laws; compare {tits on a keyboard}.
:patch: . n. a temporary addition to a piece of code, usually as a
 {quick-and-dirty} remedy to an existing bug or misfeature. a
 patch may or may not work, and may or may not eventually be
 incorporated permanently into the program. distinguished from a
 {diff} or {mod} by the fact that a patch is generated by more
 primitive means than the rest of the program; the classical
 examples are instructions modified by using the front panel
 switches, and changes made directly to the binary executable of a
 program originally written in an {hll}. compare {one-line
 fix}. . vt. to insert a patch into a piece of code. . [in the
 unix world] n. a {diff} (sense ). . a set of modifications to
 binaries to be applied by a patching program. ibm operating
 systems often receive updates to the operating system in the form
 of absolute hexadecimal patches. if you have modified your os, you
 have to disassemble these back to the source. the patches might
 later be corrected by other patches on top of them (patches were
 said to "grow scar tissue"). the result was often a convoluted
 {patch space} and headaches galore. . [unix] the
 `patch()' program, written by larry wall, which automatically
 applies a patch (sense ) to a set of source code.
 there is a classic story of a {tiger team} penetrating a secure
 military computer that illustrates the danger inherent in binary
 patches (or, indeed, any that you can't —- or don't —- inspect
 and examine before installing). they couldn't find any {trap
 door}s or any way to penetrate security of ibm's os, so they made a
 site visit to an ibm office (remember, these were official military
 types who were purportedly on official business), swiped some ibm
 stationery, and created a fake patch. the patch was actually the
 trapdoor they needed. the patch was distributed at about the right
 time for an ibm patch, had official stationery and all accompanying
 documentation, and was dutifully installed. the installation
 manager very shortly thereafter learned something about proper
 procedures.
:patch space: n. an unused block of bits left in a binary so that
 it can later be modified by insertion of machine-language
 instructions there (typically, the patch space is modified to
 contain new code, and the superseded code is patched to contain a
 jump or call to the patch space). the widening use of hlls has
 made this term rare; it is now primarily historical outside ibm
 shops. see {patch} (sense ), {zap} (sense ), {hook}.
:path: n. . a {bang path} or explicitly routed {{internet
 address}}; a node-by-node specification of a link between two
 machines. . [unix] a filename, fully specified relative to the
 root directory (as opposed to relative to the current directory;
 the latter is sometimes called a `relative path'). this is also
 called a `pathname'. . [unix and ms-dos] the `search
 path', an environment variable specifying the directories in which
 the {shell} (command.com, under ms-dos) should look for commands.
 other, similar constructs abound under unix (for example, the
 c preprocessor has a `search path' it uses in looking for
 `#include' files).
:pathological: adj. . [scientific computation] used of a data set
 that is grossly atypical of normal expected input, esp. one that
 exposes a weakness or bug in whatever algorithm one is using. an
 algorithm that can be broken by pathological inputs may still be
 useful if such inputs are very unlikely to occur in practice.
 . when used of test input, implies that it was purposefully
 engineered as a worst case. the implication in both senses is that
 the data is spectacularly ill-conditioned or that someone had to
 explicitly set out to break the algorithm in order to come up with
 such a crazy example. . also said of an unlikely collection of
 circumstances. "if the network is down and comes up halfway
 through the execution of that command by root, the system may
 just crash." "yes, but that's a pathological case." often used
 to dismiss the case from discussion, with the implication that the
 consequences are acceptable since that they will happen so
 infrequently (if at all) that there is no justification for
 going to extra trouble to handle that case (see sense ).
:payware: /pay'weir/ n. commercial software. oppose {shareware}
 or {freeware}.
:pbd: /p-b-d/ [abbrev. of `programmer brain damage'] n. applied
 to bug reports revealing places where the program was obviously
 broken by an incompetent or short-sighted programmer. compare
 {ubd}; see also {brain-damaged}.
:pc-ism: /p-c-izm/ n. a piece of code or coding technique that
 takes advantage of the unprotected single-tasking environment in
 ibm pcs and the like, e.g., by busy-waiting on a hardware register,
 direct diddling of screen memory, or using hard timing loops.
 compare {ill-behaved}, {vaxism}, {unixism}. also,
 `pc-ware' n., a program full of pc-isms on a machine with a more
 capable operating system. pejorative.
:pd: /p-d/ adj. common abbreviation for `public domain', applied
 to software distributed over {usenet} and from internet archive
 sites. much of this software is not in fact public domain in
 the legal sense but travels under various copyrights granting
 reproduction and use rights to anyone who can {snarf} a copy. see
 {copyleft}.
:pdl: /pid'l/ or /puhd'l/ [abbreviation for `push down list']
 . n. in its days, the preferred mitism for {stack}. see
 {overflow pdl}. . n. dave lebling, one of the co-authors of
 {zork}; (his {network address} on the its machines was at one
 time pdl@dms). . n. `program design language'. any of a large
 class of formal and profoundly useless pseudo-languages in which
 {management} forces one to design programs. {management}
 often expects it to be maintained in parallel with the code. see
 also {{flowchart}}. . v. to design using a program design
 language. "i've been pdling so long my eyes won't focus beyond 
 feet." . n. `page description language'. refers to any language
 which is used to control a graphics device, usually a laserprinter.
 the most common example, is of course, adobe's {postscript}
 language, but there are many others, such as xerox interpress,
 etc.
:pdp-: [programmed data processor model ] n. the machine that
 made timesharing real. it looms large in hacker folklore because
 of its adoption in the mid-s by many university computing
 facilities and research labs, including the mit ai lab, stanford,
 and cmu. some aspects of the instruction set (most notably the
 bit-field instructions) are still considered unsurpassed. the 
 was eventually eclipsed by the vax machines (descendants of the
 pdp-) when dec recognized that the  and vax product lines were
 competing with each other and decided to concentrate its software
 development effort on the more profitable vax. the machine was
 finally dropped from dec's line in , following the failure of
 the jupiter project at dec to build a viable new model. (some
 attempts by other companies to market clones came to nothing; see
 {foonly}) this event spelled the doom of {{its}} and the
 technical cultures that had spawned the original jargon file, but
 by mid- it had become something of a badge of honorable
 old-timerhood among hackers to have cut one's teeth on a pdp-.
 see {{tops-}}, {{its}}, {aos}, {blt}, {ddt}, {dpb},
 {exch}, {hakmem}, {jfcl}, {ldb}, {pop}, {push},
 {appendix a}.
:pdp-: n. the most famous computer that never was. {pdp-}
 computers running the {{tops-}} operating system were labeled
 `decsystem-' as a way of differentiating them from the pdp-.
 later on, those systems running {tops-} were labeled
 `decsystem-' (the block capitals being the result of a lawsuit
 brought against dec by singer, which once made a computer called
 `system-'), but contrary to popular lore there was never a
 `pdp-'; the only difference between a  and a  was the
 operating system and the color of the paint. most (but not all)
 machines sold to run tops- were painted `basil blue', whereas
 most tops- machines were painted `chinese red' (often mistakenly
 called orange).
:peek: n.,vt. (and {poke}) the commands in most microcomputer
 basics for directly accessing memory contents at an absolute
 address; often extended to mean the corresponding constructs in any
 {hll} (peek reads memory, poke modifies it). much hacking on
 small, non-mmu micros consists of `peek'ing around memory, more
 or less at random, to find the location where the system keeps
 interesting stuff. long (and variably accurate) lists of such
 addresses for various computers circulate (see {{interrupt list,
 the}}). the results of `poke's at these addresses may be highly
 useful, mildly amusing, useless but neat, or (most likely) total
 {lossage} (see {killer poke}).
 since a {real operating system} provides useful, higher-level
 services for the tasks commonly performed with peeks and pokes on
 micros, and real languages tend not to encourage low-level memory
 groveling, a question like "how do i do a peek in c?" is
 diagnostic of the {newbie}. (of course, os kernels often have to
 do exactly this; a real c hacker would unhesitatingly, if
 unportably, assign an absolute address to a pointer variable and
 indirect through it.)
:pencil and paper: n. an archaic information storage and
 transmission device that works by depositing smears of graphite on
 bleached wood pulp. more recent developments in paper-based
 technology include improved `write-once' update devices which use
 tiny rolling heads similar to mouse balls to deposit colored
 pigment. all these devices require an operator skilled at
 so-called `handwriting' technique. these technologies are
 ubiquitous outside hackerdom, but nearly forgotten inside it. most
 hackers had terrible handwriting to begin with, and years of
 keyboarding tend to have encouraged it to degrade further. perhaps
 for this reason, hackers deprecate pencil-and-paper technology and
 often resist using it in any but the most trivial contexts. see
 also {appendix b}.
:peon: n. a person with no special ({root} or {wheel})
 privileges on a computer system. "i can't create an account on
 *foovax* for you; i'm only a peon there."
:percent-s: /per-sent' es'/ [from the code in c's `printf()'
library function used to insert an arbitrary string argument] n. an
unspecified person or object. "i was just talking to some
percent-s in administration." compare {random}.
:perf: /perf/ n. see {chad} (sense ). the term `perfory'
/per'f*-ree/ is also heard. the term {perf} may also refer to
the preforations themselves, rather than the chad they produce when
torn.
:perfect programmer syndrome: n. arrogance; the egotistical
 conviction that one is above normal human error. most frequently
 found among programmers of some native ability but relatively
 little experience (especially new graduates; their perceptions may
 be distorted by a history of excellent performance at solving {toy
 problem}s). "of course my program is correct, there is no need to
 test it." "yes, i can see there may be a problem here, but
 *i'll* never type `rm -r /' while in {root}."
:perl: /perl/ [practical extraction and report language, a.k.a
 pathologically eclectic rubbish lister] n. an interpreted language
 developed by larry wall <lwall@jpl.nasa.gov>, author of
 `patch()' and `rn()') and distributed over usenet.
 superficially resembles `awk()', but is much hairier (see
 {awk}). unix sysadmins, who are almost always incorrigible
 hackers, increasingly consider it one of the {languages of
 choice}. perl has been described, in a parody of a famous remark
 about `lex()', as the "swiss-army chainsaw" of unix
 programming.
:pessimal: /pes'im-l/ [latin-based antonym for `optimal'] adj.
 maximally bad. "this is a pessimal situation." also `pessimize'
 vt. to make as bad as possible. these words are the obvious
 latin-based antonyms for `optimal' and `optimize', but for some
 reason they do not appear in most english dictionaries, although
 `pessimize' is listed in the oed.
:pessimizing compiler: /pes'*-mi:z`ing k*m-pi:l'r/ [antonym of
 `optimizing compiler'] n. a compiler that produces object code that
 is worse than the straightforward or obvious hand translation. the
 implication is that the compiler is actually trying to optimize the
 program, but through excessive cleverness is doing the opposite. a
 few pessimizing compilers have been written on purpose, however, as
 pranks or burlesques.
:peta-: /pe't*/ [si] pref. see {{quantifiers}}.
:petscii: /pet'skee/ [abbreviation of pet ascii] n. the variation
 (many would say perversion) of the {{ascii}} character set used by
 the commodore business machines pet series of personal computers
 and the later commodore c, c, and c machines. the petscii
 set used left-arrow and up-arrow (as in old-style ascii) instead of
 underscore and caret, placed the unshifted alphabet at positions
 —, put the shifted alphabet at positions —, and added
 graphics characters.
:phase: . n. the phase of one's waking-sleeping schedule with
 respect to the standard -hour cycle. this is a useful concept
 among people who often work at night and/or according to no fixed
 schedule. it is not uncommon to change one's phase by as much as 
 hours per day on a regular basis. "what's your phase?" "i've
 been getting in about  p.m. lately, but i'm going to {wrap
 around} to the day schedule by friday." a person who is roughly
  hours out of phase is sometimes said to be in `night mode'.
 (the term `day mode' is also (but less frequently) used, meaning
 you're working  to  (or, more likely,  to ).) the act of
 altering one's cycle is called `changing phase'; `phase
 shifting' has also been recently reported from caltech.
 . `change phase the hard way': to stay awake for a very long
 time in order to get into a different phase. . `change phase
 the easy way': to stay asleep, etc. however, some claim that
 either staying awake longer or sleeping longer is easy, and that it
 is *shortening* your day or night that's hard (see {wrap
 around}). the `jet lag' that afflicts travelers who cross many
 time-zone boundaries may be attributed to two distinct causes: the
 strain of travel per se, and the strain of changing phase. hackers
 who suddenly find that they must change phase drastically in a
 short period of time, particularly the hard way, experience
 something very like jet lag without traveling.
:phase of the moon: n. used humorously as a random parameter on which
 something is said to depend. sometimes implies unreliability of
 whatever is dependent, or that reliability seems to be dependent on
 conditions nobody has been able to determine. "this feature
 depends on having the channel open in mumble mode, having the foo
 switch set, and on the phase of the moon."
 true story: once upon a time there was a bug that really did depend
 on the phase of the moon. there is a little subroutine that had
 traditionally been used in various programs at mit to calculate an
 approximation to the moon's true phase. gls incorporated this
 routine into a lisp program that, when it wrote out a file, would
 print a timestamp line almost  characters long. very
 occasionally the first line of the message would be too long and
 would overflow onto the next line, and when the file was later read
 back in the program would {barf}. the length of the first line
 depended on both the precise date and time and the length of the
 phase specification when the timestamp was printed, and so the bug
 literally depended on the phase of the moon!
 the first paper edition of the jargon file (steele-) included
 an example of one of the timestamp lines that exhibited this bug,
 but the typesetter `corrected' it. this has since been
 described as the phase-of-the-moon-bug bug.
:phase-wrapping: [mit] n. syn. {wrap around}, sense .
:phreaking: /freek'ing/ [from `phone phreak'] n. . the art and
 science of cracking the phone network (so as, for example, to make
 free long-distance calls). . by extension, security-cracking in
 any other context (especially, but not exclusively, on
 communications networks) (see {cracking}).
 at one time phreaking was a semi-respectable activity among
 hackers; there was a gentleman's agreement that phreaking as an
 intellectual game and a form of exploration was ok, but serious
 theft of services was taboo. there was significant crossover
 between the hacker community and the hard-core phone phreaks who
 ran semi-underground networks of their own through such media as
 the legendary `tap newsletter'. this ethos began to break
 down in the mid-s as wider dissemination of the techniques put
 them in the hands of less responsible phreaks. around the same
 time, changes in the phone network made old-style technical
 ingenuity less effective as a way of hacking it, so phreaking came
 to depend more on overtly criminal acts such as stealing phone-card
 numbers. the crimes and punishments of gangs like the ` group'
 turned that game very ugly. a few old-time hackers still phreak
 casually just to keep their hand in, but most these days have
 hardly even heard of `blue boxes' or any of the other
 paraphernalia of the great phreaks of yore.
:pico-: [si: a quantifier
meaning * ^-]
pref. smaller than {nano-}; used in the same rather loose
connotative way as {nano-} and {micro-}. this usage is not yet
common in the way {nano-} and {micro-} are, but should be
instantly recognizable to any hacker. see also {{quantifiers}},
{micro-}.
:pig, run like a: v. to run very slowly on given hardware, said of
 software. distinct from {hog}.
:pilot error: [sun: from aviation] n. a user's misconfiguration or
 misuse of a piece of software, producing apparently buglike results
 (compare {ubd}). "joe luser reported a bug in sendmail that
 causes it to generate bogus headers." "that's not a bug, that's
 pilot error. his `sendmail.cf' is hosed."
:ping: [from the tcp/ip acronym `packet internet groper', prob.
 originally contrived to match the submariners' term for a sonar
 pulse] . n. slang term for a small network message (icmp echo)
 sent by a computer to check for the presence and aliveness of
 another. occasionally used as a phone greeting. see {ack},
 also {enq}. . vt. to verify the presence of. . vt. to get
 the attention of. from the unix command `ping()' that sends
 an icmp echo packet to another host. . vt. to send a message to
 all members of a {mailing list} requesting an {ack} (in order
 to verify that everybody's addresses are reachable). "we haven't
 heard much of anything from geoff, but he did respond with an ack
 both times i pinged jargon-friends." . n. a quantum packet of
 happiness. people who are very happy tend to exude pings;
 furthermore, one can intentionally create pings and aim them at a
 needy party (e.g. a depressed person). this sense of ping may
 appear as an exclamation; "ping!" (i'm happy; i am emitting a
 quantum of happiness; i have been struck by a quantum of
 happiness). the form "pingfulness", which is used to describe
 people who exude pings, also occurs. (in the standard abuse of
 language, "pingfulness" can also be used as an exclamation, in
 which case it's a much stronger exclamation than just "ping"!).
 oppose {blargh}.
 the funniest use of `ping' to date was described in january  by
 steve hayman on the usenet group comp.sys.next. he was trying
 to isolate a faulty cable segment on a tcp/ip ethernet hooked up to
 a next machine, and got tired of having to run back to his console
 after each cabling tweak to see if the ping packets were getting
 through. so he used the sound-recording feature on the next, then
 wrote a script that repeatedly invoked `ping()', listened for
 an echo, and played back the recording on each returned packet.
 result? a program that caused the machine to repeat, over and
 over, "ping … ping … ping …" as long as the
 network was up. he turned the volume to maximum, ferreted through
 the building with one ear cocked, and found a faulty tee connector
 in no time.
:pink-shirt book: `the peter norton programmer's guide to the ibm
 pc'. the original cover featured a picture of peter norton with a
 silly smirk on his face, wearing a pink shirt. perhaps in
 recognition of this usage, the current edition has a different
 picture of norton wearing a pink shirt. see also {{book titles}}.
:pip: /pip/ [peripheral interchange program] vt.,obs. to copy;
 from the program pip on cp/m, rsx-, rsts/e, tops-, and os/
 (derived from a utility on the pdp-) that was used for file
 copying (and in os/ and rt- for just about every other file
 operation you might want to do). it is said that when the program
 was originated, during the development of the pdp- in , it was
 called atlatl (`anything, lord, to anything, lord'; this played on
 the nahuatl word `atlatl' for a spear-thrower, with connotations
 of utility and primitivity that were no doubt quite intentional).
:pistol: [ibm] n. a tool that makes it all too easy for you to
shoot yourself in the foot. "unix `rm *' makes such a nice
pistol!"
:pizza box: [sun] n. the largish thin box housing the electronics
in (especially sun) desktop workstations, so named because of its
size and shape and the dimpled pattern that looks like air holes.
 two meg single-platter removable disk packs used to be called
 pizzas, and the huge drive they were stuck into was referred to as
 a pizza oven. it's an index of progress that in the old days just
 the disk was pizza-sized, while now the entire computer is.
:pizza, ansi standard: /an'see stan'd*rd peet'z*/ [cmu] pepperoni
 and mushroom pizza. coined allegedly because most pizzas ordered
 by cmu hackers during some period leading up to mid- were of
 that flavor. see also {rotary debugger}; compare {tea, iso
 standard cup of}.
:plaid screen: [xerox parc] n. a `special effect' which occurs
 when certain kinds of {memory smash}es overwrite the control
 blocks or image memory of a bit-mapped display. the term "salt &
 pepper" may refer to a different pattern of similar origin.
 though the term as coined at parc refers to the result of an error,
 some of the {x} demos induce plaid-screen effects deliberately
 as a {display hack}.
:plain-ascii: /playn-as'kee/ syn. {flat-ascii}.
:plan file: [unix] n. on systems that support {finger}, the
 `.plan' file in a user's home directory is displayed when the user
 is fingered. this feature was originally intended to be used to
 keep potential fingerers apprised of one's location and near-future
 plans, but has been turned almost universally to humorous and
 self-expressive purposes (like a {sig block}). see {hacking x
 for y}.
:platinum-iridium: adj. standard, against which all others of the
 same category are measured. usage: silly. the notion is that one
 of whatever it is has actually been cast in platinum-iridium alloy
 and placed in the vault beside the standard kilogram at the
 international bureau of weights and measures near paris. (from
  to , the meter was defined to be the distance between two
 scratches in a platinum-iridium bar kept in that vault —- this
 replaced an earlier definition as ^(-) times the distance
 between the north pole and the equator along a meridian through
 paris; unfortunately, this had been based on an inexact value of
 the circumference of the earth. from  to  it was defined
 to be . wavelengths of the orange-red line of krypton-
 propagating in a vacuum. it is now defined as the length of the
 path traveled by light in a vacuum in the time interval of
 /,, of a second. the kilogram is now the only unit of
 measure officially defined in terms of a unique artifact.) "this
 garbage-collection algorithm has been tested against the
 platinum-iridium cons cell in paris." compare {golden}.
:playpen: [ibm] n. a room where programmers work. compare {salt
 mines}.
:playte: /playt/  bits, by analogy with {nybble} and
{{byte}}. usage: rare and extremely silly. see also {dynner}
and {crumb}.
:plingnet: /pling'net/ n. syn. {uucpnet}. also see
{{commonwealth hackish}}, which uses `pling' for {bang} (as in
{bang path}).
:plokta: /plok't*/ [acronym for `press lots of keys to abort']
 v. to press random keys in an attempt to get some response from
 the system. one might plokta when the abort procedure for a
 program is not known, or when trying to figure out if the system is
 just sluggish or really hung. plokta can also be used while trying
 to figure out any unknown key sequence for a particular operation.
 someone going into `plokta mode' usually places both hands flat
 on the keyboard and presses down, hoping for some useful
 response.
 a slightly more diected form of plokta can often be seen in mail
 messages or usenet articles from new users — the text might end
 with
q
quit
:q
end
x
exit
help
 as the user vainly tries to find the right exit sequence, with the
 incorrect tries piling up at the end of the message….
:plonk: [usenet: possibly influenced by british slang `plonk' for
 cheap booze] the sound a {newbie} makes as he falls to the bottom
 of a {kill file}. used almost exclusively in the {newsgroup}
 talk.bizarre, this term (usually written "*plonk*") is a
 form of public ridicule.
:plugh: /ploogh/ [from the {advent} game] v. see {xyzzy}.
:plumbing: [unix] n. term used for {shell} code, so called
 because of the prevalence of `pipelines' that feed the output of
 one program to the input of another. under unix, user utilities
 can often be implemented or at least prototyped by a suitable
 collection of pipelines and temp-file grinding encapsulated in a
 shell script; this is much less effort than writing c every time,
 and the capability is considered one of unix's major winning
 features. a few other oss such as ibm's vm/cms support similar
 facilities. esp. used in the construction `hairy plumbing'
 (see {hairy}). "you can kluge together a basic spell-checker
 out of `sort()', `comm()', and `tr()' with a
 little plumbing." see also {tee}.
:pm: /p-m/ . v. (from `preventive maintenance') to bring
 down a machine for inspection or test purposes; see {scratch
 monkey}. . n. abbrev. for `presentation manager', an
 {elephantine} os/ graphical user interface. see also
 {provocative maintenance}.
:pnambic: /p*-nam'bik/ [acronym from the scene in the film
 version of `the wizard of oz' in which the true nature of the
 wizard is first discovered: "pay no attention to the man behind
 the curtain."] . a stage of development of a process or function
 that, owing to incomplete implementation or to the complexity of
 the system, requires human interaction to simulate or replace some
 or all of the actions, inputs, or outputs of the process or
 function. . of or pertaining to a process or function whose
 apparent operations are wholly or partially falsified.
 . requiring {prestidigitization}.
 the ultimate pnambic product was "dan bricklin's demo", a program
 which supported flashy user-interface design prototyping. there is
 a related maxim among hackers: "any sufficiently advanced
 technology is indistinguishable from a rigged demo." see
 {magic}, sense , for illumination of this point.
:pod: [allegedly from abbreviation pod for `prince of darkness'] n. a
 diablo  (or, latterly, any letter-quality impact printer). from
 the dec- podtype program used to feed formatted text to it.
 see also {p.o.d.}
:point-and-drool interface: n. parody of the techspeak term
 `point-and-shoot interface', describing a windows, icons, and
 mice-based interface such as is found on the macintosh. the
 implication, of course, is that such an interface is only suitable
 for idiots. see {for the rest of us}, {wimp environment},
 {macintrash}, {drool-proof paper}. also `point-and-grunt
 interface'.
:poke: n.,vt. see {peek}.
:poll: v.,n. . [techspeak] the action of checking the status of an
 input line, sensor, or memory location to see if a particular
 external event has been registered. . to repeatedly call or check
 with someone: "i keep polling him, but he's not answering his
 phone; he must be swapped out." . to ask. "lunch? i poll for
 a takeout order daily."
:polygon pusher: n. a chip designer who spends most of his or her
 time at the physical layout level (which requires drawing
 *lots* of multi-colored polygons). also `rectangle
 slinger'.
:pom: /p-o-m/ n. common abbreviation for {phase of the moon}. usage:
 usually in the phrase `pom-dependent', which means {flaky}.
:pop: [from the operation that removes the top of a stack, and the
 fact that procedure return addresses are saved on the stack] (also
 capitalized `pop' /pop/) . vt. to remove something from a
 {stack} or {pdl}. if a person says he/she has popped
 something from his stack, that means he/she has finally finished
 working on it and can now remove it from the list of things hanging
 overhead. . when a discussion gets to too deep a level of detail
 so that the main point of the discussion is being lost, someone
 will shout "pop!", meaning "get back up to a higher level!"
 the shout is frequently accompanied by an upthrust arm with a
 finger pointing to the ceiling.
:popj: /pop'j/ [from a {pdp-} return-from-subroutine
instruction] n.,v. to return from a digression. by verb doubling,
"popj, popj" means roughly "now let's see, where were we?"
see {rti}.
:posing: n. on a {mud}, the use of `:' or an equivalent
 command to announce to other players that one is taking a certain
 physical action that has no effect on the game (it may, however,
 serve as a social signal or propaganda device that induces other
 people to take game actions). for example, if one's character name
 is firechild, one might type `: looks delighted at the idea and
 begins hacking on the nearest terminal' to broadcast a message that
 says "firechild looks delighted at the idea and begins hacking on
 the nearest terminal". see {rl}.
:post: v. to send a message to a {mailing list} or {newsgroup}.
 distinguished in context from `mail'; one might ask, for
 example: "are you going to post the patch or mail it to known
 users?"
:postcardware: n. {shareware} that borders on {freeware}, in that the
 author requests only that satisfied users send a postcard of their
 home town or something. (this practice, silly as it might seem,
 serves to remind users that they are otherwise getting something for
 nothing, and may also be psychologically related to real estate
 "sales" in which $ changes hands just to keep the transaction from
 being a gift.)
:posting: n. noun corresp. to v. {post} (but note that
 {post} can be nouned). distinguished from a `letter' or ordinary
 {email} message by the fact that it is broadcast rather than
 point-to-point. it is not clear whether messages sent to a small
 mailing list are postings or email; perhaps the best dividing line
 is that if you don't know the names of all the potential
 recipients, it is a posting.
:postmaster: n. the email contact and maintenance person at a site
 connected to the internet or uucpnet. often, but not always, the
 same as the {admin}. the internet standard for electronic mail
 ({rfc}) requires each machine to have a `postmaster' address;
 usually it is aliased to this person.
:postscript: n. a groundbreaking page description language
 ({pdl}), based on work originally done by john gaffney at evans
 and sutherland in , evolving through `jam' (`john and martin',
 martin newell) at {xerox parc}, and finally implemented in its
 current form by john warnock et al. after he and chuck geschke
 founded adobe systems incorporated in . postscript gets its
 leverage by using a full programming language, rather than a series
 of low-level escape sequences, to describe an image to be printed
 on a laser printer or other output device (in this it parallels
 {emacs}, which exploited a similar insight about editing tasks).
 it is also noteworthy for implementing on-the fly rasterization,
 from bezier curve descriptions, of high-quality fonts at low (e.g.
  dpi) resolution (it was formerly believed that hand-tuned
 bitmap fonts were required for this task). hackers consider
 postscript to be among the most elegant hacks of all time, and the
 combination of technical merits and widespread availability has
 made postscript the language of choice for graphical output.
:pound on: vt. syn. {bang on}.
:power cycle: vt. (also, `cycle power' or just `cycle') to
 power off a machine and then power it on immediately, with the
 intention of clearing some kind of {hung} or {gronk}ed state.
 syn. { reset}; see also {big red switch}. compare
 {vulcan nerve pinch}, {bounce}, and {boot}, and see the
 ai koan in "{a selection of ai koans}" (in
 {appendix a}) about tom knight and the novice.
:power hit: n. a spike or drop-out in the electricity supplying
 your machine; a power {glitch}. these can cause crashes and
 even permanent damage to your machine(s).
:ppn: /p-p-n/, /pip'n/ [from `project-programmer number'] n. a
 user-id under {{tops-}} and its various mutant progeny at sail,
 bbn, compuserve, and elsewhere. old-time hackers from the pdp-
 era sometimes use this to refer to user ids on other systems as
 well.
:precedence lossage: /pre's*-dens los'*j/ [c programmers] n.
 coding error in an expression due to unexpected grouping of
 arithmetic or logical operators by the compiler. used esp. of
 certain common coding errors in c due to the nonintuitively low
 precedence levels of `&', `|', `^', `<<',
 and `>>' (for this reason, experienced c programmers
 deliberately forget the language's {baroque} precedence
 hierarchy and parenthesize defensively). can always be avoided by
 suitable use of parentheses. {lisp} fans enjoy pointing out
 that this can't happen in *their* favorite language, which
 eschews precedence entirely, requiring one to use explicit
 parentheses everywhere. see {aliasing bug}, {memory leak},
 {memory smash}, {smash the stack}, {fandango on core},
 {overrun screw}.
:prepend: /pree`pend'/ [by analogy with `append'] vt. to
 prefix. as with `append' (but not `prefix' or `suffix' as a
 verb), the direct object is always the thing being added and not
 the original word (or character string, or whatever). "if you
 prepend a semicolon to the line, the translation routine will pass
 it through unaltered."
:prestidigitization: /pres`t*-di`j*-ti:-zay'sh*n/ n. . the act
 of putting something into digital notation via sleight of hand.
 . data entry through legerdemain.
:pretty pictures: n. [scientific computation] the next step up from
 {numbers}. interesting graphical output from a program that may
 not have any sensible relationship to the system the program is
 intended to model. good for showing to {management}.
:prettyprint: /prit'ee-print/ (alt. `pretty-print') v. . to
 generate `pretty' human-readable output from a {hairy} internal
 representation; esp. used for the process of {grind}ing (sense )
 lisp code. . to format in some particularly slick and
 nontrivial way.
:pretzel key: [mac users] n. see {feature key}.
:prime time: [from tv programming] n. normal high-usage hours on a
timesharing system; the day shift. avoidance of prime time is a
major reason for {night mode} hacking.
:printing discussion: [parc] n. a protracted, low-level,
time-consuming, generally pointless discussion of something only
peripherally interesting to all.
:priority interrupt: [from the hardware term] n. describes any
 stimulus compelling enough to yank one right out of {hack mode}.
 classically used to describe being dragged away by an {so} for
 immediate sex, but may also refer to more mundane interruptions
 such as a fire alarm going off in the near vicinity. also called
 an {nmi} (non-maskable interrupt), especially in pc-land.
:profile: n. . a control file for a program, esp. a text file
 automatically read from each user's home directory and intended to
 be easily modified by the user in order to customize the program's
 behavior. used to avoid {hardcoded} choices. . [techspeak] a
 report on the amounts of time spent in each routine of a program,
 used to find and {tune} away the {hot spot}s in it. this sense
 is often verbed. some profiling modes report units other than time
 (such as call counts) and/or report at granularities other than
 per-routine, but the idea is similar.
:proglet: /prog'let/ [uk] n. a short extempore program written
 to meet an immediate, transient need. often written in basic,
 rarely more than a dozen lines long, and contains no subroutines.
 the largest amount of code that can be written off the top of one's
 head, that does not need any editing, and that runs correctly the
 first time (this amount varies significantly according to the
 language one is using). compare {toy program}, {noddy},
 {one-liner wars}.
:program: n. . a magic spell cast over a computer allowing it to
 turn one's input into error messages. . an exercise in
 experimental epistemology. . a form of art, ostensibly intended
 for the instruction of computers, which is nevertheless almost
 inevitably a failure if other programmers can't understand it.
:programmer's cheer: "shift to the left! shift to the right! pop
 up, push down! byte! byte! byte!" a joke so old it has hair on
 it.
:programming: n. . the art of debugging a blank sheet of paper (or,
 in these days of on-line editing, the art of debugging an empty
 file). . n. a pastime similar to banging one's head against a
 wall, but with fewer opportunities for reward. . n. the most fun
 you can have with your clothes on (although clothes are not
 mandatory).
:programming fluid: n. . coffee. . cola. . any caffeinacious
 stimulant. many hackers consider these essential for those
 all-night hacking runs. see {unleaded}, {wirewater}.
:propeller head: n. used by hackers, this is syn. with {computer
 geek}. non-hackers sometimes use it to describe all techies.
 prob. derives from sf fandom's tradition (originally invented by
 old-time fan ray faraday nelson) of propeller beanies as fannish
 insignia (though nobody actually wears them except as a joke).
:propeller key: [mac users] n. see {feature key}.
:proprietary: adj. . in {marketroid}-speak, superior; implies a
 product imbued with exclusive magic by the unmatched brilliance of
 the company's hardware or software designers. . in the language
 of hackers and users, inferior; implies a product not conforming to
 open-systems standards, and thus one that puts the customer at the
 mercy of a vendor able to gouge freely on service and upgrade
 charges after the initial sale has locked the customer in (that's
 assuming it wasn't too expensive in the first place).
:protocol: n. as used by hackers, this never refers to niceties
 about the proper form for addressing letters to the papal nuncio or
 the order in which one should use the forks in a russian-style
 place setting; hackers don't care about such things. it is used
 instead to describe any set of rules that allow different machines
 or pieces of software to coordinate with each other without
 ambiguity. so, for example, it does include niceties about the
 proper form for addressing packets on a network or the order in
 which one should use the forks in the dining philosophers problem.
 it implies that there is some common message format and an accepted
 set of primitives or commands that all parties involved understand,
 and that transactions among them follow predictable logical
 sequences. see also {handshaking}, {do protocol}.
:provocative maintenance: [common ironic mutation of `preventive
 maintenance'] n. actions performed upon a machine at regularly
 scheduled intervals to ensure that the system remains in a usable
 state. so called because it is all too often performed by a
 {field servoid} who doesn't know what he is doing; this results
 in the machine's remaining in an *un*usable state for an
 indeterminate amount of time. see also {scratch monkey}.
:prowler: [unix] n. a {daemon} that is run periodically (typically
 once a week) to seek out and erase {core} files, truncate
 administrative logfiles, nuke `lost+found' directories, and
 otherwise clean up the {cruft} that tends to pile up in the
 corners of a file system. see also {gfr}, {reaper},
 {skulker}.
:pseudo: /soo'doh/ [usenet: truncation of `pseudonym'] n. . an
 electronic-mail or {usenet} persona adopted by a human for
 amusement value or as a means of avoiding negative repercussions of
 one's net.behavior; a `nom de usenet', often associated with
 forged postings designed to conceal message origins. perhaps the
 best-known and funniest hoax of this type is {biff}.
 . notionally, a {flamage}-generating ai program simulating a
 usenet user. many flamers have been accused of actually being such
 entities, despite the fact that no ai program of the required
 sophistication yet exists. however, in  there was a famous
 series of forged postings that used a phrase-frequency-based
 travesty generator to simulate the styles of several well-known
 flamers; it was based on large samples of their back postings
 (compare {dissociated press}). a significant number of people
 were fooled by the forgeries, and the debate over their
 authenticity was settled only when the perpetrator came forward to
 publicly admit the hoax.
:pseudoprime: n. a backgammon prime (six consecutive occupied
 points) with one point missing. this term is an esoteric pun
 derived from a mathematical method that, rather than determining
 precisely whether a number is prime (has no divisors), uses a
 statistical technique to decide whether the number is `probably'
 prime. a number that passes this test is called a pseudoprime.
 the hacker backgammon usage stems from the idea that a pseudoprime
 is almost as good as a prime: it does the job of a prime until
 proven otherwise, and that probably won't happen.
:pseudosuit: /soo'doh-s[y]oot`/ n. a {suit} wannabee; a hacker
 who has decided that he wants to be in management or administration
 and begins wearing ties, sport coats, and (shudder!) suits
 voluntarily. it's his funeral. see also {lobotomy}.
:psychedelicware: /si:`k*-del'-ik-weir/ [uk] n. syn.
 {display hack}. see also {smoking clover}.
:psyton: /si:'ton/ [tmrc] n. the elementary particle carrying the
 sinister force. the probability of a process losing is
 proportional to the number of psytons falling on it. psytons are
 generated by observers, which is why demos are more likely to fail
 when lots of people are watching. [this term appears to have been
 largely superseded by {bogon}; see also {quantum bogodynamics}.
:pubic directory: [nyu] (also `pube directory' /pyoob'
 d*-rek't*-ree/) n. the `pub' (public) directory on a machine that
 allows {ftp} access. so called because it is the default
 location for {sex} (sense ). "i'll have the source in the
 pube directory by friday."
:puff: vt. to decompress data that has been crunched by huffman
 coding. at least one widely distributed huffman decoder program
 was actually *named* `puff', but these days it is usually
 packaged with the encoder. oppose {huff}.
:punched card:: alt. `punch card' [techspeak] n.obs. the signature
 medium of computing's {stone age}, now obsolescent outside of
 some ibm shops. the punched card actually predated computers
 considerably, originating in  as a control device for
 mechanical looms. the version patented by hollerith and used with
 mechanical tabulating machines in the  u.s. census was a piece
 of cardboard about  mm by  mm, designed to fit exactly in the
 currency trays used for that era's larger dollar bills.
 ibm (which originated as a tabulating-machine manufacturer) married
 the punched card to computers, encoding binary information as
 patterns of small rectangular holes; one character per column,
  columns per card. other coding schemes, sizes of card, and
 hole shapes were tried at various times.
 the -column width of most character terminals is a legacy of the
 ibm punched card; so is the size of the quick-reference cards
 distributed with many varieties of computers even today. see
 {chad}, {chad box}, {eighty-column mind}, {green card},
 {dusty deck}, {lace card}, {card walloper}.
:punt: [from the punch line of an old joke referring to american
 football: "drop back  yards and punt!"] v. . to give up,
 typically without any intention of retrying. "let's punt the
 movie tonight." "i was going to hack all night to get this
 feature in, but i decided to punt" may mean that you've decided
 not to stay up all night, and may also mean you're not ever even
 going to put in the feature. . more specifically, to give up on
 figuring out what the {right thing} is and resort to an
 inefficient hack. . a design decision to defer solving a
 problem, typically because one cannot define what is desirable
 sufficiently well to frame an algorithmic solution. "no way to
 know what the right form to dump the graph in is —- we'll punt
 that for now." . to hand a tricky implementation problem off
 to some other section of the design. "it's too hard to get the
 compiler to do that; let's punt to the runtime system."
:purple book: n. . the `system v interface definition'. the
 covers of the first editions were an amazingly nauseating shade of
 off-lavender. . syn. {wizard book}. see also {{book
 titles}}.
:purple wire: [ibm] n. wire installed by field engineers to work
 around problems discovered during testing or debugging. these are
 called `purple wires' even when (as is frequently the case) their
 actual physical color is yellow…. compare {blue wire},
 {purple wire}, and {red wire}.
:push: [from the operation that puts the current information on a
 stack, and the fact that procedure return addresses are saved on a
 stack] also push /push/ or pushj /push'j/ (the latter based on
 the pdp- procedure call instruction). . to put something onto a
 {stack} or {pdl}. if one says that something has been pushed
 onto one's stack, it means that the damoclean list of things
 hanging over ones's head has grown longer and heavier yet. this
 may also imply that one will deal with it *before* other
 pending items; otherwise one might say that the thing was `added
 to my queue'. . vi. to enter upon a digression, to save the
 current discussion for later. antonym of {pop}; see also
 {stack}, {pdl}.
:q-line: [irc] v. to ban a particular {irc} server from
 connecting to one's own; does to it what {k-line} does to an
 individual. since this is applied transitively, it has the effect
 of partitioning the irc network, which is generally a {bad
 thing}.
:quad: n. . two bits; syn. for {quarter}, {crumb},
 {tayste}. . a four-pack of anything (compare {hex}, sense ).
 . the rectangle or box glyph used in the apl language for various
 arcane purposes mostly related to i/o. former ivy-leaguers and
 oxbridge types are said to associate it with nostalgic memories of
 dear old university.
:quadruple bucky: n., obs. . on an mit {space-cadet keyboard},
 use of all four of the shifting keys (control, meta, hyper, and
 super) while typing a character key. . on a stanford or mit
 keyboard in {raw mode}, use of four shift keys while typing a
 fifth character, where the four shift keys are the control and meta
 keys on *both* sides of the keyboard. this was very difficult
 to do! one accepted technique was to press the left-control and
 left-meta keys with your left hand, the right-control and
 right-meta keys with your right hand, and the fifth key with your
 nose.
 quadruple-bucky combinations were very seldom used in practice,
 because when one invented a new command one usually assigned it to
 some character that was easier to type. if you want to imply that
 a program has ridiculously many commands or features, you can say
 something like: "oh, the command that makes it spin the tapes
 while whistling beethoven's fifth symphony is
 quadruple-bucky-cokebottle." see {double bucky}, {bucky
 bits}, {cokebottle}.
:quantifiers:: in techspeak and jargon, the standard metric
 prefixes used in the si (syst`eme international) conventions for
 scientific measurement have dual uses. with units of time or
 things that come in powers of , such as money, they retain their
 usual meanings of multiplication by powers of  = ^.
 but when used with bytes or other things that naturally come in
 powers of , they usually denote multiplication by powers of
 here are the si magnifying prefixes, along with the corresponding
 binary interpretations in common use:
 prefix decimal binary
 kilo- ^ ^ = ^ = ,
 mega- ^ ^ = ^ = ,,
 giga- ^ ^ = ^ = ,,,
 tera- ^ ^ = ^ = ,,,,
 peta- ^ ^ = ^ = ,,,,,
 exa- ^ ^ = ^ = ,,,,,,
 zetta- ^ ^ = ^ = ,,,,,,,
 yotta- ^ ^ = ^ = ,,,,,,,,
 here are the si fractional prefixes:
 *prefix decimal jargon usage*
 milli- ^- (seldom used in jargon)
 micro- ^- small or human-scale (see {micro-})
 nano- ^- even smaller (see {nano-})
 pico- ^- even smaller yet (see {pico-})
 femto- ^- (not used in jargon—-yet)
 atto- ^- (not used in jargon—-yet)
 zepto- ^- (not used in jargon—-yet)
 yocto- ^- (not used in jargon—-yet)
 the prefixes zetta-, yotta-, zepto-, and yocto- have been included
 in these tables purely for completeness and giggle value; they were
 adopted in  by the `th conference generale des poids et
 mesures'. the binary peta- and exa- loadings, though well
 established, are not in jargon use either —- yet. the prefix
 milli-, denoting multiplication by ^(-), has always
 been rare in jargon (there is, however, a standard joke about the
 `millihelen' —- notionally, the amount of beauty required to
 launch one ship). see the entries on {micro-}, {pico-}, and
 {nano-} for more information on connotative jargon use of these
 terms. `femto' and `atto' (which, interestingly, derive not
 from greek but from danish) have not yet acquired jargon loadings,
 though it is easy to predict what those will be once computing
 technology enters the required realms of magnitude (however, see
 {attoparsec}).
 there are, of course, some standard unit prefixes for powers of
 . in the following table, the `prefix' column is the
 international standard suffix for the appropriate power of ten; the
 `binary' column lists jargon abbreviations and words for the
 corresponding power of . the b-suffixed forms are commonly used
 for byte quantities; the words `meg' and `gig' are nouns which may
 (but do not always) pluralize with `s'.
 prefix decimal binary pronunciation
 kilo- k k, kb, /kay/
 mega- m m, mb, meg /meg/
 giga- g g, gb, gig /gig/,/jig/
 confusingly, hackers often use k or m as though they were suffix or
 numeric multipliers rather than a prefix; thus "k dollars", "m
 of disk space". this is also true (though less commonly) of g.
 note that the formal si metric prefix for  is `k'; some use
 this strictly, reserving `k' for multiplication by  (kb is
 `kilobytes').
 k, m, and g used alone refer to quantities of bytes; thus, g is
  gigabytes and `a k' is a kilobyte (compare mainstream use of
 `a g' as short for `a grand', that is, $). whether one
 pronounces `gig' with hard or soft `g' depends on what one thinks
 the proper pronunciation of `giga-' is.
 confusing  and  (or other powers of  and  close in
 magnitude) —- for example, describing a memory in units of
 k or k instead of k —- is a sure sign of the
 {marketroid}.
:quantum bogodynamics: /kwon'tm boh`goh-di:-nam'iks/ n. a theory
 that characterizes the universe in terms of bogon sources (such as
 politicians, used-car salesmen, tv evangelists, and {suit}s in
 general), bogon sinks (such as taxpayers and computers), and
 bogosity potential fields. bogon absorption, of course, causes
 human beings to behave mindlessly and machines to fail (and may
 also cause both to emit secondary bogons); however, the precise
 mechanics of the bogon-computron interaction are not yet understood
 and remain to be elucidated. quantum bogodynamics is most often
 invoked to explain the sharp increase in hardware and software
 failures in the presence of suits; the latter emit bogons, which
 the former absorb. see {bogon}, {computron}, {suit},
 {psyton}.
:quarter: n. two bits. this in turn comes from the `pieces of
 eight' famed in pirate movies —- spanish silver crowns that could
 be broken into eight pie-slice-shaped `bits' to make change.
 early in american history the spanish coin was considered equal to
 a dollar, so each of these `bits' was considered worth
 . cents. syn. {tayste}, {crumb}, {quad}. usage:
 rare. see also {nickle}, {nybble}, {{byte}}, {dynner}.
:ques: /kwes/ . n. the question mark character (`?', ascii
 ). . interj. what? also frequently verb-doubled as
 "ques ques?" see {wall}.
:quick-and-dirty: adj. describes a {crock} put together under time
 or user pressure. used esp. when you want to convey that you think
 the fast way might lead to trouble further down the road. "i can
 have a quick-and-dirty fix in place tonight, but i'll have to
 rewrite the whole module to solve the underlying design problem."
 see also {kluge}.
:quine: [from the name of the logician willard v. quine, via
 douglas hofstadter] n. a program which generates a copy of its
 source text as its complete output. devising the shortest possible
 quine in some given programming language is a common hackish
 amusement. here is one classic quine:
((lambda (x)
(list x (list (quote quote) x)))
(quote
(lambda (x)
(list x (list (quote quote) x)))))
 this one works in lisp or scheme. it's relatively easy to write
 quines in other languages such as postscript which readily handle
 programs as data; much harder (and thus more challenging!) in
 languages like c which do not. here is a classic c quine:
 char*f="char*f=%c%s%c;main(){printf(f,,f,,);}%c";
 main(){printf(f,,f,,);}
 for excruciatingly exact quinishness, remove the line break after
 the second semicolon. some infamous {obfuscated c contest}
 entries have been quines that reproduced in exotic ways.
:quote chapter and verse: [by analogy with the mainstream phrase]
 v. to cite a relevant excerpt from an appropriate {bible}. "i
 don't care if `rn' gets it wrong; `followup-to: poster' is
 explicitly permitted by rfc-. i'll quote chapter and verse if
 you don't believe me."
:quotient: n. see {coefficient of x}.
:quux: /kwuhks/ [mythically, from the latin semi-deponent verb
 quuxo, quuxare, quuxandum iri; noun form variously `quux' (plural
 `quuces', anglicized to `quuxes') and `quuxu' (genitive
 plural is `quuxuum', for four u-letters out of seven in all,
 using up all the `u' letters in scrabble).] . originally, a
 {metasyntactic variable} like {foo} and {foobar}.
 invented by guy steele for precisely this purpose when he was young
 and na"ive and not yet interacting with the real computing
 community. many people invent such words; this one seems simply to
 have been lucky enough to have spread a little. in an eloquent
 display of poetic justice, it has returned to the originator in the
 form of a nickname. . interj. see {foo}; however, denotes very
 little disgust, and is uttered mostly for the sake of the sound of
 it. . guy steele in his persona as `the great quux', which is
 somewhat infamous for light verse and for the `crunchly' cartoons.
 . in some circles, quux is used as a punning opposite of `crux'.
 "ah, that's the quux of the matter!" implies that the point is
 *not* crucial (compare {tip of the ice-cube}). . quuxy:
 adj. of or pertaining to a quux.
:qux: /kwuhks/ the fourth of the standard {metasyntactic
 variable}, after {baz} and before the quu(u…)x series.
 see {foo}, {bar}, {baz}, {quux}. this appears to be a
 recent mutation from {quux}, and many versions of the
 standard series just run {foo}, {bar}, {baz}, {quux},
:qwerty: /kwer'tee/ [from the keycaps at the upper left] adj.
 pertaining to a standard english-language typewriter keyboard
 (sometimes called the sholes keyboard after its inventor), as
 opposed to dvorak or foreign-language layouts or a {space-cadet
 keyboard} or apl keyboard.
 historical note: the qwerty layout is a fine example of a {fossil}.
 it is sometimes said that it was designed to slow down the typist,
 but this is wrong; it was designed to allow *faster* typing
 —- under a constraint now long obsolete. in early typewriters,
 fast typing using nearby type-bars jammed the mechanism. so sholes
 fiddled the layout to separate the letters of many common digraphs
 (he did a far from perfect job, though; `th', `tr', `ed', and `er',
 for example, each use two nearby keys). also, putting the letters
 of `typewriter' on one line allowed it to be typed with particular
 speed and accuracy for {demo}s. the jamming problem was
 essentially solved soon afterward by a suitable use of springs, but
 the keyboard layout lives on.
:rain dance: n. . any ceremonial action taken to correct a hardware
 problem, with the expectation that nothing will be accomplished.
 this especially applies to reseating printed circuit boards,
 reconnecting cables, etc. "i can't boot up the machine. we'll
 have to wait for greg to do his rain dance." . any arcane
 sequence of actions performed with computers or software in order
 to achieve some goal; the term is usually restricted to rituals
 that include both an {incantation} or two and physical activity
 or motion. compare {magic}, {voodoo programming}, {black
 art}.
:rainbow series: n. any of several series of technical manuals
 distinguished by cover color. the original rainbow series was the
 ncsc security manuals (see {orange book}); the term has also
 been commonly applied to the postscript reference set (see {red
 book}, {green book}, {blue book}, {white book}). which
 books are meant by "`the' rainbow series" unqualified is thus
 dependent on one's local technical culture.
:random: adj. . unpredictable (closest to mathematical
 definition); weird. "the system's been behaving pretty
 randomly." . assorted; undistinguished. "who was at the
 conference?" "just a bunch of random business types."
 . (pejorative) frivolous; unproductive; undirected. "he's just a
 random loser." . incoherent or inelegant; poorly chosen; not
 well organized. "the program has a random set of misfeatures."
 "that's a random name for that function." "well, all the names
 were chosen pretty randomly." . in no particular order, though
 deterministic. "the i/o channels are in a pool, and when a file
 is opened one is chosen randomly." . arbitrary. "it generates
 a random name for the scratch file." . gratuitously wrong, i.e.,
 poorly done and for no good apparent reason. for example, a
 program that handles file name defaulting in a particularly useless
 way, or an assembler routine that could easily have been coded
 using only three registers, but redundantly uses seven for values
 with non-overlapping lifetimes, so that no one else can invoke it
 without first saving four extra registers. what {randomness}!
 . n. a random hacker; used particularly of high-school students
 who soak up computer time and generally get in the way. . n.
 anyone who is not a hacker (or, sometimes, anyone not known to the
 hacker speaking); the noun form of sense . "i went to the talk,
 but the audience was full of randoms asking bogus questions".
 . n. (occasional mit usage) one who lives at random hall. see
 also {j. random}, {some random x}.
:random numbers:: n. when one wishes to specify a large but random
 number of things, and the context is inappropriate for {n}, certain
 numbers are preferred by hacker tradition (that is, easily
 recognized as placeholders). these include the following:
long described at mit as `the least random number'; see .
sacred number of eris, goddess of discord (along with  and
the answer to the ultimate question of life, the universe, and
everything. (note that this answer is completely fortuitous.
from the sexual act. this one was favored in mit's its
culture.
 hex =  decimal, and  decimal =  octal.
the number of the beast.
 for further enlightenment, study the `principia discordia',
 `{the hitchhiker's guide to the galaxy}', `the joy
 of sex', and the christian bible (revelation :). see also
 {discordianism} or consult your pineal gland. see also {for
 values of}.
:randomness: n. . an inexplicable misfeature; gratuitous
 inelegance. . a {hack} or {crock} that depends on a complex
 combination of coincidences (or, possibly, the combination upon
 which the crock depends for its accidental failure to malfunction).
 "this hack can output characters — by putting the character
 in the four-bit accumulator field of an xct and then extracting
 six bits —- the low  bits of the xct opcode are the right
 thing." "what randomness!" . of people, synonymous with
 `flakiness'. the connotation is that the person so described is
 behaving weirdly, incompetently, or inappropriately for reasons
 which are (a) too tiresome to bother inquiring into, (b) are
 probably as inscrutable as quantum phenomena anyway, and (c) are
 likely to pass with time. "maybe he has a real complaint, or maybe
 it's just randomness. see if he calls back."
:rape: vt. . to {screw} someone or something, violently; in
 particular, to destroy a program or information irrecoverably.
 often used in describing file-system damage. "so-and-so was
 running a program that did absolute disk i/o and ended up raping
 the master directory." . to strip a piece of hardware for parts.
 . [cmu/pitt] to mass-copy files from an anonymous ftp site.
 "last night i raped simtel's dskutl directory."
:rare mode: [unix] adj. cbreak mode (character-by-character with
interrupts enabled). distinguished from {raw mode} and {cooked
mode}; the phrase "a sort of half-cooked (rare?) mode" is used
in the v/bsd manuals to describe the mode. usage: rare.
:raster blaster: n. [cambridge] specialized hardware for
{bitblt} operations (a {blitter}). allegedly inspired by
`rasta blasta', british slang for the sort of portable stereo
americans call a `boom box' or `ghetto blaster'.
:raster burn: n. eyestrain brought on by too many hours of looking at
 low-res, poorly tuned, or glare-ridden monitors, esp. graphics
 monitors. see {terminal illness}.
:rat belt: n. a cable tie, esp. the sawtoothed, self-locking plastic
 kind that you can remove only by cutting (as opposed to a random
 twist of wire or a twist tie or one of those humongous metal clip
 frobs). small cable ties are `mouse belts'.
:rave: [wpi] vi. . to persist in discussing a specific subject.
 . to speak authoritatively on a subject about which one knows
 very little. . to complain to a person who is not in a position
 to correct the difficulty. . to purposely annoy another person
 verbally. . to evangelize. see {flame}. . also used to
 describe a less negative form of blather, such as friendly
 bullshitting. `rave' differs slightly from {flame} in that
 `rave' implies that it is the persistence or obliviousness of the
 person speaking that is annoying, while {flame} implies somewhat
 more strongly that the tone is offensive as well.
:rave on!: imp. sarcastic invitation to continue a {rave}, often by
 someone who wishes the raver would get a clue but realizes this is
 unlikely.
:ravs: /ravz/, also `chinese ravs' n. jiao-zi (steamed or
 boiled) or guo-tie (pan-fried). a chinese appetizer, known
 variously in the plural as dumplings, pot stickers (the literal
 translation of guo-tie), and (around boston) `peking ravioli'. the
 term `rav' is short for `ravioli', which among hackers always
 means the chinese kind rather than the italian kind. both consist
 of a filling in a pasta shell, but the chinese kind includes no
 cheese, uses a thinner pasta, has a pork-vegetable filling (good
 ones include chinese chives), and is cooked differently, either by
 steaming or frying. a rav or dumpling can be cooked any way, but a
 potsticker is always the fried kind (so called because it sticks to
 the frying pot and has to be scraped off). "let's get
 hot-and-sour soup and three orders of ravs." see also
 {{oriental food}}.
:raw mode: n. a mode that allows a program to transfer bits
 directly to or from an i/o device (or, under {bogus} systems
 which make a distinction, a disk file) without any processing,
 abstraction, or interpretation by the operating system. compare
 {rare mode}, {cooked mode}. this is techspeak under unix,
 jargon elsewhere.
:rc file: /r-c fi:l/ [unix: from the startup script
 `/etc/rc', but this is commonly believed to have been named
 after older scripts to `run commands'] n. script file containing
 startup instructions for an application program (or an entire
 operating system), usually a text file containing commands of the
 sort that might have been invoked manually once the system was
 running but are to be executed automatically each time the system
 starts up. see also {dot file}.
:re: /r-e/ n. common spoken and written shorthand for {regexp}.
:read-only user: n. describes a {luser} who uses computers almost
 exclusively for reading usenet, bulletin boards, and/or email,
 rather than writing code or purveying useful information. see
 {twink}, {terminal junkie}, {lurker}.
:readme file: n. by convention, the top-level directory of a unix
 source distribution always contains a file named `readme' (or
 read.me, or rarely readme or some other variant), which is a
 hacker's-eye introduction containing a pointer to more detailed
 documentation, credits, miscellaneous revision history notes, etc.
 in the mac and pc worlds, software is not usually distributed in
 source form and a readme is more likely to contain user-oriented
 material like last-minute documentation changes, error workarounds,
 and restrictions. when asked, hackers invariably relate the readme
 convention to the famous scene in lewis carroll's `alice's
 adventures in wonderland' in which alice confronts magic munchies
 labeled "eat me" and "drink me".
:real: adj. not simulated. often used as a specific antonym to
 {virtual} in any of its jargon senses.
:real estate: n. may be used for any critical resource measured in
 units of area. most frequently used of `chip real estate', the
 area available for logic on the surface of an integrated circuit
 (see also {nanoacre}). may also be used of floor space in a
 {dinosaur pen}, or even space on a crowded desktop (whether
 physical or electronic).
:real hack: n. a {crock}. this is sometimes used affectionately;
 see {hack}.
:real operating system: n. the sort the speaker is used to. people
 from the bsdophilic academic community are likely to issue comments
 like "system v? why don't you use a *real* operating
 system?", people from the commercial/industrial unix sector are
 known to complain "bsd? why don't you use a *real*
 operating system?", and people from ibm object "unix? why don't
 you use a *real* operating system?" see {holy wars},
 {religious issues}, {proprietary}, {get a real computer!}
:real programmer: [indirectly, from the book `real men don't
 eat quiche'] n. a particular sub-variety of hacker: one possessed
 of a flippant attitude toward complexity that is arrogant even when
 justified by experience. the archetypal `real programmer' likes
 to program on the {bare metal} and is very good at same,
 remembers the binary opcodes for every machine he has ever
 programmed, thinks that hlls are sissy, and uses a debugger to edit
 his code because full-screen editors are for wimps. real
 programmers aren't satisfied with code that hasn't been {bum}med
 into a state of {tense}ness just short of rupture. real
 programmers never use comments or write documentation: "if it was
 hard to write", says the real programmer, "it should be hard to
 understand." real programmers can make machines do things that
 were never in their spec sheets; in fact, they are seldom really
 happy unless doing so. a real programmer's code can awe with its
 fiendish brilliance, even as its crockishness appalls. real
 programmers live on junk food and coffee, hang line-printer art on
 their walls, and terrify the crap out of other programmers —-
 because someday, somebody else might have to try to understand
 their code in order to change it. their successors generally
 consider it a {good thing} that there aren't many real
 programmers around any more. for a famous (and somewhat more
 positive) portrait of a real programmer, see "{the story
 of mel, a real programmer}" in {appendix a}.
:real soon now: [orig. from sf's fanzine community, popularized by
 jerry pournelle's column in `byte'] adv. . supposed to be
 available (or fixed, or cheap, or whatever) real soon now according
 to somebody, but the speaker is quite skeptical. . when one's
 gods, fates, or other time commitments permit one to get to it (in
 other words, don't hold your breath). often abbreviated rsn.
:real time: . [techspeak] adj. describes an application which
 requires a program to respond to stimuli within some small upper
 limit of response time (typically milli- or microseconds). process
 control at a chemical plant is the classic example. such
 applications often require special operating systems (because
 everything else must take a back seat to response time) and
 speed-tuned hardware. . adv. in jargon, refers to doing something
 while people are watching or waiting. "i asked her how to find
 the calling procedure's program counter on the stack and she came
 up with an algorithm in real time."
:real user: n. . a commercial user. one who is paying *real*
 money for his computer usage. . a non-hacker. someone using the
 system for an explicit purpose (a research project, a course, etc.)
 other than pure exploration. see {user}. hackers who are also
 students may also be real users. "i need this fixed so i can do a
 problem set. i'm not complaining out of randomness, but as a real
 user." see also {luser}.
:real world: n. . those institutions at which `programming' may
 be used in the same sentence as `fortran', `{cobol}',
 `rpg', `{ibm}', `dbase', etc. places where programs do such
 commercially necessary but intellectually uninspiring things as
 generating payroll checks and invoices. . the location of
 non-programmers and activities not related to programming. . a
 bizarre dimension in which the standard dress is shirt and tie and
 in which a person's working hours are defined as  to  (see
 {code grinder}). . anywhere outside a university. "poor
 fellow, he's left mit and gone into the real world." used
 pejoratively by those not in residence there. in conversation,
 talking of someone who has entered the real world is not unlike
 speaking of a deceased person. it is also noteworthy that on the
 campus of cambridge university in england, there is a gaily-painted
 lamp-post which bears the label `reality checkpoint'. it marks the
 boundary between university and the real world; check your notions
 of reality before passing. see also {fear and loathing},
 {mundane}, and {uninteresting}.
:reality check: n. . the simplest kind of test of software or
 hardware; doing the equivalent of asking it what  +  is
 and seeing if you get . the software equivalent of a
 {smoke test}. . the act of letting a {real user} try out
 prototype software. compare {sanity check}.
:reaper: n. a {prowler} that {gfr}s files. a file removed in
 this way is said to have been `reaped'.
:rectangle slinger: n. see {polygon pusher}.
:recursion: n. see {recursion}. see also {tail recursion}.
:recursive acronym:: pl.n. a hackish (and especially mit) tradition
 is to choose acronyms/abbreviations that refer humorously to
 themselves or to other acronyms/abbreviations. the classic
 examples were two mit editors called eine ("eine is not emacs")
 and zwei ("zwei was eine initially"). more recently, there is a
 scheme compiler called liar (liar imitates apply recursively), and
 {gnu} (q.v., sense ) stands for "gnu's not unix!" —- and a
 company with the name cygnus, which expands to "cygnus, your gnu
 support". see also {mung}, {emacs}.
:red book: n. . informal name for one of the three standard
 references on {postscript} (`postscript language reference
 manual', adobe systems (addison-wesley, ; qa..pp; isbn
 ---, or the  second edition isbn ---); the
 others are known as the {green book}, the {blue book}, and
 the {white book} (sense ). . informal name for one of the 
 standard references on smalltalk (`smalltalk-: the
 interactive programming environment' by adele goldberg
 (addison-wesley, ; qa..sg; isbn ---); this
 too is associated with blue and green books). . any of the
  standards issued by the ccitt eighth plenary assembly. until
 now, these have changed color each review cycle ( was {blue
 book},  will be {green book}); however, it is rumored that
 this convention is going to be dropped before . these include,
 among other things, the x. email spec and the group  through 
 fax standards. . the new version of the {green book} (sense )
 —- ieee .-, a.k.a iso - —- is (because of the color
 and the fact that it is printed on a paper) known in the u.s.a. as
 "the ugly red book that won't fit on the shelf" and in europe as
 "the ugly red book that's a sensible size". . the nsa
 `trusted network interpretation' companion to the {orange
 book}. see also {{book titles}}.
:red wire: [ibm] n. patch wires installed by programmers who have
 no business mucking with the hardware. it is said that the only
 thing more dangerous then a hardware guy with a code patch is a
 {softy} with a soldering iron….
:regexp: /reg'eksp/ [unix] n. (alt. `regex' or `reg-ex')
 . common written and spoken abbreviation for `regular
 expression', one of the wildcard patterns used, e.g., by unix
 utilities such as `grep()', `sed()', and `awk()'.
 these use conventions similar to but more elaborate than those
 described under {glob}. for purposes of this lexicon, it is
 sufficient to note that regexps also allow complemented character
 sets using `^'; thus, one can specify `any non-alphabetic
 character' with `[^a-za-z]'. . name of a well-known pd
 regexp-handling package in portable c, written by revered usenetter
 henry spencer <henry@zoo.toronto.edu>.
:register dancing: n. many older processor architectures suffer
 from a serious shortage of general-purpose registers. this is
 especially a problem for compiler-writers, because their generated
 code needs places to store temporaries for things like intermediate
 values in expression evaluation. some designs with this problem,
 like the intel x, do have a handful of special-purpose
 registers that can be pressed into service, providing suitable care
 is taken to avoid unpleasant side-effects on the state of the
 processor: while the special-purpose register is being used to hold
 an intermediate value, a delicate minuet is required in which the
 previous value of the register is saved and then restored just before
 the official function (and value) of the special-purpose register is
 again needed.
:reincarnation, cycle of: n. see {cycle of reincarnation}.
:reinvent the wheel: v. to design or implement a tool equivalent to
 an existing one or part of one, with the implication that doing so
 is silly or a waste of time. this is often a valid criticism.
 on the other hand, automobiles don't use wooden rollers, and some
 kinds of wheel have to be reinvented many times before you get them
 right. on the third hand, people reinventing the wheel do tend to
 come up with the moral equivalent of a trapezoid with an offset
 axle.
:religious issues: n. questions which seemingly cannot be raised
 without touching off {holy wars}, such as "what is the best
 operating system (or editor, language, architecture, shell, mail
 reader, news reader)?", "what about that heinlein guy, eh?",
 "what should we add to the new jargon file?" see {holy wars};
 see also {theology}, {bigot}.
 this term is an example of {ha ha only serious}. people
 actually develop the most amazing and religiously intense
 attachments to their tools, even when the tools are intangible.
 the most constructive thing one can do when one stumbles into the
 crossfire is mumble {get a life!} and leave —- unless, of course,
 one's *own* unassailably rational and obviously correct
 choices are being slammed.
:replicator: n. any construct that acts to produce copies of
 itself; this could be a living organism, an idea (see {meme}), a
 program (see {worm}, {wabbit}, {fork bomb}, and
 {virus}), a pattern in a cellular automaton (see {life},
 sense ), or (speculatively) a robot or {nanobot}. it is even
 claimed by some that {{unix}} and {c} are the symbiotic halves
 of an extremely successful replicator; see {unix conspiracy}.
:reply: n. see {followup}.
:reset: [the mud community] v. in abermud, to bring all dead mobiles
 to life and move items back to their initial starting places. new
 players who can't find anything shout "reset! reset!" quite a bit.
 higher-level players shout back "no way!" since they know where
 points are to be found. used in {rl}, it means to put things back
 to the way they were when you found them.
:restriction: n. a {bug} or design error that limits a program's
 capabilities, and which is sufficiently egregious that nobody can
 quite work up enough nerve to describe it as a {feature}. often
 used (esp. by {marketroid} types) to make it sound as though
 some crippling bogosity had been intended by the designers all
 along, or was forced upon them by arcane technical constraints of a
 nature no mere user could possibly comprehend (these claims are
 almost invariably false).
 old-time hacker joseph m. newcomer advises that whenever choosing a
 quantifiable but arbitrary restriction, you should make it either a
 power of  or a power of  minus . if you impose a limit of
  items in a list, everyone will know it is a random number —- on
 the other hand, a limit of  or  suggests some deep reason
 (involving - or -based indexing in binary) and you will get less
 {flamage} for it. limits which are round numbers in base  are
 always especially suspect.
:retcon: /ret'kon/ [`retroactive continuity', from the usenet
 newsgroup rec.arts.comics] . n. the common situation in pulp
 fiction (esp. comics or soap operas) where a new story
 `reveals' things about events in previous stories, usually
 leaving the `facts' the same (thus preserving continuity) while
 completely changing their interpretation. for example, revealing
 that a whole season of "dallas" was a dream was a retcon.
 . vt. to write such a story about a character or fictitious
 object. "byrne has retconned superman's cape so that it is no
 longer unbreakable." "marvelman's old adventures were retconned
 into synthetic dreams." "swamp thing was retconned from a
 transformed person into a sentient vegetable." "darth vader was
 retconned into luke skywalker's father in "the empire strikes
 back".
 [this is included because it is a good example of hackish
 linguistic innovation in a field completely unrelated to computers.
 the word `retcon' will probably spread through comics fandom and
 lose its association with hackerdom within a couple of years; for
 the record, it started here. —- esr]
:reti: v. syn. {rti}
:retrocomputing: /ret'-roh-k*m-pyoo'ting/ n. refers to emulations
 of way-behind-the-state-of-the-art hardware or software, or
 implementations of never-was-state-of-the-art; esp. if such
 implementations are elaborate practical jokes and/or parodies,
 written mostly for {hack value}, of more `serious' designs.
 perhaps the most widely distributed retrocomputing utility was the
 `pnch()' or `bcd()' program on v and other early unix
 versions, which would accept up to  characters of text argument
 and display the corresponding pattern in {{punched card}} code.
 other well-known retrocomputing hacks have included the programming
 language {intercal}, a {jcl}-emulating shell for unix, the
 card-punch-emulating editor named , and various elaborate pdp-
 hardware emulators and rt- os emulators written just to keep an
 old, sourceless {zork} binary running.
:rfc: /r-f-c/ [request for comment] n. one of a long-established
 series of numbered internet standards widely followed by commercial
 and pd software in the internet and unix communities. perhaps the
 single most influential one has been rfc- (the internet
 mail-format standard). the rfcs are unusual in that they are
 floated by technical experts acting on their own initiative and
 reviewed by the internet at large, rather than formally promulgated
 through an institution such as ansi. for this reason, they remain
 known as rfcs even once adopted.
 the rfc tradition of pragmatic, experience-driven, after-the-fact
 standard-writing done by individuals or small working groups has
 important advantages over the more formal, committee-driven process
 typical of ansi or iso. emblematic of some of these is the
 existence of a flourishing tradition of `joke' rfcs; usually at
 least one a year is published, usually on april st. well-known
 joke rfcs have included  ("arpawocky", r. merryman, ucsd; 
 june ),  ("telnet randomly-lose option", mark r. crispin;
  april ), and  ("a standard for the transmission of ip
 datagrams on avian carriers", d. waitzman, bbn stc;  april ).
 the first was a lewis carrol pastiche; the second a parody of the
 tcp-ip documentation style, and the third a deadpan skewering of
 standards-document legalese describing protocols for transmiitting
 internet data packets by carrier pigeon.
 the rfcs are most remarkable for how well they work —- they manage to
 have neither the ambiguities which are usually rife in informal
 specifications, nor the committee-perpetrated misfeatures which often
 haunt formal standards, and they define a network which has grown to
 truly worldwide proportions.
:rfe: /r-f-e/ n. . [techspeak] request for enhancement.
. [from `radio free europe', bellcore and sun] radio free
ethernet, a system (originated by peter langston) for broadcasting
audio among sun sparcstations over the ethernet.
:rib site: [by analogy with {backbone site}] n. a machine that
has an on-demand high-speed link to a {backbone site} and serves
as a regional distribution point for lots of third-party traffic in
email and usenet news. compare {leaf site}, {backbone site}.
:rice box: [from ham radio slang] n. any asian-made commodity
 computer, esp. an x-based machine built to ibm pc-compatible
 isa or eisa-bus standards.
:right thing: n. that which is *compellingly* the correct or
 appropriate thing to use, do, say, etc. often capitalized, always
 emphasized in speech as though capitalized. use of this term often
 implies that in fact reasonable people may disagree. "what's the
 right thing for lisp to do when it sees `(mod a )'? should
 it return `a', or give a divide-by- error?" oppose
 {wrong thing}.
:rl: // [mud community] n. real life. "firiss laughs in rl"
means that firiss's player is laughing. oppose {vr}.
:roach: [bell labs] vt. to destroy, esp. of a data structure. hardware
gets {toast}ed or {fried}, software gets roached.
:robot: [irc, mud] n. an {irc} or {mud} user who is actually
 a program. on irc, typically the robot provides some useful
 service. examples are nickserv, which tries to prevent random
 users from adopting {nick}s already claimed by others, and
 msgserv, which allows one to send asynchronous messages to be
 delivered when the recipient signs on. also common are
 "annoybots", such as kissserv, which perform no useful function
 except to send cute messages to other people. service robots are
 less common on muds; but some others, such as the `julia' robot
 active in -, have been remarkably impressive turing-test
 experiments, able to pass as human for as long as ten or fifteen
 minutes of conversation.
:robust: adj. said of a system that has demonstrated an ability to
 recover gracefully from the whole range of exceptional inputs and
 situations in a given environment. one step below {bulletproof}.
 carries the additional connotation of elegance in addition to just
 careful attention to detail. compare {smart}, oppose
 {brittle}.
:rococo: adj. {baroque} in the extreme. used to imply that a
 program has become so encrusted with the software equivalent of
 gold leaf and curlicues that they have completely swamped the
 underlying design. called after the later and more extreme forms
 of baroque architecture and decoration prevalent during the
 mid-s in europe. alan perlis said: "every program eventually
 becomes rococo, and then rubble." compare {critical
 mass}.
:rogue: [unix] n. a dungeons-and-dragons-like game using character
 graphics, written under bsd unix and subsequently ported to other
 unix systems. the original bsd `curses()' screen-handling
 package was hacked together by ken arnold to support
 `rogue()' and has since become one of unix's most important
 and heavily used application libraries. nethack, omega, larn, and
 an entire subgenre of computer dungeon games all took off from the
 inspiration provided by `rogue()'. see {nethack}.
:room-temperature iq: [ibm] quant.  or below. used in describing the
 expected intelligence range of the {luser}. "well, but
 how's this interface going to play with the room-temperature iq
 crowd?" see {drool-proof paper}. this is a much more insulting
 phrase in countries that use celsius thermometers.
:root: [unix] n. . the {superuser} account that ignores
 permission bits, user number  on a unix system. this account
 has the user name `root'. the term {avatar} is also used.
 . the top node of the system directory structure (home directory
 of the root user). . by extension, the privileged
 system-maintenance login on any os. see {root mode}, {go root}.
:root mode: n. syn. with {wizard mode} or `wheel mode'. like
 these, it is often generalized to describe privileged states in
 systems other than oses.
:rot: /rot ther'teen/ [usenet: from `rotate alphabet
  places'] n., v. the simple caesar-cypher encryption that
 replaces each english letter with the one  places forward or back
 along the alphabet, so that "the butler did it!" becomes "gur
 ohgyre qvq vg!" most usenet news reading and posting programs
 include a rot feature. it is used to enclose the text in a
 sealed wrapper that the reader must choose to open —- e.g., for
 posting things that might offend some readers, or answers to
 puzzles. a major advantage of rot over rot(n) for
 other n is that it is self-inverse, so the same code can be
 used for encoding and decoding.
:rotary debugger: [commodore] n. essential equipment for those
 late-night or early-morning debugging sessions. mainly used as
 sustenance for the hacker. comes in many decorator colors, such as
 sausage, pepperoni, and garbage. see {pizza, ansi standard}.
:round tape: n. industry-standard /" magnetic tape (- or
 -track) on traditional circular reels; oppose {square tape}.
:rsn: /r-s-n/ adj. see {real soon now}.
:rtbm: /r-t-b-m/ [unix] imp. commonwealth hackish variant of
{rtfm}; expands to `read the bloody manual'. rtbm is often the
entire text of the first reply to a question from a {newbie};
the *second* would escalate to "rtfm".
:rtfaq: /r-t-f-a-q/ [usenet: primarily written, by analogy with
{rtfm}] imp. abbrev. for `read the faq!', an exhortation that
the person addressed ought to read the newsgroup's {faq list}
before posting questions.
:rtfb: /r-t-f-b/ [unix] imp. acronym for `read the fucking
 binary'. used when neither documentation nor the the source for the
 problem at hand exists and the only thing to do is use some
 debugger or monitor and directly analyze the assembler or even
 the machine code. "no source for the buggy port driver? aaargh! i
 *hate* proprietary operating systems. time to rtfb."
:rtfm: /r-t-f-m/ [unix] imp. acronym for `read the fucking
 manual'. . used by {guru}s to brush off questions they
 consider trivial or annoying. compare {don't do that, then!}
 . used when reporting a problem to indicate that you aren't just
 asking out of {randomness}. "no, i can't figure out how to
 interface unix to my toaster, and yes, i have rtfm." unlike
 sense , this use is considered polite. see also {fm},
 {rtfaq}, {rtfb}, {rtfs}, {rtm}, all of which mutated
 from rtfm, and compare {utsl}.
:rtfs: /r-t-f-s/ [unix] . imp. acronym for `read the fucking
 source'. stronger form of {rtfm}, used when the problem
 at hand is not necessarily obvious and not available from
 the manuals —- or the manuals are not yet written and maybe
 never will be. for even more tricky situations, see {rtfb}.
 . imp. `read the fucking standard;' this oath can only be used when
 the problem area (e.g. a language or operating system interface) has
 actually been codified in a ratified standards document. the
 existence of these standards documents (and the technically
 inappropriate but politically mandated compromises which they
 inevitably contain, and the stifling language in which they are
 invariably written, and the unbelievably tedious bureaucratic process
 by which they are produced) can be unnerving to hackers, who are used
 to a certain amount of ambiguity in the specifications of the systems
 they use. (hackers feel that such ambiguities are acceptable as long
 as the {right thing} to do is obvious to any thinking observer;
 sadly, this casual attitude towards specifications becomes unworkable
 when a system becomes popular in the {real world}.) since a hacker
 is likely to feel that a standards document is both unnecessary and
 technically deficient, the deprecation inherent in this term may be
 directed as much against the standard as against the person who ought
 to read it.
:rti: /r-t-i/ interj. the mnemonic for the `return from
 interrupt' instruction on many computers including the  and
 . the variant `reti' is found among former z hackers
 (almost nobody programs these things in assembler anymore).
 equivalent to "now, where was i?" or used to end a
 conversational digression. see {pop}; see also {popj}.
:rtm: /r-t-m/ [usenet: abbreviation for `read the manual']
 . politer variant of {rtfm}. . robert t. morris jr.,
 perpetrator of the great internet worm of  (see {great worm,
 the}); villain to many, na"ive hacker gone wrong to a few. morris
 claimed that the worm that brought the internet to its knees was a
 benign experiment that got out of control as the result of a coding
 error. after the storm of negative publicity that followed this
 blunder, morris's name on its was hacked from rtm to {rtfm}.
:rude: [wpi] adj. . (of a program) badly written. . functionally
 poor, e.g., a program that is very difficult to use because of
 gratuitously poor (random?) design decisions. oppose {cuspy}.
 . anything that manipulates a shared resource without regard for
 its other users in such a way as to cause a (non-fatal) problem is
 said to be `rude'. examples: programs that change tty modes
 without resetting them on exit, or windowing programs that keep
 forcing themselves to the top of the window stack. compare
 {all-elbows}.
:runes: pl.n. . anything that requires {heavy wizardry} or
 {black art} to {parse}: core dumps, jcl commands, apl, or code
 in a language you haven't a clue how to read. compare {casting
 the runes}, {great runes}. . special display characters (for
 example, the high-half graphics on an ibm pc).
:runic: adj. syn. {obscure}. vms fans sometimes refer to unix as
`runix'; unix fans return the compliment by expanding vms to `very
messy syntax' or `vachement mauvais syst`eme' (french; lit.
"cowlike bad system", idiomatically "bitchy bad system").
:rusty iron: n. syn. {tired iron}. it has been claimed that this
 is the inevitable fate of {water mips}.
:rusty memory: n. mass-storage that uses iron-oxide-based magnetic
 media (esp. tape and the pre-winchester removable disk packs used
 in {washing machine}s). compare {donuts}.
:s/n ratio: // n. (also `s/n ratio', `s:n ratio'). syn.
{signal-to-noise ratio}. often abbreviated `snr'.
:sacred: adj. reserved for the exclusive use of something (an
 extension of the standard meaning). often means that anyone may
 look at the sacred object, but clobbering it will screw whatever it
 is sacred to. the comment "register  is sacred to the interrupt
 handler" appearing in a program would be interpreted by a hacker
 to mean that if any *other* part of the program changes the
 contents of register , dire consequences are likely to ensue.
:saga: [wpi] n. a cuspy but bogus raving story about n random
broken people.
here is a classic example of the saga form, as told by guy l.
steele:
 jon l. white (login name jonl) and i (gls) were office mates at mit
 for many years. one april, we both flew from boston to california
 for a week on research business, to consult face-to-face with some
 people at stanford, particularly our mutual friend richard p.
 gabriel (rpg; see {gabriel}).
 rpg picked us up at the san francisco airport and drove us back to
 palo alto (going {logical} south on route , parallel to {el
 camino bignum}). palo alto is adjacent to stanford university and
 about  miles south of san francisco. we ate at the good earth, a
 `health food' restaurant, very popular, the sort whose milkshakes
 all contain honey and protein powder. jonl ordered such a shake
 —- the waitress claimed the flavor of the day was "lalaberry". i
 still have no idea what that might be, but it became a running
 joke. it was the color of raspberry, and jonl said it tasted
 rather bitter. i ate a better tostada there than i have ever had
 in a mexican restaurant.
 after this we went to the local uncle gaylord's old fashioned ice
 cream parlor. they make ice cream fresh daily, in a variety of
 intriguing flavors. it's a chain, and they have a slogan: "if you
 don't live near an uncle gaylord's —- move!" also, uncle gaylord
 (a real person) wages a constant battle to force big-name ice cream
 makers to print their ingredients on the package (like air and
 plastic and other non-natural garbage). jonl and i had first
 discovered uncle gaylord's the previous august, when we had flown
 to a computer-science conference in berkeley, california, the first
 time either of us had been on the west coast. when not in the
 conference sessions, we had spent our time wandering the length of
 telegraph avenue, which (like harvard square in cambridge) was
 lined with picturesque street vendors and interesting little shops.
 on that street we discovered uncle gaylord's berkeley store. the
 ice cream there was very good. during that august visit jonl went
 absolutely bananas (so to speak) over one particular flavor, ginger
 honey.
 therefore, after eating at the good earth —- indeed, after every
 lunch and dinner and before bed during our april visit —- a trip
 to uncle gaylord's (the one in palo alto) was mandatory. we had
 arrived on a wednesday, and by thursday evening we had been there
 at least four times. each time, jonl would get ginger honey ice
 cream, and proclaim to all bystanders that "ginger was the spice
 that drove the europeans mad! that's why they sought a route to
 the east! they used it to preserve their otherwise off-taste
 meat." after the third or fourth repetition rpg and i were getting
 a little tired of this spiel, and began to paraphrase him: "wow!
 ginger! the spice that makes rotten meat taste good!" "say! why
 don't we find some dog that's been run over and sat in the sun for
 a week and put some *ginger* on it for dinner?!" "right! with a
 lalaberry shake!" and so on. this failed to faze jonl; he took it
 in good humor, as long as we kept returning to uncle gaylord's. he
 loves ginger honey ice cream.
 now rpg and his then-wife kbt (kathy tracy) were putting us up
 (putting up with us?) in their home for our visit, so to thank them
 jonl and i took them out to a nice french restaurant of their
 choosing. i unadventurously chose the filet mignon, and kbt had je
 ne sais quoi du jour, but rpg and jonl had lapin (rabbit).
 (waitress: "oui, we have fresh rabbit, fresh today." rpg: "well,
 jonl, i guess we won't need any *ginger*!")
 we finished the meal late, about  p.m., which is  a.m boston
 time, so jonl and i were rather droopy. but it wasn't yet
 midnight. off to uncle gaylord's!
 now the french restaurant was in redwood city, north of palo alto.
 in leaving redwood city, we somehow got onto route  going north
 instead of south. jonl and i wouldn't have known the difference
 had rpg not mentioned it. we still knew very little of the local
 geography. i did figure out, however, that we were headed in the
 direction of berkeley, and half-jokingly suggested that we continue
 north and go to uncle gaylord's in berkeley.
 rpg said "fine!" and we drove on for a while and talked. i was
 drowsy, and jonl actually dropped off to sleep for  minutes. when
 he awoke, rpg said, "gee, jonl, you must have slept all the way
 over the bridge!", referring to the one spanning san francisco bay.
 just then we came to a sign that said "university avenue". i
 mumbled something about working our way over to telegraph avenue;
 rpg said "right!" and maneuvered some more. eventually we pulled
 up in front of an uncle gaylord's.
 now, i hadn't really been paying attention because i was so sleepy,
 and i didn't really understand what was happening until rpg let me
 in on it a few moments later, but i was just alert enough to notice
 that we had somehow come to the palo alto uncle gaylord's after
 all.
 jonl noticed the resemblance to the palo alto store, but hadn't
 caught on. (the place is lit with red and yellow lights at night,
 and looks much different from the way it does in daylight.) he
 said, "this isn't the uncle gaylord's i went to in berkeley! it
 looked like a barn! but this place looks *just like* the one back
 in palo alto!"
 rpg deadpanned, "well, this is the one *i* always come to when i'm
 in berkeley. they've got two in san francisco, too. remember,
 they're a chain."
 jonl accepted this bit of wisdom. and he was not totally ignorant
 —- he knew perfectly well that university avenue was in berkeley,
 not far from telegraph avenue. what he didn't know was that there
 is a completely different university avenue in palo alto.
 jonl went up to the counter and asked for ginger honey. the guy at
 the counter asked whether jonl would like to taste it first,
 evidently their standard procedure with that flavor, as not too
 many people like it.
 jonl said, "i'm sure i like it. just give me a cone." the guy
 behind the counter insisted that jonl try just a taste first.
 "some people think it tastes like soap." jonl insisted, "look, i
 *love* ginger. i eat chinese food. i eat raw ginger roots. i
 already went through this hassle with the guy back in palo alto. i
 *know* i like that flavor!"
 at the words "back in palo alto" the guy behind the counter got a
 very strange look on his face, but said nothing. kbt caught his
 eye and winked. through my stupor i still hadn't quite grasped
 what was going on, and thought rpg was rolling on the floor
 laughing and clutching his stomach just because jonl had launched
 into his spiel ("makes rotten meat a dish for princes") for the
 forty-third time. at this point, rpg clued me in fully.
 rpg, kbt, and i retreated to a table, trying to stifle our
 chuckles. jonl remained at the counter, talking about ice cream
 with the guy b.t.c., comparing uncle gaylord's to other ice cream
 shops and generally having a good old time.
 at length the g.b.t.c. said, "how's the ginger honey?" jonl said,
 "fine! i wonder what exactly is in it?" now uncle gaylord
 publishes all his recipes and even teaches classes on how to make
 his ice cream at home. so the g.b.t.c. got out the recipe, and he
 and jonl pored over it for a while. but the g.b.t.c. could contain
 his curiosity no longer, and asked again, "you really like that
 stuff, huh?" jonl said, "yeah, i've been eating it constantly back
 in palo alto for the past two days. in fact, i think this batch is
 about as good as the cones i got back in palo alto!"
g.b.t.c. looked him straight in the eye and said, "you're *in* palo
alto!"
jonl turned slowly around, and saw the three of us collapse in a
fit of giggles. he clapped a hand to his forehead and exclaimed,
"i've been hacked!"
[my spies on the west coast inform me that there is a close relative
of the raspberry found out there called an `olallieberry' —- esr]
 [ironic footnote: it appears that the {meme} about ginger vs.
 rotting meat may be an urban legend. it's not borne out by an
 examination of medieval recipes or period purchase records for
 spices, and appears full-blown in the works of samuel pegge, a
 gourmand and notorious flake case who originated numerous food
 myths. —- esr]
:sagan: /say'gn/ [from carl sagan's tv series "cosmos";
 think "billions and billions"] n. a large quantity of anything.
 "there's a sagan different ways to tweak emacs." "the
 u.s. government spends sagans on bombs and welfare —- hard to say
 which is more destructive."
:sail:: /sayl/, not /s-a-i-l/ n. . stanford artificial
 intelligence lab. an important site in the early development of
 lisp; with the mit ai lab, bbn, cmu, xerox parc, and the unix
 community, one of the major wellsprings of technical innovation and
 hacker-culture traditions (see the {{waits}} entry for details).
 the sail machines were officially shut down in late may , scant
 weeks after the mit ai lab's its cluster was officially
 decommissioned. . the stanford artificial intelligence language
 used at sail (sense ). it was an algol- derivative with a
 coroutining facility and some new data types intended for building
 search trees and association lists.
:salescritter: /sayls'kri`tr/ n. pejorative hackerism for a computer
 salesperson. hackers tell the following joke:
q. what's the difference between a used-car dealer and a
computer salesman?
a. the used-car dealer knows he's lying. [some versions add:
…and probably knows how to drive.]
 this reflects the widespread hacker belief that salescritters are
 self-selected for stupidity (after all, if they had brains and the
 inclination to use them, they'd be in programming). the terms
 `salesthing' and `salesdroid' are also common. compare
 {marketroid}, {suit}, {droid}.
:salsman: /salz'm*n/ v. to flood a mailing list or newsgroup with
huge amounts of useless, trivial or redundant information. from
the name of a hacker who has frequently done this on some widely
distributed mailing lists.
:salt mines: n. dense quarters housing large numbers of programmers
working long hours on grungy projects, with some hope of seeing the
end of the tunnel in n years. noted for their absence of sunshine.
compare {playpen}, {sandbox}.
:salt substrate: [mit] n. collective noun used to refer to potato
chips, pretzels, saltines, or any other form of snack food
designed primarily as a carrier for sodium chloride. from the
technical term `chip substrate', used to refer to the silicon on the
top of which the active parts of integrated circuits are deposited.
:same-day service: n. ironic term used to describe long response
time, particularly with respect to {{ms-dos}} system calls (which
ought to require only a tiny fraction of a second to execute).
such response time is a major incentive for programmers to write
programs that are not {well-behaved}. see also {pc-ism}.
:samurai: n. a hacker who hires out for legal cracking jobs,
 snooping for factions in corporate political fights, lawyers
 pursuing privacy-rights and first amendment cases, and other
 parties with legitimate reasons to need an electronic locksmith.
 in , mainstream media reported the existence of a loose-knit
 culture of samurai that meets electronically on bbs systems, mostly
 bright teenagers with personal micros; they have modeled
 themselves explicitly on the historical samurai of japan and on the
 "net cowboys" of william gibson's {cyberpunk} novels. those
 interviewed claim to adhere to a rigid ethic of loyalty to their
 employers and to disdain the vandalism and theft practiced by
 criminal crackers as beneath them and contrary to the hacker ethic;
 some quote miyamoto musashi's `book of five rings', a classic
 of historical samurai doctrine, in support of these principles.
 see also {stupids}, {social engineering}, {cracker},
 {hacker ethic, the}, and {dark-side hacker}.
:sandbender: [ibm] n. a person involved with silicon lithography and
 the physical design of chips. compare {ironmonger}, {polygon
 pusher}.
:sandbox: n. . (also `sandbox, the') common term for the
 r&d department at many software and computer companies (where hackers
 in commercial environments are likely to be found). half-derisive,
 but reflects the truth that research is a form of creative play.
 compare {playpen}. . syn. {link farm}
:sanity check: n. . the act of checking a piece of code (or
 anything else, e.g., a usenet posting) for completely stupid mistakes.
 implies that the check is to make sure the author was sane when it
 was written; e.g., if a piece of scientific software relied on a
 particular formula and was giving unexpected results, one might
 first look at the nesting of parentheses or the coding of the
 formula, as a `sanity check', before looking at the more complex
 i/o or data structure manipulation routines, much less the
 algorithm itself. compare {reality check}. . a run-time test,
 either validating input or ensuring that the program hasn't screwed
 up internally (producing an inconsistent value or state).
:saturday-night special: [from police slang for a cheap handgun] n.
a program or feature kluged together during off hours, under a
deadline, and in response to pressure from a {salescritter}.
such hacks are dangerously unreliable, but all too often sneak into
a production release after insufficient review.
:say: vt. . to type to a terminal. "to list a directory
 verbosely, you have to say `ls -l'." tends to imply a
 {newline}-terminated command (a `sentence'). . a computer
 may also be said to `say' things to you, even if it doesn't have
 a speech synthesizer, by displaying them on a terminal in response
 to your commands. hackers find it odd that this usage confuses
 {mundane}s.
:scag: vt. to destroy the data on a disk, either by corrupting the
 filesystem or by causing media damage. "that last power hit scagged
 the system disk." compare {scrog}, {roach}.
:scanno: n. an error in a document caused by a scanner glitch,
 analgous to typo or {thinko}.
:schroedinbug: [mit: from the schroedinger's cat thought-experiment in
 quantum physics] n. a design or implementation bug in a program
 which doesn't manifest until someone reading source or using the
 program in an unusual way notices that it never should have worked,
 at which point the program promptly stops working for everybody
 until fixed. though this sounds impossible, it happens; some
 programs have harbored latent schroedinbugs for years. compare
 {heisenbug}, {bohr bug}, {mandelbug}.
:science-fiction fandom:: n. another voluntary subculture having a
 very heavy overlap with hackerdom; most hackers read sf and/or
 fantasy fiction avidly, and many go to `cons' (sf conventions) or
 are involved in fandom-connected activities such as the society for
 creative anachronism. some hacker jargon originated in sf fandom;
 see {defenestration}, {great-wall}, {cyberpunk}, {h}, {ha ha
 only serious}, {imho}, {mundane}, {neep-neep}, {real
 soon now}. additionally, the jargon terms {cowboy},
 {cyberspace}, {de-rezz}, {go flatline}, {ice}, {virus},
 {wetware}, {wirehead}, and {worm} originated in sf
 stories.
:scram switch: [from the nuclear power industry] n. an
 emergency-power-off switch (see {big red switch}), esp. one
 positioned to be easily hit by evacuating personnel. in general,
 this is *not* something you {frob} lightly; these often
 initiate expensive events (such as halon dumps) and are installed
 in a {dinosaur pen} for use in case of electrical fire or in
 case some luckless {field servoid} should put  volts across
 himself while {easter egging}. (see also {molly-guard}.)
:scratch: . [from `scratchpad'] adj. describes a data
 structure or recording medium attached to a machine for testing or
 temporary-use purposes; one that can be {scribble}d on without
 loss. usually in the combining forms `scratch memory',
 `scratch register', `scratch disk', `scratch tape',
 `scratch volume'. see {scratch monkey}. . [primarily
 ibm] vt. to delete (as in a file).
:scratch monkey: n. as in "before testing or reconfiguring, always
 mount a {scratch monkey}", a proverb used to advise caution
 when dealing with irreplaceable data or devices. used to refer to
 any scratch volume hooked to a computer during any risky operation
 as a replacement for some precious resource or data that might
 otherwise get trashed.
 this term preserves the memory of mabel, the swimming wonder
 monkey, star of a biological research program at the university of
 toronto ca. . mabel was not (so the legend goes) your ordinary
 monkey; the university had spent years teaching her how to swim,
 breathing through a regulator, in order to study the effects of
 different gas mixtures on her physiology. mabel suffered an
 untimely demise one day when dec {pm}ed the pdp- controlling
 her regulator (see also {provocative maintenance}).
 it is recorded that, after calming down an understandably irate
 customer sufficiently to ascertain the facts of the matter, a dec
 troubleshooter called up the {field circus} manager responsible
 and asked him sweetly, "can you swim?"
 not all the consequences to humans were so amusing; the sysop of
 the machine in question was nearly thrown in jail at the behest of
 certain clueless droids at the local `humane' society. the moral
 is clear: when in doubt, always mount a scratch monkey.
:screw: [mit] n. a {lose}, usually in software. especially used for
user-visible misbehavior caused by a bug or misfeature. this use
has become quite widespread outside mit.
:screwage: /skroo'*j/ n. like {lossage} but connotes that the
failure is due to a designed-in misfeature rather than a simple
inadequacy or a mere bug.
:scribble: n. to modify a data structure in a random and
 unintentionally destructive way. "bletch! somebody's
 disk-compactor program went berserk and scribbled on the i-node
 table." "it was working fine until one of the allocation routines
 scribbled on low core." synonymous with {trash}; compare {mung},
 which conveys a bit more intention, and {mangle}, which is more
 violent and final.
:scrog: /skrog/ [bell labs] vt. to damage, trash, or corrupt a
 data structure. "the list header got scrogged." also reported
 as `skrog', and ascribed to the comic strip "the wizard of
 id". compare {scag}; possibly the two are related. equivalent
 to {scribble} or {mangle}.
:scrool: /skrool/ [from the pioneering roundtable chat system in
 houston ca. ; prob. originated as a typo for `scroll'] n. the
 log of old messages, available for later perusal or to help one get
 back in synch with the conversation. it was originally called the
 `scrool monster', because an early version of the roundtable
 software had a bug where it would dump all k of scrool on a user's
 terminal.
:scrozzle: /skroz'l/ vt. used when a self-modifying code segment runs
 incorrectly and corrupts the running program or vital data. "the
 damn compiler scrozzled itself again!"
:scruffies: n. see {neats vs. scruffies}.
:scsi: [small computer system interface] n. a bus-independent
standard for system-level interfacing between a computer and
intelligent devices. typically annotated in literature with `sexy'
(/sek'see/), `sissy' (/sis'ee/), and `scuzzy' (/skuh'zee/) as
pronunciation guides —- the last being the overwhelmingly
predominant form, much to the dismay of the designers and their
marketing people. one can usually assume that a person who
pronounces it /s-c-s-i/ is clueless.
:scumos: n. unflattering hackerism for sunos, the unix variant
supported on sun microsystems's unix workstations (see also
{sun-stools}), and compare {aidx}, {terminak},
{macintrash} {nominal semidestructor}, {open deathtrap},
{hp-sux}. despite what this term might suggest, sun was
founded by hackers and still enjoys excellent relations with
hackerdom; usage is more often in exasperation than outright
loathing.
:search-and-destroy mode: n. hackerism for the search-and-replace
 facility in an editor, so called because an incautiously chosen
 match pattern can cause {infinite} damage.
:second-system effect: n. (sometimes, more euphoniously,
 `second-system syndrome') when one is designing the successor to
 a relatively small, elegant, and successful system, there is a
 tendency to become grandiose in one's success and design an
 {elephantine} feature-laden monstrosity. the term was first
 used by fred brooks in his classic `the mythical man-month:
 essays on software engineering' (addison-wesley, ; isbn
 ---). it described the jump from a set of nice, simple
 operating systems on the ibm xx series to os/ on the
  series. a similar effect can also happen in an evolving
 system; see {brooks's law}, {creeping elegance}, {creeping
 featurism}. see also {{multics}}, {os/}, {x}, {software
 bloat}.
 this version of the jargon lexicon has been described (with
 altogether too much truth for comfort) as an example of
 second-system effect run amok on jargon-….
:secondary damage: n. when a fatal error occurs (esp. a
 {segfault}) the immediate cause may be that a pointer has been
 trashed due to a previous {fandango on core}. however, this
 fandango may have been due to an *earlier* fandango, so no
 amount of analysis will reveal (directly) how the damage occurred.
 "the data structure was clobbered, but it was secondary damage."
 by extension, the corruption resulting from n cascaded
 fandangoes on core is `nth-level damage'. there is at least
 one case on record in which  hours of {grovel}ling with
 `adb' actually dug up the underlying bug behind an instance of
 seventh-level damage! the hacker who accomplished this
 near-superhuman feat was presented with an award by his fellows.
:security through obscurity: n. a name applied by hackers to most
 os vendors' favorite way of coping with security holes —- namely,
 ignoring them and not documenting them and trusting that nobody
 will find out about them and that people who do find out about them
 won't exploit them. this never works for long and occasionally
 sets the world up for debacles like the {rtm} worm of  (see
 {great worm, the}), but once the brief moments of panic created
 by such events subside most vendors are all too willing to turn
 over and go back to sleep. after all, actually fixing the bugs
 would siphon off the resources needed to implement the next
 user-interface frill on marketing's wish list —- and besides, if
 they started fixing security bugs customers might begin to
 *expect* it and imagine that their warranties of
 merchantability gave them some sort of *right* to a system
 with fewer holes in it than a shotgunned swiss cheese, and
 *then* where would we be?
 historical note: there are conflicting stories about the origin of
 this term. it has been claimed that it was first used in the
 usenet newsgroup in comp.sys.apollo during a campaign to get
 hp/apollo to fix security problems in its unix-{clone}
 aegis/domainos (they didn't change a thing). {its} fans, on the
 other hand, say it was coined years earlier in opposition to the
 incredibly paranoid {multics} people down the hall, for whom
 security was everything. in the its culture it referred to () the
 fact that that by the time a tourist figured out how to make
 trouble he'd generally gotten over the urge to make it, because he
 felt part of the community; and () (self-mockingly) the poor
 coverage of the documentation and obscurity of many commands. one
 instance of *deliberate* security through obscurity is
 recorded; the command to allow patching the running its system
 ({altmode} altmode control-r) echoed as $$^d. if you actually
 typed alt alt ^d, that set a flag which would prevent patching the
 system even if you later got it right.
:sed: [tmrc, from `light-emitting diode'] /s-e-d/ n.
smoke-emitting diode. a {friode} that lost the war. see
:segfault: n.,vi. syn. {segment}, {seggie}.
:seggie: /seg'ee/ [unix] n. shorthand for {segmentation fault}
 reported from britain.
:segment: /seg'ment/ vi. to experience a {segmentation fault}.
 confusingly, this is often pronounced more like the noun `segment'
 than like mainstream v. segment; this is because it is actually a
 noun shorthand that has been verbed.
:segmentation fault: n. [unix] . an error in which a running program
 attempts to access memory not allocated to it and {core dump}s
 with a segmentation violation error. . to lose a train of
 thought or a line of reasoning. also uttered as an exclamation at
 the point of befuddlement.
:segv: /seg'vee/ n.,vi. yet another synonym for {segmentation
 fault} (actually, in this case, `segmentation violation').
:self-reference: n. see {self-reference}.
:selvage: /sel'v*j/ [from sewing] n. see {chad} (sense ).
:semi: /se'mee/ or /se'mi:/ . n. abbreviation for
 `semicolon', when speaking. "commands to {grind} are
 prefixed by semi-semi-star" means that the prefix is `;;*',
 not / of a star. . a prefix used with words such as
 `immediately' as a qualifier. "when is the system coming up?"
 "semi-immediately." (that is, maybe not for an hour.) "we did
 consider that possibility semi-seriously." see also
 {infinite}.
:semi-infinite: n. see {infinite}.
:senior bit: [ibm] n. syn. {meta bit}.
:server: n. a kind of {daemon} that performs a service for the
 requester and which often runs on a computer other than the one on
 which the server runs. a particularly common term on the internet,
 which is rife with `name servers', `domain servers', `news
 servers', `finger servers', and the like.
:sex: /seks/ [sun users' group & elsewhere] n. . software
 exchange. a technique invented by the blue-green algae hundreds of
 millions of years ago to speed up their evolution, which had been
 terribly slow up until then. today, sex parties are popular among
 hackers and others (of course, these are no longer limited to
 exchanges of genetic software). in general, sex parties are a
 {good thing}, but unprotected sex can propagate a {virus}.
 see also {pubic directory}. . the rather freudian mnemonic
 often used for sign extend, a machine instruction found in the
 pdp- and many other architectures. the rca  chip used in the
 early elf and superelf personal computers had a `set x register'
 sex instruction, but this seems to have had little folkloric
 impact.
 dec's engineers nearly got a pdp- assembler that used the
 `sex' mnemonic out the door at one time, but (for once)
 marketing wasn't asleep and forced a change. that wasn't the last
 time this happened, either. the author of `the intel 
 primer', who was one of the original designers of the , noted
 that there was originally a `sex' instruction on that
 processor, too. he says that intel management got cold feet and
 decreed that it be changed, and thus the instruction was renamed
 `cbw' and `cwd' (depending on what was being extended).
 amusingly, the intel  (the microcontroller used in ibm pc
 keyboards) is also missing straight `sex' but has logical-or
 and logical-and instructions `orl' and `anl'.
 the motorola , used in the u.k.'s `dragon ' personal
 computer, actually had an official `sex' instruction; the 
 in the apple ii it competed with did not. british hackers thought
 this made perfect mythic sense; after all, it was commonly
 observed, you could (on some theoretical level) have sex with a
 dragon, but you can't have sex with an apple.
:sex changer: n. syn. {gender mender}.
:shambolic link: n. a unix symbolic link, particularly when it
 confuses you, points to nothing at all, or results in you ending up
 in some completely unexpected part of the filesystem….
:shareware: /sheir'weir/ n. {freeware} (sense ) for which the
 author requests some payment, usually in the accompanying
 documentation files or in an announcement made by the software
 itself. such payment may or may not buy additional support or
 functionality. see also {careware}, {charityware},
 {crippleware}, {guiltware}, {postcardware}, and
 {-ware}; compare {payware}.
:shelfware: /shelfweir/ n. software purchased on a whim (by an
 individual user) or in accordance with policy (by a corporation or
 government agency), but not actually required for any particular
 use. therefore, it often ends up on some shelf.
:shell: [orig. {{multics}} techspeak, widely propagated via unix] n.
 . [techspeak] the command interpreter used to pass commands to an
 operating system; so called because it is the part of the operating
 system that interfaces with the outside world. . more generally,
 any interface program that mediates access to a special resource
 or {server} for convenience, efficiency, or security reasons; for
 this meaning, the usage is usually `a shell around' whatever.
 this sort of program is also called a `wrapper'.
:shell out: [unix] n. to spawn an interactive {subshell} from
 within a program (e.g., a mailer or editor). "bang foo runs foo in
 a subshell, while bang alone shells out."
:shift left (or right) logical: [from any of various machines'
 instruction sets] . vi. to move oneself to the left (right). to
 move out of the way. . imper. "get out of that (my) seat! you
 can shift to that empty one to the left (right)." often
 used without the `logical', or as `left shift' instead of
 `shift left'. sometimes heard as lsh /lish/, from the {pdp-}
 instruction set. see {programmer's cheer}.
:shim: n. a small piece of data inserted in order to achieve a
 desired memory alignment or other addressing property. for
 example, the pdp- unix linker, in split i&d (instructions and
 data) mode, inserts a two-byte shim at location  in data space so
 that no data object will have an address of  (and be confused with
 the c null pointer). see also {loose bytes}.
:shitogram: /shit'oh-gram/ n. a *really* nasty piece of email.
 compare {nastygram}, {flame}.
:short card: n. a half-length ibm pc expansion card or adapter that
will fit in one of the two short slots located towards the right
rear of a standard chassis (tucked behind the floppy disk drives).
see also {tall card}.
:shotgun debugging: n. the software equivalent of {easter egging};
the making of relatively undirected changes to software in the hope
that a bug will be perturbed out of existence. this almost never
works, and usually introduces more bugs.
:showstopper: n. a hardware or (especially) software bug that makes
 an implementation effectively unusable; one that absolutely has to
 be fixed before development can go on. opposite in connotation
 from its original theatrical use, which refers to something
 stunningly *good*.
:shriek: n. see {excl}. occasional cmu usage, also in common use
 among apl fans and mathematicians, especially category theorists.
:shub-internet: /shuhb in't*r-net/ [mud: from h. p. lovecraft's
 evil fictional deity `shub-niggurath', the black goat with a
 thousand young] n. the harsh personification of the internet,
 beast of a thousand processes, eater of characters, avatar of line
 noise, and imp of call waiting; the hideous multi-tendriled entity
 formed of all the manifold connections of the net. a sect of
 mudders worships shub-internet, sacrificing objects and praying for
 good connections. to no avail —- its purpose is malign and evil,
 and is the cause of all network slowdown. often heard as in
 "freela casts a tac nuke at shub-internet for slowing her down."
 (a forged response often follows along the lines of:
 "shub-internet gulps down the tac nuke and burps happily.") also
 cursed by users of {ftp} and {telnet} when the system slows
 down. the dread name of shub-internet is seldom spoken aloud, as
 it is said that repeating it three times will cause the being to
 wake, deep within its lair beneath the pentagon.
:sidecar: n. . syn. {slap on the side}. esp. used of add-ons
 for the late and unlamented ibm pcjr. . the ibm pc compatibility
 box that could be bolted onto the side of an amiga. designed and
 produced by commodore, it broke all of the company's own rules.
 if it worked with any other peripherals, it was by {magic}.
:sig: n. the association for computing machinery traditionally
 sponsors special interest groups in various technical areas;
 well-known ones include sigarch (the special interest group for
 computer architecture) and siggraph (the special interest group for
 computer graphics). hackers, not surprisingly, like to overextend
 this naming convention to less formal associations like sigbeer (at
 acm conferences) and sigfood (at university of illinois).
:sig block: /sig blok/ [unix; often written `.sig' there] n.
 short for `signature', used specifically to refer to the
 electronic signature block that most unix mail- and news-posting
 software will {automagically} append to outgoing mail and news.
 the composition of one's sig can be quite an art form, including an
 ascii logo or one's choice of witty sayings (see {sig quote},
 {fool file, the}); but many consider large sigs a waste of
 {bandwidth}, and it has been observed that the size of one's sig
 block is usually inversely proportional to one's longevity and
 level of prestige on the net.
:sig quote: /sig kwoht/ [usenet] n. a maxim, quote, proverb, joke,
 or slogan embedded in one's {sig block} and intended to convey
 something of one's philosophical stance, pet peeves, or sense of
 humor. "calm down, it's only ones and zeroes."
:sig virus: n. a parasitic {meme} embedded in a {sig block}.
 there was a {meme plague} or fad for these on usenet in late
 . most were equivalents of "i am a .sig virus. please reproduce
 me in your .sig block.". of course, the .sig virus's memetic hook
 is the giggle value of going along with the gag; this, however,
 was a self-limiting phenomenon as more and more people picked up
 on the idea. there were creative variants on it; some people
 stuck `sig virus antibody' texts in their sigs, and there was at
 least one instance of a sig virus eater.
:signal-to-noise ratio: [from analog electronics] n. used by hackers
 in a generalization of its technical meaning. `signal' refers to
 useful information conveyed by some communications medium, and
 `noise' to anything else on that medium. hence a low ratio implies
 that it is not worth paying attention to the medium in question.
 figures for such metaphorical ratios are never given. the term is
 most often applied to {usenet} newsgroups during {flame war}s.
 compare {bandwidth}. see also {coefficient of x}, {lost in
 the noise}.
:silicon: n. hardware, esp. ics or microprocessor-based computer
 systems (compare {iron}). contrasted with software. see also
 {sandbender}.
:silicon foundry: n. a company that {fab}s chips to the designs
 of others. as of the late s, the combination of silicon
 foundries and good computer-aided design software made it much
 easier for hardware-designing startup companies to come into being.
 the downside of using a silicon foundry is that the distance from
 the actual chip-fabrication processes reduces designers' control of
 detail. this is somewhat analogous to the use of {hll}s versus
 coding in assembler.
:silly walk: [from monty python's flying circus] vi. . a ridiculous
 procedure required to accomplish a task. like {grovel}, but more
 {random} and humorous. "i had to silly-walk through half the
 /usr directories to find the maps file." . syn. {fandango on
 core}.
:silo: n. the fifo input-character buffer in an rs- line card. so
called from dec terminology used on dh and dz line cards for the
vax and pdp-, presumably because it was a storage space for
fungible stuff that you put in the top and took out the bottom.
:silver book: n. jensen and wirth's infamous `pascal user manual
and report', so called because of the silver cover of the
widely distributed springer-verlag second edition of  (isbn
---). see {{book titles}}, {pascal}.
:since time t equals minus infinity: adj. a long time ago; for as
long as anyone can remember; at the time that some particular frob
was first designed. usually the word `time' is omitted. see also
{time t}.
:sitename: /si:t'naym/ [unix/internet] n. the unique electronic
 name of a computer system, used to identify it in uucp mail,
 usenet, or other forms of electronic information interchange. the
 folklore interest of sitenames stems from the creativity and humor
 they often display. interpreting a sitename is not unlike
 interpreting a vanity license plate; one has to mentally unpack it,
 allowing for mono-case and length restrictions and the lack of
 whitespace. hacker tradition deprecates dull,
 institutional-sounding names in favor of punchy, humorous, and
 clever coinages (except that it is considered appropriate for the
 official public gateway machine of an organization to bear the
 organization's name or acronym). mythological references, cartoon
 characters, animal names, and allusions to sf or fantasy literature
 are probably the most popular sources for sitenames (in roughly
 descending order). the obligatory comment when discussing these is
 harris's lament: "all the good ones are taken!" see also
 {network address}.
:skrog: v. syn. {scrog}.
:skulker: n. syn. {prowler}.
:slap on the side: n. (also called a {sidecar}, or abbreviated
 `sots'.) a type of external expansion hardware marketed by
 computer manufacturers (e.g., commodore for the amiga /
 series and ibm for the hideous failure called `pcjr'). various
 sots boxes provided necessities such as memory, hard drive
 controllers, and conventional expansion slots.
:slash: n. common name for the slant (`/', ascii )
 character. see {ascii} for other synonyms.
:sleep: vi. . [techspeak] on a timesharing system, a process that
 relinquishes its claim on the scheduler until some given event
 occurs or a specified time delay elapses is said to `go to
 sleep'. . in jargon, used very similarly to v. {block}; also
 in `sleep on', syn. with `block on'. often used to
 indicate that the speaker has relinquished a demand for resources
 until some (possibly unspecified) external event: "they can't get
 the fix i've been asking for into the next release, so i'm going to
 sleep on it until the release, then start hassling them again."
:slim: n. a small, derivative change (e.g., to code).
:slop: n. . a one-sided {fudge factor}, that is, an allowance for
 error but in only one of two directions. for example, if you need
 a piece of wire  feet long and have to guess when you cut it,
 you make very sure to cut it too long, by a large amount if
 necessary, rather than too short by even a little bit, because you
 can always cut off the slop but you can't paste it back on again.
 when discrete quantities are involved, slop is often introduced to
 avoid the possibility of being on the losing side of a {fencepost
 error}. . the percentage of `extra' code generated by a compiler
 over the size of equivalent assembler code produced by
 {hand-hacking}; i.e., the space (or maybe time) you lose because
 you didn't do it yourself. this number is often used as a measure
 of the goodness of a compiler; slop below % is very good, and
 % is usually acceptable. with modern compiler technology, esp.
 on risc machines, the compiler's slop may actually be
 *negative*; that is, humans may be unable to generate code as
 good. this is one of the reasons assembler programming is no
 longer common.
:slopsucker: /slop'suhk-r/ n. a lowest-priority task that must
 wait around until everything else has `had its fill' of machine
 resources. only when the machine would otherwise be idle is the
 task allowed to `suck up the slop'. also called a `hungry puppy'
 or `bottom feeder'. one common variety of slopsucker hunts for
 large prime numbers. compare {background}.
:slurp: vt. to read a large data file entirely into {core} before
 working on it. this may be contrasted with the strategy of reading
 a small piece at a time, processing it, and then reading the next
 piece. "this program slurps in a k-by-k matrix and does
 an fft." see also {sponge}.
:smart: adj. said of a program that does the {right thing} in a
 wide variety of complicated circumstances. there is a difference
 between calling a program smart and calling it intelligent; in
 particular, there do not exist any intelligent programs (yet —-
 see {ai-complete}). compare {robust} (smart programs can be
 {brittle}).
:smart terminal: n. . a terminal that has enough computing capability
 to render graphics or to offload some kind of front-end processing
 from the computer it talks to. the development of workstations and
 personal computers has made this term and the product it describes
 semi-obsolescent, but one may still hear variants of the phrase
 `act like a smart terminal' used to describe the behavior of
 workstations or pcs with respect to programs that execute almost
 entirely out of a remote {server}'s storage, using said devices
 as displays. compare {glass tty}. . obs. any terminal with an
 addressable cursor; the opposite of a {glass tty}. today, a
 terminal with merely an addressable cursor, but with none of the
 more-powerful features mentioned in sense , is called a {dumb
 terminal}.
 there is a classic quote from rob pike (inventor of the {blit}
 terminal): "a smart terminal is not a smart*ass* terminal,
 but rather a terminal you can educate." this illustrates a common
 design problem: the attempt to make peripherals (or anything else)
 intelligent sometimes results in finicky, rigid `special
 features' that become just so much dead weight if you try to use
 the device in any way the designer didn't anticipate. flexibility
 and programmability, on the other hand, are *really* smart.
 compare {hook}.
:smash case: vi. to lose or obliterate the uppercase/lowercase
 distinction in text input. "ms-dos will automatically smash case
 in the names of all the files you create." compare {fold case}.
:smash the stack: [c programming] n. on many c implementations it
 is possible to corrupt the execution stack by writing past the end
 of an array declared `auto' in a routine. code that does this
 is said to `smash the stack', and can cause return from the
 routine to jump to a random address. this can produce some of the
 most insidious data-dependent bugs known to mankind. variants
 include `trash' the stack, {scribble} the stack, {mangle}
 the stack; the term *{mung} the stack is not used, as this is
 never done intentionally. see {spam}; see also {aliasing
 bug}, {fandango on core}, {memory leak}, {memory smash},
 {precedence lossage}, {overrun screw}.
:smiley: n. see {emoticon}.
:smoke and mirrors: n. marketing deceptions. the term is
 mainstream in this general sense. among hackers it's strongly
 associated with bogus demos and crocked {benchmark}s (see also
 {mips}, {machoflops}). "they claim their new box cranks 
 mips for under $, but didn't specify the instruction mix —-
 sounds like smoke and mirrors to me." the phrase has been said to
 derive from carnie slang for magic acts and `freak show' displays
 that depend on `trompe l'oeil' effects, but also calls to mind
 the fierce aztec god tezcatlipoca (lit. "smoking mirror") to whom
 mass human sacrifices were regularly made. upon hearing about a
 rigged demo or yet another round of fantasy-based marketing
 promises hackers often feel similarly disheartened.
:smoke test: n. . a rudimentary form of testing applied to
 electronic equipment following repair or reconfiguration, in which
 power is applied and the tester checks for sparks, smoke, or other
 dramatic signs of fundamental failure. see {magic smoke}.
 . by extension, the first run of a piece of software after
 construction or a critical change. see and compare {reality
 check}.
 there is an interesting semi-parallel to this term among
 typographers and printers: when new typefaces are being punch-cut by
 hand, a `smoke test' (hold the letter in candle smoke, then press
 it onto paper) is used to check out new dies.
:smoking clover: [its] n. a {display hack} originally due to
 bill gosper. many convergent lines are drawn on a color monitor in
 {aos} mode (so that every pixel struck has its color
 incremented). the lines all have one endpoint in the middle of the
 screen; the other endpoints are spaced one pixel apart around the
 perimeter of a large square. the color map is then repeatedly
 rotated. this results in a striking, rainbow-hued, shimmering
 four-leaf clover. gosper joked about keeping it hidden from the
 fda (the u.s.'s food and drug administration) lest its
 hallucinogenic properties cause it to be banned.
:smop: /s-m-o-p/ [simple (or small) matter of programming] n.
 . a piece of code, not yet written, whose anticipated length is
 significantly greater than its complexity. used to refer to a
 program that could obviously be written, but is not worth the
 trouble. also used ironically to imply that a difficult problem
 can be easily solved because a program can be written to do it; the
 irony is that it is very clear that writing such a program will be
 a great deal of work. "it's easy to enhance a fortran compiler to
 compile cobol as well; it's just a smop." . often used
 ironically by the intended victim when a suggestion for a program
 is made which seems easy to the suggester, but is obviously (to the
 victim) a lot of work.
:smurf: /smerf/ [from the soc.motss newsgroup on usenet,
 after some obnoxiously gooey cartoon characters] n. a newsgroup
 regular with a habitual style that is irreverent, silly, and
 cute. like many other hackish terms for people, this one may
 be praise or insult depending on who uses it. in general, being
 referred to as a smurf is probably not going to make your day
 unless you've previously adopted the label yourself in a spirit of
 irony. compare {old fart}.
:snafu principle: /sna'foo prin'si-pl/ [from wwii army acronym
 for `situation normal, all fucked up'] n. "true communication is
 possible only between equals, because inferiors are more
 consistently rewarded for telling their superiors pleasant lies
 than for telling the truth." —- a central tenet of
 {discordianism}, often invoked by hackers to explain why
 authoritarian hierarchies screw up so reliably and systematically.
 the effect of the snafu principle is a progressive disconnection of
 decision-makers from reality. this lightly adapted version of a
 fable dating back to the early s illustrates the phenomenon
 perfectly:
in the beginning was the plan,
and then the specification;
and the plan was without form,
and the specification was void.
and darkness
was on the faces of the implementors thereof;
and they spake unto their leader,
saying:
"it is a crock of shit,
and smells as of a sewer."
and the leader took pity on them,
and spoke to the project leader:
"it is a crock of excrement,
and none may abide the odor thereof."
and the project leader
spake unto his section head, saying:
"it is a container of excrement,
and it is very strong, such that none may abide it."
the section head then hurried to his department manager,
and informed him thus:
"it is a vessel of fertilizer,
and none may abide its strength."
the department manager carried these words
to his general manager,
and spoke unto him
saying:
"it containeth that which aideth the growth of plants,
and it is very strong."
and so it was that the general manager rejoiced
and delivered the good news unto the vice president.
"it promoteth growth,
and it is very powerful."
the vice president rushed to the president's side,
and joyously exclaimed:
"this powerful new software product
will promote the growth of the company!"
and the president looked upon the product,
and saw that it was very good.
 after the subsequent disaster, the {suit}s protect themselves by
 saying "i was misinformed!", and the implementors are demoted or
 fired.
:snail: vt. to {snail-mail} something. "snail me a copy of those
 graphics, will you?"
:snail-mail: n. paper mail, as opposed to electronic. sometimes
 written as the single word `snailmail'. one's postal address is,
 correspondingly, a `snail address'. derives from earlier coinage
 `usnail' (from `u.s. mail'), for which there have been
 parody posters and stamps made. oppose {email}.
:snap: v. to replace a pointer to a pointer with a direct pointer;
 to replace an old address with the forwarding address found there.
 if you telephone the main number for an institution and ask for a
 particular person by name, the operator may tell you that person's
 extension before connecting you, in the hopes that you will `snap
 your pointer' and dial direct next time. the underlying metaphor
 may be that of a rubber band stretched through a number of
 intermediate points; if you remove all the thumbtacks in the
 middle, it snaps into a straight line from first to last. see
 {chase pointers}.
 often, the behavior of a {trampoline} is to perform an error
 check once and then snap the pointer that invoked it so as
 henceforth to bypass the trampoline (and its one-shot error check).
 in this context one also speaks of `snapping links'. for
 example, in a lisp implementation, a function interface trampoline
 might check to make sure that the caller is passing the correct
 number of arguments; if it is, and if the caller and the callee are
 both compiled, then snapping the link allows that particular path
 to use a direct procedure-call instruction with no further
 overhead.
:snarf: /snarf/ vt. . to grab, esp. to grab a large document
 or file for the purpose of using it with or without the author's
 permission. see also {blt}. . [in the unix community] to
 fetch a file or set of files across a network. see also
 {blast}. this term was mainstream in the late s, meaning
 `to eat piggishly'. it may still have this connotation in context.
 "he's in the snarfing phase of hacking —- {ftp}ing megs of
 stuff a day." . to acquire, with little concern for legal forms
 or politesse (but not quite by stealing). "they were giving
 away samples, so i snarfed a bunch of them." . syn. for
 {slurp}. "this program starts by snarfing the entire database
 into core, then…."
:snarf & barf: /snarf'n-barf`/ n. under a {wimp environment},
 the act of grabbing a region of text and then stuffing the contents
 of that region into another region (or the same one) to avoid
 retyping a command line. in the late s, this was a mainstream
 expression for an `eat now, regret it later' cheap-restaurant
 expedition.
:snarf down: v. to {snarf}, with the connotation of absorbing,
 processing, or understanding. "i'll snarf down the latest
 version of the {nethack} user's guide —- it's been a while
 since i played last and i don't know what's changed recently."
:snark: [lewis carroll, via the michigan terminal system] n. . a
 system failure. when a user's process bombed, the operator would
 get the message "help, help, snark in mts!" . more generally,
 any kind of unexplained or threatening event on a computer
 (especially if it might be a boojum). often used to refer to an
 event or a log file entry that might indicate an attempted security
 violation. see {snivitz}. . uucp name of
 snark.thyrsus.com, home site of the jargon file .*.* versions
 (i.e., this lexicon).
:sneakernet: /snee'ker-net/ n. term used (generally with ironic
 intent) for transfer of electronic information by physically
 carrying tape, disks, or some other media from one machine to
 another. "never underestimate the bandwidth of a station wagon
 filled with magtape, or a  filled with cd-roms." also called
 `tennis-net', `armpit-net', `floppy-net' or `shoenet'.
:sniff: v.,n. synonym for {poll}.
:snivitz: /sniv'itz/ n. a hiccup in hardware or software; a small,
 transient problem of unknown origin (less serious than a
 {snark}). compare {glitch}.
:so: /s-o/ n. . (also `s.o.') abbrev. for significant
 other, almost invariably written abbreviated and pronounced
 /s-o/ by hackers. used to refer to one's primary
 relationship, esp. a live-in to whom one is not married. see
 {motas}, {motos}, {motss}. . the shift out control
 character in ascii (control-n, ).
:social engineering: n. term used among {cracker}s and
 {samurai} for cracking techniques that rely on weaknesses in
 {wetware} rather than software; the aim is to trick people into
 revealing passwords or other information that compromises a target
 system's security. classic scams include phoning up a mark who has
 the required information and posing as a field service tech or a
 fellow employee with an urgent access problem. see also the
 {tiger team} story in the {patch} entry.
:social science number: [ibm] n. a statistic that is
 {content-free}, or nearly so. a measure derived via methods of
 questionable validity from data of a dubious and vague nature.
 predictively, having a social science number in hand is seldom much
 better than nothing, and can be considerably worse. {management}
 loves them. see also {numbers}, {math-out}, {pretty
 pictures}.
:soft boot: n. see {boot}.
:softcopy: /soft'ko-pee/ n. [by analogy with `hardcopy'] a
machine-readable form of corresponding hardcopy. see {bits},
{machinable}.
:software bloat: n. the results of {second-system effect} or
{creeping featuritis}. commonly cited examples include
`ls()', {x}, {bsd}, {missed'em-five}, and {os/}.
:software rot: n. term used to describe the tendency of software
 that has not been used in a while to {lose}; such failure may be
 semi-humorously ascribed to {bit rot}. more commonly,
 `software rot' strikes when a program's assumptions become out
 of date. if the design was insufficiently {robust}, this may
 cause it to fail in mysterious ways.
 for example, owing to endemic shortsightedness in the design of
 cobol programs, most will succumb to software rot when their
 -digit year counters {wrap around} at the beginning of the
 year . actually, related lossages often afflict centenarians
 who have to deal with computer software designed by unimaginative
 clods. one such incident became the focus of a minor public flap
 in , when a gentleman born in  applied for a driver's
 license renewal in raleigh, north carolina. the new system
 refused to issue the card, probably because with -digit years the
 ages  and  cannot be distinguished.
 historical note: software rot in an even funnier sense than the
 mythical one was a real problem on early research computers (e.g.,
 the r; see {grind crank}). if a program that depended on a
 peculiar instruction hadn't been run in quite a while, the user
 might discover that the opcodes no longer did the same things they
 once did. ("hey, so-and-so needs an instruction to do
 such-and-such. we can {snarf} this opcode, right? no one uses
 it.")
 another classic example of this sprang from the time an mit hacker
 found a simple way to double the speed of the unconditional jump
 instruction on a pdp-, so he patched the hardware. unfortunately,
 this broke some fragile timing software in a music-playing program,
 throwing its output out of tune. this was fixed by adding a
 defensive initialization routine to compare the speed of a timing
 loop with the real-time clock; in other words, it figured out how
 fast the pdp- was that day, and corrected appropriately.
 compare {bit rot}.
:softwarily: /soft-weir'i-lee/ adv. in a way pertaining to software.
 "the system is softwarily unreliable." the adjective
 `softwary' is *not* used. see {hardwarily}.
:softy: [ibm] n. hardware hackers' term for a software expert who
 is largely ignorant of the mysteries of hardware.
:some random x: adj. used to indicate a member of class x, with the
 implication that xs are interchangeable. "i think some random
 cracker tripped over the guest timeout last night." see also
 {j. random}.
:sorcerer's apprentice mode: [from friedrich schiller's `der
 zauberlehrling' via the film "fantasia"] n. a bug in a
 protocol where, under some circumstances, the receipt of a message
 causes multiple messages to be sent, each of which, when received,
 triggers the same bug. used esp. of such behavior caused by
 {bounce message} loops in {email} software. compare
 {broadcast storm}, {network meltdown}.
:sos: n.,obs. /s-o-s/ . an infamously {losing} text editor.
 once, back in the s, when a text editor was needed for the
 pdp-, a hacker crufted together a {quick-and-dirty} `stopgap
 editor' to be used until a better one was written. unfortunately,
 the old one was never really discarded when new ones (in
 particular, {teco}) came along. sos is a descendant (`son of
 stopgap') of that editor, and many pdp- users gained the dubious
 pleasure of its acquaintance. since then other programs similar in
 style to sos have been written, notably the early font editor bilos
 /bye'lohs/, the brother-in-law of stopgap (the alternate expansion
 `bastard issue, loins of stopgap' has been proposed). . /sos/
 n. to decrease; inverse of {aos}, from the pdp- instruction
 set.
:source of all good bits: n. a person from whom (or a place from
 which) useful information may be obtained. if you need to know
 about a program, a {guru} might be the source of all good bits.
 the title is often applied to a particularly competent secretary.
:space-cadet keyboard: n. a now-legendary device used on mit lisp
 machines, which inspired several still-current jargon terms and
 influenced the design of {emacs}. it was equipped with no
 fewer than *seven* shift keys: four keys for {bucky bits}
 (`control', `meta', `hyper', and `super') and three like
 regular shift keys, called `shift', `top', and `front'. many
 keys had three symbols on them: a letter and a symbol on the top,
 and a greek letter on the front. for example, the `l' key had an
 `l' and a two-way arrow on the top, and the greek letter lambda on
 the front. by pressing this key with the right hand while playing
 an appropriate `chord' with the left hand on the shift keys, you
 can get the following results:
lowercase l
shift-l
uppercase l
front-l
lowercase lambda
front-shift-l
uppercase lambda
 top-l
 two-way arrow
 (front and shift are ignored)
 and of course each of these might also be typed with any
 combination of the control, meta, hyper, and super keys. on this
 keyboard, you could type over  different characters! this
 allowed the user to type very complicated mathematical text, and
 also to have thousands of single-character commands at his
 disposal. many hackers were actually willing to memorize the
 command meanings of that many characters if it reduced typing time
 (this attitude obviously shaped the interface of emacs). other
 hackers, however, thought having that many bucky bits was overkill,
 and objected that such a keyboard can require three or four hands
 to operate. see {bucky bits}, {cokebottle}, {double bucky},
 {meta bit}, {quadruple bucky}.
 note: early versions of this entry incorrectly identified the
 space-cadet keyboard with the `knight keyboard'. though both
 were designed by tom knight, the latter term was properly applied
 only to a keyboard used for its on the pdp- and modeled
 on the stanford keyboard (as described under {bucky bits}). the
 true space-cadet keyboard evolved from the knight keyboard.
:spacewar: n. a space-combat simulation game, inspired by
 e. e. "doc" smith's "lensman" books, in which two spaceships
 duel around a central sun, shooting torpedoes at each other and
 jumping through hyperspace. this game was first implemented on the
 pdp- at mit in —. spacewar aficionados formed the core of
 the early hacker culture at mit. nine years later, a descendant
 of the game motivated ken thompson to build, in his spare time on a
 scavenged pdp-, the operating system that became {{unix}}. less
 than nine years after that, spacewar was commercialized as one of
 the first video games; descendants are still {feep}ing in video
 arcades everywhere.
:spaghetti code: n. code with a complex and tangled control
 structure, esp. one using many gotos, exceptions, or other
 `unstructured' branching constructs. pejorative. the synonym
 `kangaroo code' has been reported, doubtless because such code
 has many jumps in it.
:spaghetti inheritance: n. [encountered among users of object-oriented
 languages that use inheritance, such as smalltalk] a convoluted
 class-subclass graph, often resulting from carelessly deriving
 subclasses from other classes just for the sake of reusing their
 code. coined in a (successful) attempt to discourage such
 practice, through guilt-by-association with {spaghetti code}.
:spam: [from the {mud} community] vt. to crash a program by overrunning
 a fixed-size buffer with excessively large input data. see also
 {buffer overflow}, {overrun screw}, {smash the stack}.
:special-case: vt. to write unique code to handle input to or
 situations arising in program that are somehow distinguished from
 normal processing. this would be used for processing of mode
 switches or interrupt characters in an interactive interface (as
 opposed, say, to text entry or normal commands), or for processing
 of {hidden flag}s in the input of a batch program or {filter}.
:speedometer: n. a pattern of lights displayed on a linear set of
 leds (today) or nixie tubes (yesterday, on ancient mainframes).
 the pattern is shifted left every n times the software goes
 through its main loop. a swiftly moving pattern indicates that the
 system is mostly idle; the speedometer slows down as the system
 becomes overloaded. the speedometer on sun microsystems hardware
 bounces back and forth like the eyes on one of the cylons from the
 wretched "battlestar galactica" tv series.
 historical note: one computer, the honeywell  (later ge )
 actually had an *analog* speedometer on the front panel,
 calibrated in instructions executed per second.
:spell: n. syn. {incantation}.
:spiffy: /spi'fee/ adj. . said of programs having a pretty,
 clever, or exceptionally well-designed interface. "have you seen
 the spiffy {x} version of {empire} yet?" . said
 sarcastically of a program that is perceived to have little more
 than a flashy interface going for it. which meaning should be
 drawn depends delicately on tone of voice and context. this word
 was common mainstream slang during the s, in a sense close to #.
:spike: v. to defeat a selection mechanism by introducing a
 (sometimes temporary) device which forces a specific result. the
 word is used in several industries; telephone engineers refer to
 spiking a relay by inserting a pin to hold the relay in either the
 closed or open state, and railroaders refer to spiking a
 track switch so that it cannot be moved. in programming
 environments it normally refers to a temporary change, usually for
 testing purposes (as opposed to a permanent change which would be
 called {hardwired}).
:spin: vi. equivalent to {buzz}. more common among c and unix
 programmers.
:spl: /s-p-l/ [abbrev, from set priority level] the way
 traditional unix kernels implement mutual exclusion by running code
 at high interrupt levels. used in jargon to describe the act of
 tuning in or tuning out ordinary communication. classically, spl
 levels run from  to ; "fred's at spl  today." would mean
 that he is very hard to interrupt. "wait till i finish this; i'll
 spl down then." see also {interrupts locked out}.
:splat: n. . name used in many places (dec, ibm, and others) for
the asterisk (`*') character (ascii ). this may derive
from the `squashed-bug' appearance of the asterisk on many early
line printers. . [mit] name used by some people for the
`#' character (ascii ). . [rochester institute of
technology] the {feature key} on a mac (same as {alt},
sense ). . [stanford] name used by some people for the
stanford/its extended ascii
circle-x
character. this character is also called `blobby' and `frob',
among other names; it is sometimes used by mathematicians as a
notation for `tensor product'. . [stanford] name for the
semi-mythical extended ascii
circle-plus
character. . canonical name for an output routine that outputs
whatever the local interpretation of `splat' is.
with its and waits gone, senses — are now nearly obsolete. see
also {{ascii}}.
:spod: [great britain] n. a lower form of life found on {talker
 system}s and {mud}s. the spod has few friends in {rl} and
 uses talkers instead, finding communication easier and preferable
 over the net. he has all the negative traits of the {computer
 geek} without having any interest in computers per se. lacking any
 knowledge of or interest in how networks work, and considering his
 access a god-given right, he is a major irritant to sysadmins,
 clogging up lines in order to reach new muds, following passed-on
 instructions on how to sneak his way onto internet ("wow! it's in
 america!") and complaining when he is not allowed to use busy
 routes. a true spod will start any conversation with "are you
 male or female?" (and follow it up with "got any good
 numbers/ids/passwords?") and will not talk to someone physically
 present in the same terminal room until they log onto the same
 machine that he is using and enter talk mode. compare {newbie},
 {tourist}, {weenie}, {twink}, {terminal junkie}.
:sponge: [unix] n. a special case of a {filter} that reads its
 entire input before writing any output; the canonical example is a
 sort utility. unlike most filters, a sponge can conveniently
 overwrite the input file with the output data stream. if your file
 system has versioning (as its did and vms does now) the
 sponge/filter distinction loses its usefulness, because directing
 filter output would just write a new version. see also {slurp}.
:spooge: /spooj/ . n. inexplicable or arcane code, or random
 and probably incorrect output from a computer program. . vi. to
 generate spooge (sense ).
:spool: [from early ibm `simultaneous peripheral operation
 on-line', but this acronym is widely thought to have been contrived
 for effect] vt. to send files to some device or program (a
 `spooler') that queues them up and does something useful with
 them later. the spooler usually understood is the `print
 spooler' controlling output of jobs to a printer, but the term has
 been used in connection with other peripherals (especially plotters
 and graphics devices) and occasionally even for input devices. see
 also {demon}.
:spool file: n. any file to which data is {spool}ed to await the
 next stage of processing. especially used in circumstances where
 spooling the data copes with a mismatch between speeds in two
 devices or pieces of software. for example, when you send mail
 under unix, it's typically copied to a spool file to await a
 transport {demon}'s attentions. this is borderline techspeak.
:square tape: n. mainframe magnetic tape cartridges for use with ibm 
 or compatible tape drives. the term comes from the square (actually
 rectangular) shape of the cartridges; contrast {round tape}.
:stack: n. a person's stack is the set of things he or she has to do
 in the future. one speaks of the next project to be attacked as
 having risen to the top of the stack. "i'm afraid i've got real
 work to do, so this'll have to be pushed way down on my stack."
 "i haven't done it yet because every time i pop my stack something
 new gets pushed." if you are interrupted several times in the
 middle of a conversation, "my stack overflowed" means "i
 forget what we were talking about." the implication is that more
 items were pushed onto the stack than could be remembered, so the
 least recent items were lost. the usual physical example of a
 stack is to be found in a cafeteria: a pile of plates or trays
 sitting on a spring in a well, so that when you put one on the top
 they all sink down, and when you take one off the top the rest
 spring up a bit. see also {push} and {pop}.
 at mit, {pdl} used to be a more common synonym for {stack} in
 all these contexts, and this may still be true. everywhere else
 {stack} seems to be the preferred term. {knuth}
 (`the art of computer programming', second edition, vol. ,
 p. ) says:
 many people who realized the importance of stacks and queues
 independently have given other names to these structures:
 stacks have been called push-down lists, reversion storages,
 cellars, nesting stores, piles, last-in-first-out ("lifo")
 lists, and even yo-yo lists!
:stack puke: n. some processor architectures are said to `puke their
 guts onto the stack' to save their internal state during exception
 processing. the motorola , for example, regurgitates up to
  bytes on a bus fault. on a pipelined machine, this can take a
 while.
:stale pointer bug: n. synonym for {aliasing bug} used esp. among
 microcomputer hackers.
:state: n. . condition, situation. "what's the state of your
 latest hack?" "it's winning away." "the system tried to read
 and write the disk simultaneously and got into a totally wedged
 state." the standard question "what's your state?" means
 "what are you doing?" or "what are you about to do?" typical
 answers are "about to gronk out", or "hungry". another
 standard question is "what's the state of the world?", meaning
 "what's new?" or "what's going on?". the more terse and
 humorous way of asking these questions would be "state-p?".
 another way of phrasing the first question under sense  would be
 "state-p latest hack?". . information being maintained in
 non-permanent memory (electronic or human).
:steam-powered: adj. old-fashioned or underpowered; archaic. this
term does not have a strong negative loading and may even be used
semi-affectionately for something that clanks and wheezes a lot
but hangs in there doing the job.
:stiffy: [university of lowell, massachusetts.] n. .-inch
{microfloppies}, so called because their jackets are more firm
than those of the .-inch and the -inch floppy. elsewhere this
might be called a `firmy'.
:stir-fried random: alt. `stir-fried mumble' n. term used for the
 best dish of many of those hackers who can cook. consists of
 random fresh veggies and meat wokked with random spices. tasty and
 economical. see {random}, {great-wall}, {ravs}, {{laser
 chicken}}, {{oriental food}}; see also {mumble}.
:stomp on: vt. to inadvertently overwrite something important, usually
 automatically. "all the work i did this weekend got
 stomped on last night by the nightly server script." compare
 {scribble}, {mangle}, {trash}, {scrog}, {roach}.
:stone age: n., adj. . in computer folklore, an ill-defined period
 from eniac (ca. ) to the mid-s; the great age of
 electromechanical {dinosaur}s. sometimes used for the entire
 period up to — (see {iron age}); however, it is funnier
 and more descriptive to characterize the latter period in terms of
 a `bronze age' era of transistor-logic, pre-ferrite-{core}
 machines with drum or crt mass storage (as opposed to just mercury
 delay lines and/or relays). see also {iron age}. . more
 generally, a pejorative for any crufty, ancient piece of hardware
 or software technology. note that this is used even by people who
 were there for the {stone age} (sense ).
:stone knives and bearskins: [its, prob. from the star trek classic
 episode "the city on the edge of forever"] n. a term traditionally
 used by {its} fans to describe (and deprecate) computing
 environments they regard as less advanced, with the (often
 correct) implication that said environments were grotesquely
 primitive in light of what is known about good ways to design
 things. as in "don't get too used to the facilities here. once
 you leave mit it's stone knives and bearskins as far as the eye can
 see". compare {steam-powered}.
:stoppage: /sto'p*j/ n. extreme {lossage} that renders
 something (usually something vital) completely unusable. "the
 recent system stoppage was caused by a {fried} transformer."
:store: [prob. from techspeak `main store'] n. preferred commonwealth
 synonym for {core}. thus, `bringing a program into store' means
 not that one is returning shrink-wrapped software but that a
 program is being {swap}ped in.
:stroke: n. common name for the slant (`/', ascii )
character. see {ascii} for other synonyms.
:strudel: n. common (spoken) name for the at-sign (`@', ascii
) character. see {ascii} for other synonyms.
:stubroutine: /stuhb'roo-teen/ [contraction of `stub
 subroutine'] n. tiny, often vacuous placeholder for a subroutine
 that is to be written or fleshed out later.
:studlycaps: /stuhd'lee-kaps/ n. a hackish form of silliness
 similar to {bicapitalization} for trademarks, but applied
 randomly and to arbitrary text rather than to trademarks. the
 origin and significance of this practice is obscure.
:stunning: adj. mind-bogglingly stupid. usually used in sarcasm.
 "you want to code *what* in ada? that's … a stunning
 idea!"
:stupid-sort: n. syn. {bogo-sort}.
:stupids: n. term used by {samurai} for the {suit}s who
 employ them; succinctly expresses an attitude at least as common,
 though usually better disguised, among other subcultures of
 hackers. there may be intended reference here to an sf story
 originally published in  but much anthologized since, mark
 clifton's `star, bright'. in it, a super-genius child
 classifies humans into a very few `brights' like herself, a huge
 majority of `stupids', and a minority of `tweens', the merely
 ordinary geniuses.
:subshell: /suhb'shel/ [unix, ms-dos] n. an os command interpreter
 (see {shell}) spawned from within a program, such that exit from
 the command interpreter returns one to the parent program in a
 state that allows it to continue execution. compare {shell out};
 oppose {chain}.
:sucking mud: [applied data research] adj. (also `pumping
 mud') crashed or wedged. usually said of a machine that provides
 some service to a network, such as a file server. this dallas
 regionalism derives from the east texas oilfield lament, "shut
 'er down, ma, she's a-suckin' mud". often used as a query. "we
 are going to reconfigure the network, are you ready to suck mud?"
:sufficiently small: adj. syn. {suitably small}.
:suit: n. . ugly and uncomfortable `business clothing' often
 worn by non-hackers. invariably worn with a `tie', a
 strangulation device that partially cuts off the blood supply to
 the brain. it is thought that this explains much about the
 behavior of suit-wearers. compare {droid}. . a person who
 habitually wears suits, as distinct from a techie or hacker. see
 {loser}, {burble}, {management}, {stupids}, {snafu
 principle}, and {brain-damaged}. english, by the way, is
 relatively kind; our moscow correspondent informs us that the
 corresponding idiom in russian hacker jargon is `sovok', lit. a
 tool for grabbing garbage.
:suitable win: n. see {win}.
:suitably small: [perverted from mathematical jargon] adj. an
 expression used ironically to characterize unquantifiable
 behavior that differs from expected or required behavior. for
 example, suppose a newly created program came up with a correct
 full-screen display, and one publicly exclaimed: "it works!"
 then, if the program dumps core on the first mouse click, one might
 add: "well, for suitably small values of `works'." compare
 the characterization of pi under {{random numbers}}.
:sun lounge: [great britain] n. the room where all the sun
 workstations live. the humor in this term comes from the fact
 that it's also in mainstream use to describe a solarium, and all
 those sun workstations clustered together give off an amazing
 amount of heat.
:sun-stools: n. unflattering hackerism for suntools, a pre-x
 windowing environment notorious in its day for size, slowness, and
 misfeatures. {x}, however, is larger and slower; see
 {second-system effect}.
:sunspots: n. . notional cause of an odd error. "why did the
 program suddenly turn the screen blue?" "sunspots, i guess."
 . also the cause of {bit rot} —- from the myth that sunspots
 will increase {cosmic rays}, which can flip single bits in memory.
 see {cosmic rays}, {phase of the moon}.
:superprogrammer: n. a prolific programmer; one who can code
 exceedingly well and quickly. not all hackers are
 superprogrammers, but many are. (productivity can vary from one
 programmer to another by three orders of magnitude. for example,
 one programmer might be able to write an average of  lines of
 working code in one day, while another, with the proper tools,
 might be able to write ,. this range is astonishing; it is
 matched in very few other areas of human endeavor.) the term
 `superprogrammer' is more commonly used within such places as ibm
 than in the hacker community. it tends to stress na"ive measures
 of productivity and to underweight creativity, ingenuity, and
 getting the job *done* —- and to sidestep the question of
 whether the , lines of code do more or less useful work than
 three lines that do the {right thing}. hackers tend to prefer
 the terms {hacker} and {wizard}.
:superuser: [unix] n. syn. {root}, {avatar}. this usage has
 spread to non-unix environments; the superuser is any account with
 all {wheel} bits on. a more specific term than {wheel}.
:support: n. after-sale handholding; something many software
vendors promise but few deliver. to hackers, most support people
are useless —- because by the time a hacker calls support he or
she will usually know the relevant manuals better than the support
people (sadly, this is *not* a joke or exaggeration). a
hacker's idea of `support' is a t^ete-`a-t^ete with the
software's designer.
:suzie cobol: /soo'zee koh'bol/ . [ibm: prob. from frank zappa's
`suzy creamcheese'] n. a coder straight out of training school who
knows everything except the value of comments in plain english.
also (fashionable among personkind wishing to avoid accusations of
sexism) `sammy cobol' or (in some non-ibm circles) `cobol charlie'.
. [proposed] meta-name for any {code grinder}, analogous to
{j. random hacker}.
:swab: /swob/ [from the mnemonic for the pdp- `swap byte'
instruction, as immortalized in the `dd()' option `conv=swab'
(see {dd})] . vt. to solve the {nuxi problem} by swapping
bytes in a file. . n. the program in v unix used to perform this
action, or anything functionally equivalent to it. see also
{big-endian}, {little-endian}, {middle-endian},
{bytesexual}.
:swap: vt. . [techspeak] to move information from a fast-access
 memory to a slow-access memory (`swap out'), or vice versa
 (`swap in'). often refers specifically to the use of disks as
 `virtual memory'. as pieces of data or program are needed, they
 are swapped into {core} for processing; when they are no longer
 needed they may be swapped out again. . the jargon use of these
 terms analogizes people's short-term memories with core. cramming
 for an exam might be spoken of as swapping in. if you temporarily
 forget someone's name, but then remember it, your excuse is that it
 was swapped out. to `keep something swapped in' means to keep it
 fresh in your memory: "i reread the teco manual every few months
 to keep it swapped in." if someone interrupts you just as you got
 a good idea, you might say "wait a moment while i swap this
 out", implying that the piece of paper is your extra-somatic
 memory and if you don't swap the info out by writing it down it
 will get overwritten and lost as you talk. compare {page in},
 {page out}.
:swap space: n. storage space, especially temporary storage space
 used during a move or reconfiguration. "i'm just using that corner
 of the machine room for swap space."
:swapped in: n. see {swap}. see also {page in}.
:swapped out: n. see {swap}. see also {page out}.
:swizzle: v. to convert external names, array indices, or references
 within a data structure into address pointers when the data
 structure is brought into main memory from external storage (also
 called `pointer swizzling'); this may be done for speed in
 chasing references or to simplify code (e.g., by turning lots of
 name lookups into pointer dereferences). the converse operation is
 sometimes termed `unswizzling'. see also {snap}.
:sync: /sink/ (var. `synch') n., vi. . to synchronize, to
 bring into synchronization. . [techspeak] to force all pending
 i/o to the disk; see {flush}, sense . . more generally, to
 force a number of competing processes or agents to a state that
 would be `safe' if the system were to crash; thus, to checkpoint
 (in the database-theory sense).
:syntactic sugar: [coined by peter landin] n. features added to a
 language or other formalism to make it `sweeter' for humans,
 that do not affect the expressiveness of the formalism (compare
 {chrome}). used esp. when there is an obvious and trivial
 translation of the `sugar' feature into other constructs already
 present in the notation. c's `a[i]' notation is syntactic
 sugar for `*(a + i)'. "syntactic sugar causes cancer of the
 semicolon." —- alan perlis.
 the variants `syntactic saccharine' and `syntactic syrup' are
 also recorded. these denotes something even more gratuitous, in
 that syntactic sugar serves a purpose (making something more
 acceptable to humans) but syntactic saccharine or syrup serves no
 purpose at all. compare {candygrammar}.
:sys-frog: /sis'frog/ [the plato system] n. playful variant of
`sysprog', which is in turn short for `systems programmer'.
:sysadmin: /sis'ad-min/ n. common contraction of `system
admin'; see {admin}.
:sysape: /sysape/ n. a rather derogatory term for a computer
 operator; a play on {sysop} common at sites that use the banana
 hierarchy of problem complexity (see {one-banana
 problem}).
:sysop: /sis'op/ n. [esp. in the bbs world] the operator (and
 usually the owner) of a bulletin-board system. a common neophyte
 mistake on {fidonet} is to address a message to `sysop' in an
 international {echo}, thus sending it to hundreds of sysops
 around the world.
:system: n. . the supervisor program or os on a computer. . the
 entire computer system, including input/output devices, the
 supervisor program or os, and possibly other software. . any
 large-scale program. . any method or algorithm. . `system
 hacker': one who hacks the system (in senses  and  only; for
 sense  one mentions the particular program: e.g., `lisp
 hacker')
:systems jock: n. see {jock}, (sense ).
:system mangler: n. humorous synonym for `system manager', poss.
 from the fact that one major ibm os had a {root} account called
 sysmangr. refers specifically to a systems programmer in charge of
 administration, software maintenance, and updates at some site.
 unlike {admin}, this term emphasizes the technical end of the
 skills involved.
:sysvile: /sis-vi:l'/ n. see {missed'em-five}.
:t: /t/ . [from lisp terminology for `true'] yes. used in
 reply to a question (particularly one asked using the `-p'
 convention). in lisp, the constant t means `true', among other
 things. some hackers use `t' and `nil' instead of `yes' and `no'
 almost reflexively. this sometimes causes misunderstandings. when
 a waiter or flight attendant asks whether a hacker wants coffee, he
 may well respond `t', meaning that he wants coffee; but of course
 he will be brought a cup of tea instead. as it happens, most
 hackers (particularly those who frequent chinese restaurants) like
 tea at least as well as coffee —- so it is not that big a problem.
 . see {time t} (also {since time t equals minus infinity}).
 . [techspeak] in transaction-processing circles, an abbreviation
 for the noun `transaction'. . [purdue] alternate spelling of
 {tee}. . a dialect of {lisp} developed at yale.
:tail recursion: n. if you aren't sick of it already, see {tail
 recursion}.
:talk mode: n. a feature supported by unix, its, and some other
 oses that allows two or more logged-in users to set up a real-time
 on-line conversation. it combines the immediacy of talking with
 all the precision (and verbosity) that written language entails.
 it is difficult to communicate inflection, though conventions have
 arisen for some of these (see the section on writing style in the
 prependices for details).
 talk mode has a special set of jargon words, used to save typing,
 which are not used orally. some of these are identical to (and
 probably derived from) morse-code jargon used by ham-radio amateurs
 since the s.
be seeing you
by the way
are you ready to unlink? (this is the standard way to end a
talk-mode conversation; the other person types `bye' to
confirm, or else continues the conversation)
see you later
are you busy? (expects `ack' or `nak' in return)
are you there? (often used on unexpected links, meaning also
"sorry if i butted in …" (linker) or "what's up?" (linkee))
for your information
for your amusement
go ahead (used when two people have tried to type
simultaneously; this cedes the right to type to the other)
grumble (expresses disquiet or disagreement)
hello? (an instance of the `-p' convention)
just a minute (equivalent to `sec….')
same as `jam'
no (see {nil})
over to you
over and out
another form of "over to you" (from x/y as "x over y")
lambda (used in discussing lispy things)
oh, by the way
are you there?
wait a second (sometimes written `sec…')
yes (see the main entry for {t})
thanks
thanks a million (humorous)
another form of "thanks a million"
with regard to, or with respect to.
the universal interrogative particle; wtf knows what it means?
what the hell?
<double newline>
when the typing party has finished, he/she types two newlines
to signal that he/she is done; this leaves a blank line
between `speeches' in the conversation, making it easier to
reread the preceding text.
<name>:
when three or more terminals are linked, it is conventional
for each typist to {prepend} his/her login name or handle and
a colon (or a hyphen) to each line to indicate who is typing
(some conferencing facilities do this automatically). the
login name is often shortened to a unique prefix (possibly a
single letter) during a very long conversation.
a giggle or chuckle. on a mud, this usually means `earthquake
fault'.
most of the above sub-jargon is used at both stanford and mit.
several of these expressions are also common in {email}, esp.
fyi, fya, btw, bcnu, wtf, and cul. a few other abbreviations have
been reported from commercial networks, such as genie and
compuserve, where on-line `live' chat including more than two
people is common and usually involves a more `social' context,
notably the following:
<g>
grin
<gr&d>
grinning, running, and ducking
be back later
be right back
ha ha only joking
ha ha only kidding
{ha ha only serious}
in my humble opinion (see {imho})
laughing out loud
never heard of him/her (often used in {initgame})
rolling on the floor
rolling on the floor laughing
away from keyboard
b
before
cu ltr
see you later
male or female?
ta-ta for now
talk to you later
oh, i see
rehi
hello again
 most of these are not used at universities or in the unix world,
 though rotf and ttfn have gained some currency there and imho is
 common; conversely, most of the people who know these are
 unfamiliar with foo?, bcnu, hellop, {nil}, and {t}.
 the {mud} community uses a mixture of usenet/internet emoticons,
 a few of the more natural of the old-style talk-mode abbrevs, and
 some of the `social' list above; specifically, mud respondents
 report use of bbl, brb, lol, b, btw, wtf, ttfn, and wth. the use
 of `rehi' is also common; in fact, mudders are fond of re-
 compounds and will frequently `rehug' or `rebonk' (see
 {bonk/oif}) people. the word `re' by itself is taken as
 `regreet'. in general, though, mudders express a preference for
 typing things out in full rather than using abbreviations; this may
 be due to the relative youth of the mud cultures, which tend to
 include many touch typists and to assume high-speed links. the
 following uses specific to muds are reported:
are you ok?
thanks (mutant of `tnx'; clearly this comes in batches of 
(the lucasian k)).
cu ler
see you later (mutant of `cu ltr')
over the top (excessive, uncalled for)
fuck off and die (use of this is often ott)
some {biff}isms (notably the variant spelling `dd')
appear to be passing into wider use among some subgroups of
mudders.
 one final note on talk mode style: neophytes, when in talk mode,
 often seem to think they must produce letter-perfect prose because
 they are typing rather than speaking. this is not the best
 approach. it can be very frustrating to wait while your partner
 pauses to think of a word, or repeatedly makes the same spelling
 error and backs up to fix it. it is usually best just to leave
 typographical errors behind and plunge forward, unless severe
 confusion may result; in that case it is often fastest just to type
 "xxx" and start over from before the mistake.
 see also {hakspek}, {emoticon}, {bonk/oif}.
:talker system: n. british hackerism for software that enables
 real-time chat or {talk mode}.
:tall card: n. a pc/at-size expansion card (these can be larger
 than ibm pc or xt cards because the at case is bigger). see also
 {short card}. when ibm introduced the ps/ model  (its last
 gasp at supporting the isa) they made the case lower and many
 industry-standard tall cards wouldn't fit; this was felt to be a
 reincarnation of the {connector conspiracy}, done with less
 style.
:tanked: adj. same as {down}, used primarily by unix hackers. see
 also {hosed}. popularized as a synonym for `drunk' by steve
 dallas in the late lamented "bloom county" comic strip.
:tanstaafl: /tan'stah-fl/ [acronym, from robert heinlein's
 classic `the moon is a harsh mistress'.] "there ain't no
 such thing as a free lunch", often invoked when someone is balking
 at an ugly design requirement or the prospect of using an
 unpleasantly {heavyweight} technique. "what? don't tell me i
 have to implement a database back end to get my address book
 program to work!" "well, tanstaafl you know." this phrase owes
 some of its popularity to the high concentration of science-fiction
 fans and political libertarians in hackerdom (see appendix
:tar and feather: [from unix `tar()'] vt. to create a
 transportable archive from a group of files by first sticking them
 together with `tar()' (the tape archiver) and then
 compressing the result (see {compress}). the latter action is
 dubbed `feathering' by analogy to what you do with an airplane
 propeller to decrease wind resistance, or with an oar to reduce
 water resistance; smaller files, after all, slip through comm links
 more easily.
:taste: [primarily mit] n. . the quality in a program that tends
 to be inversely proportional to the number of features, hacks, and
 kluges programmed into it. also `tasty', `tasteful',
 `tastefulness'. "this feature comes in n tasty flavors."
 although `tasteful' and `flavorful' are essentially
 synonyms, `taste' and {flavor} are not. taste refers to
 sound judgment on the part of the creator; a program or feature
 can *exhibit* taste but cannot *have* taste. on the other
 hand, a feature can have {flavor}. also, {flavor} has the
 additional meaning of `kind' or `variety' not shared by
 `taste'. {flavor} is a more popular word than `taste',
 though both are used. see also {elegant}. . alt. sp. of
 {tayste}.
:tayste: /tayst/ n. two bits; also as {taste}. syn. {crumb},
 {quarter}. compare {{byte}}, {dynner}, {playte},
 {nybble}, {quad}.
:tcb: /t-c-b/ [ibm] n. . trouble came back. an intermittent or
 difficult-to-reproduce problem that has failed to respond to
 neglect. compare {heisenbug}. not to be confused with:
 . trusted computing base, an `official' jargon term from the
 {orange book}.
:tea, iso standard cup of: [south africa] n. a cup of tea with milk
 and one teaspoon of sugar, where the milk is poured into the cup
 before the tea. variations are iso , with no sugar; iso , with
 two spoons of sugar; and so on.
 like many iso standards, this one has a faintly alien ring in north
 america, where hackers generally shun the decadent british practice
 of adulterating perfectly good tea with dairy products and
 prefer instead to add a wedge of lemon, if anything. if one were
 feeling extremely silly, one might hypothesize an analogous `ansi
 standard cup of tea' and wind up with a political situation
 distressingly similar to several that arise in much more serious
 technical contexts. milk and lemon don't mix very well.
:techref: /tek'ref/ [ms-dos] n. the original `ibm pc
 technical reference manual', including the bios listing and
 complete schematics for the pc. the only pc documentation in the
 issue package that's considered serious by real hackers.
:teco: /tee'koh/ obs. . vt. originally, to edit using the teco
 editor in one of its infinite variations (see below). . vt.,obs.
 to edit even when teco is *not* the editor being used! this
 usage is rare and now primarily historical. . [originally an
 acronym for `[paper] tape editor and corrector'; later, `text
 editor and corrector'] n. a text editor developed at mit and
 modified by just about everybody. with all the dialects included,
 teco might have been the most prolific editor in use before
 {emacs}, to which it was directly ancestral. noted for its
 powerful programming-language-like features and its unspeakably
 hairy syntax. it is literally the case that every string of
 characters is a valid teco program (though probably not a useful
 one); one common hacker game used to be mentally working out what
 the teco commands corresponding to human names did. as an example
 of teco's obscurity, here is a teco program that takes a list of
 names such as:
loser, j. random
quux, the great
dick, moby
sorts them alphabetically according to surname, and then puts the
surname last, removing the comma, to produce the following:
moby dick
j. random loser
the great quux
 the program is
 (where ^b means `control-b' (ascii ) and $ is actually
 an {alt} or escape (ascii ) character).
 in fact, this very program was used to produce the second, sorted
 list from the first list. the first hack at it had a {bug}: gls
 (the author) had accidentally omitted the `@' in front
 of `f^b', which as anyone can see is clearly the {wrong thing}. it
 worked fine the second time. there is no space to describe all the
 features of teco, but it may be of interest that `^p' means
 `sort' and `j<.-z; … l>' is an idiomatic series of commands
 for `do once for every line'.
 in mid-, teco is pretty much one with the dust of history,
 having been replaced in the affections of hackerdom by {emacs}.
 descendants of an early (and somewhat lobotomized) version adopted
 by dec can still be found lurking on vms and a couple of crufty
 pdp- operating systems, however, and ports of the more advanced
 mit versions remain the focus of some antiquarian interest. see
 also {retrocomputing}, {write-only language}.
:tee: n.,vt. [purdue] a carbon copy of an electronic transmission.
 "oh, you're sending him the {bits} to that? slap on a tee for
 me." from the unix command `tee()', itself named after a
 pipe fitting (see {plumbing}). can also mean `save one for me',
 as in "tee a slice for me!" also spelled `t'.
:telerat: /tel'*-rat/ n. unflattering hackerism for `teleray', a
line of extremely losing terminals. compare {aidx}, {terminak},
{macintrash} {nominal semidestructor}, {open deathtrap},
{scumos}, {sun-stools}, {hp-sux}.
:telnet: /tel'net/ vt. to communicate with another internet host
 using the {telnet} protocol (usually using a program of the same
 name). tops- people used the word impcom, since that was the
 program name for them. sometimes abbreviated to tn /t-n/. "i
 usually tn over to sail just to read the ap news."
:ten-finger interface: n. the interface between two networks that
 cannot be directly connected for security reasons; refers to the
 practice of placing two terminals side by side and having an
 operator read from one and type into the other.
:tense: adj. of programs, very clever and efficient. a tense piece
 of code often got that way because it was highly {bum}med, but
 sometimes it was just based on a great idea. a comment in a clever
 routine by mike kazar, once a grad-student hacker at cmu: "this
 routine is so tense it will bring tears to your eyes." a tense
 programmer is one who produces tense code.
:tenured graduate student: n. one who has been in graduate school
 for  years (the usual maximum is  or ): a `ten-yeared'
 student (get it?). actually, this term may be used of any grad
 student beginning in his seventh year. students don't really get
 tenure, of course, the way professors do, but a tenth-year graduate
 student has probably been around the university longer than any
 untenured professor.
:tera-: /te'r*/ [si] pref. see {{quantifiers}}.
:teraflop club: /te'r*-flop kluhb/ [flop = floating point
 operation] n. a mythical association of people who consume
 outrageous amounts of computer time in order to produce a few
 simple pictures of glass balls with intricate ray-tracing
 techniques. caltech professor james kajiya is said to have been
 the founder.
:terminak: /ter'mi-nak`/ [caltech, ca. ] n. any
 malfunctioning computer terminal. a common failure mode of
 lear-siegler adm a terminals caused the `l' key to produce the
 `k' code instead; complaints about this tended to look like
 "terminak # has a bad keyboard. pkease fix." see {aidx},
 {nominal semidestructor}, {open deathtrap}, {scumos},
 {sun-stools}, {telerat}, {hp-sux}.
:terminal brain death: n. the extreme form of {terminal illness}
 (sense ). what someone who has obviously been hacking
 continuously for far too long is said to be suffering from.
:terminal illness: n. . syn. {raster burn}. . the `burn-in'
 condition your crt tends to get if you don't have a screen saver.
:terminal junkie: [uk] n. a {wannabee} or early
 {larval stage} hacker who spends most of his or her time wandering
 the directory tree and writing {noddy} programs just to get
 a fix of computer time. variants include `terminal
 jockey', `console junkie', and {console jockey}. the term
 `console jockey' seems to imply more expertise than the other
 three (possibly because of the exalted status of the {{console}}
 relative to an ordinary terminal). see also {twink},
 {read-only user}.
:terpri: /ter'pree/ [from lisp . (and later, maclisp)] vi. to
 output a {newline}. now rare as jargon, though still used as
 techspeak in common lisp. it is a contraction of `terminate print
 line', named for the fact that, on some early oses and hardware, no
 characters would be printed until a complete line was formed, so
 this operation terminated the line and emitted the output.
:test: n. . real users bashing on a prototype long enough to get
 thoroughly acquainted with it, with careful monitoring and followup
 of the results. . some bored random user trying a couple of the
 simpler features with a developer looking over his or her shoulder,
 ready to pounce on mistakes. judging by the quality of most
 software, the second definition is far more prevalent. see also
 {demo}.
:tex: /tekh/ n. an extremely powerful {macro}-based
 text formatter written by donald e. {knuth}, very popular in the
 computer-science community (it is good enough to have displaced
 unix `troff()', the other favored formatter, even at many
 unix installations). tex fans insist on the correct (guttural)
 pronunciation, and the correct spelling (all caps, squished
 together, with the e depressed below the baseline; the
 mixed-case `tex' is considered an acceptable kluge on ascii-only
 devices). fans like to proliferate names from the word `tex'
 —- such as texnician (tex user), texhacker (tex
 programmer), texmaster (competent tex programmer), texhax,
 and texnique.
 knuth began tex because he had become annoyed at the declining
 quality of the typesetting in volumes i—iii of his monumental
 `art of computer programming' (see {knuth}, also
 {bible}). in a manifestation of the typical hackish urge to
 solve the problem at hand once and for all, he began to design his
 own typesetting language. he thought he would finish it on his
 sabbatical in ; he was wrong by only about  years. the
 language was finally frozen around , but volume iv of `the
 art of computer programming' has yet to appear as of mid-. the
 impact and influence of tex's design has been such that nobody
 minds this very much. many grand hackish projects have started as
 a bit of tool-building on the way to something else; knuth's
 diversion was simply on a grander scale than most.
 tex{} has also been a noteworthy example of free, shared, but
 high-quality software. knuth used to offer monetary awards to people
 who found and reported bugs in it; as the years wore on and the few
 remaining bugs were fixed (and new ones even harder to find), the
 bribe went up. though well-written, tex{} is so large (and so full of
 cutting edge technique) that it is said to have unearthed at least
 one bug in every pascal it has been compiled with.
:text: n. . [techspeak] executable code, esp. a `pure code'
 portion shared between multiple instances of a program running in a
 multitasking os (compare {english}). . textual material in the
 mainstream sense; data in ordinary {{ascii}} or {{ebcdic}}
 representation (see {flat-ascii}). "those are text files;
 you can review them using the editor." these two contradictory
 senses confuse hackers, too.
:thanks in advance: [usenet] conventional net.politeness ending a
posted request for information or assistance. sometimes written
`advthanksance' or `atdhvaannkcse' or abbreviated `tia'. see
{net.-}, {netiquette}.
:that's not a bug, that's a feature!: the {canonical} first
parry in a debate about a purported bug. the complainant, if
unconvinced, is likely to retort that the bug is then at best a
{misfeature}. see also {feature}.
:the x that can be y is not the true x: yet another instance of
 hackerdom's peculiar attraction to mystical references —- a common
 humorous way of making exclusive statements about a class of
 things. the template is from the `tao te ching': "the
 tao which can be spoken of is not the true tao." the implication
 is often that the x is a mystery accessible only to the
 enlightened. see the {trampoline} entry for an example, and
 compare {has the x nature}.
:theology: n. . ironically or humorously used to refer to
 {religious issues}. . technical fine points of an abstruse
 nature, esp. those where the resolution is of theoretical
 interest but is relatively {marginal} with respect to actual use of
 a design or system. used esp. around software issues with a
 heavy ai or language-design component, such as the smart-data vs.
 smart-programs dispute in ai.
:theory: n. the consensus, idea, plan, story, or set of rules that
 is currently being used to inform a behavior. this is a
 generalization and abuse of the technical meaning. "what's the
 theory on fixing this teco loss?" "what's the theory on dinner
 tonight?" ("chinatown, i guess.") "what's the current theory
 on letting lusers on during the day?" "the theory behind this
 change is to fix the following well-known screw…."
:thinko: /thing'koh/ [by analogy with `typo'] n. a momentary,
 correctable glitch in mental processing, especially one involving
 recall of information learned by rote; a bubble in the stream of
 consciousness. syn. {braino}; see also {brain fart}.
 compare {mouso}.
:this can't happen: less clipped variant of {can't happen}.
:this time, for sure!: excl. ritual affirmation frequently uttered
 during protracted debugging sessions involving numerous small
 obstacles (e.g., attempts to bring up a uucp connection). for the
 proper effect, this must be uttered in a fruity imitation of
 bullwinkle j. moose. also heard: "hey, rocky! watch me pull a
 rabbit out of my hat!" the {canonical} response is, of course,
 "but that trick *never* works!" see {{humor, hacker}}.
:thrash: vi. to move wildly or violently, without accomplishing
 anything useful. paging or swapping systems that are overloaded
 waste most of their time moving data into and out of core (rather
 than performing useful computation) and are therefore said to
 thrash. someone who keeps changing his mind (esp. about what to
 work on next) is said to be thrashing. a person frantically trying
 to execute too many tasks at once (and not spending enough time on
 any single task) may also be described as thrashing. compare
 {multitask}.
:thread: n. [usenet, genie, compuserve] common abbreviation of
 `topic thread', a more or less continuous chain of postings on a
 single topic. to `follow a thread' is to read a series of usenet
 postings sharing a common subject or (more correctly) which are
 connected by reference headers. the better newsreaders present
 news in thread order.
:three-finger salute: n. syn. {vulcan nerve pinch}.
:thud: n. . yet another {metasyntactic variable} (see {foo}).
 it is reported that at cmu from the mid-s the canonical series of
 these was `foo', `bar', `thud', `blat'. . rare term
 for the hash character, `#' (ascii ). see {ascii} for
 other synonyms.
:thumb: n. the slider on a window-system scrollbar. so called
 because moving it allows you to browse through the contents of a
 text window in a way analogous to thumbing through a book.
:thunk: /thuhnk/ n. . "a piece of coding which provides an
 address", according to p. z. ingerman, who invented thunks
 in  as a way of binding actual parameters to their formal
 definitions in algol- procedure calls. if a procedure is called
 with an expression in the place of a formal parameter, the compiler
 generates a {thunk} to compute the expression and leave the
 address of the result in some standard location. . later
 generalized into: an expression, frozen together with its
 environment, for later evaluation if and when needed (similar to
 what in techspeak is called a `closure'). the process of
 unfreezing these thunks is called `forcing'. . a
 {stubroutine}, in an overlay programming environment, that loads
 and jumps to the correct overlay. compare {trampoline}.
 . people and activities scheduled in a thunklike manner. "it
 occurred to me the other day that i am rather accurately modeled by
 a thunk —- i frequently need to be forced to completion." —-
 paraphrased from a {plan file}.
 historical note: there are a couple of onomatopoeic myths
 circulating about the origin of this term. the most common is that
 it is the sound made by data hitting the stack; another holds that
 the sound is that of the data hitting an accumulator. yet another
 holds that it is the sound of the expression being unfrozen at
 argument-evaluation time. in fact, according to the inventors, it
 was coined after they realized (in the wee hours after hours of
 discussion) that the type of an argument in algol- could be
 figured out in advance with a little compile-time thought,
 simplifying the evaluation machinery. in other words, it had
 `already been thought of'; thus it was christened a `thunk',
 which is "the past tense of `think' at two in the morning".
:tick: n. . a {jiffy} (sense ). . in simulations, the
 discrete unit of time that passes between iterations of the
 simulation mechanism. in ai applications, this amount of time is
 often left unspecified, since the only constraint of interest is
 the ordering of events. this sort of ai simulation is often
 pejoratively referred to as `tick-tick-tick' simulation,
 especially when the issue of simultaneity of events with long,
 independent chains of causes is {handwave}d. . in the forth
 language, a single quote character.
:tick-list features: [acorn computers] n. features in software or
 hardware that customers insist on but never use (calculators in
 desktop tsrs and that sort of thing). the american equivalent
 would be `checklist features', but this jargon sense of the
 phrase has not been reported.
:tickle a bug: vt. to cause a normally hidden bug to manifest
 through some known series of inputs or operations. "you can
 tickle the bug in the paradise vga card's highlight handling by
 trying to set bright yellow reverse video."
:tiger team: [u.s. military jargon] n. . originally, a team whose
 purpose is to penetrate security, and thus test security measures.
 these people are paid professionals who do hacker-type tricks,
 e.g., leave cardboard signs saying "bomb" in critical defense
 installations, hand-lettered notes saying "your codebooks have
 been stolen" (they usually haven't been) inside safes, etc. after
 a successful penetration, some high-ranking security type shows up
 the next morning for a `security review' and finds the sign,
 note, etc., and all hell breaks loose. serious successes of tiger
 teams sometimes lead to early retirement for base commanders and
 security officers (see the {patch} entry for an example).
 . recently, and more generally, any official inspection team or
 special {firefighting} group called in to look at a problem.
 a subset of tiger teams are professional {cracker}s, testing the
 security of military computer installations by attempting remote
 attacks via networks or supposedly `secure' comm channels. some of
 their escapades, if declassified, would probably rank among the
 greatest hacks of all times. the term has been adopted in
 commercial computer-security circles in this more specific sense.
:time sink: [poss. by analogy with `heat sink' or `current sink'] n.
 a project that consumes unbounded amounts of time.
:time t: /ti:m t/ n. . an unspecified but usually well-understood
 time, often used in conjunction with a later time t+.
 "we'll meet on campus at time t or at louie's at
 time t+" means, in the context of going out for dinner:
 "we can meet on campus and go to louie's, or we can meet at louie's
 itself a bit later." (louie's was a chinese restaurant in palo alto
 that was a favorite with hackers.) had the number  been used instead
 of the number , it would have implied that the travel time from
 campus to louie's is  minutes; whatever time t is (and
 that hasn't been decided on yet), you can meet half an hour later at
 louie's than you could on campus and end up eating at the same time.
 see also {since time t equals minus infinity}.
:times-or-divided-by: [by analogy with `plus-or-minus'] quant.
 term occasionally used when describing the uncertainty associated
 with a scheduling estimate, for either humorous or brutally honest
 effect. for a software project, the scheduling uncertainty factor
 is usually at least .
:tinycrud: /ti:'nee-kruhd/ n. . a pejorative used by habitues of older
 game-oriented {mud} versions for tinymuds and other
 user-extensible {mud} variants; esp. common among users of the
 rather violent and competitive abermud and mist systems. these
 people justify the slur on the basis of how (allegedly)
 inconsistent and lacking in genuine atmosphere the scenarios
 generated in user extensible muds can be. other common knocks on
 them are that they feature little overall plot, bad game topology,
 little competitive interaction, etc. —- not to mention the alleged
 horrors of the tinymud code itself. this dispute is one of the mud
 world's hardiest perennial {holy wars}. . tinymud-oriented
 chat on the usenet group rec.games.mud and elsewhere,
 especially {newbie} questions and flamage.
:tip of the ice-cube: [ibm] n. the visible part of something small and
insignificant. used as an ironic comment in situations where `tip
of the iceberg' might be appropriate if the subject were at all
important.
:tired iron: [ibm] n. hardware that is perfectly functional but
far enough behind the state of the art to have been superseded by new
products, presumably with sufficient improvement in bang-per-buck that
the old stuff is starting to look a bit like a {dinosaur}.
:tits on a keyboard: n. small bumps on certain keycaps to keep
 touch-typists registered (usually on the `' of a numeric
 keypad, and on the `f' and `j' of a qwerty keyboard; but
 the mac, perverse as usual, has them on the `d' and `k'
 keys).
:tla: /t-l-a/ [three-letter acronym] n. . self-describing
 abbreviation for a species with which computing terminology is
 infested. . any confusing acronym. examples include mca, ftp,
 sna, cpu, mmu, sccs, dmu, fpu, nntp, tla. people who like this
 looser usage argue that not all tlas have three letters, just as
 not all four-letter words have four letters. one also hears of
 `etla' (extended three-letter acronym, pronounced /ee tee el
 ay/) being used to describe four-letter acronyms. the term
 `sfla' (stupid four-letter acronym) has also been reported. see
 also {yaba}.
 the self-effacing phrase "tdm tla" (too damn many…) is
 often used to bemoan the plethora of tlas in use. in , a
 random of the journalistic persuasion asked hacker paul boutin
 "what do you think will be the biggest problem in computing in
 the s?" paul's straight-faced response: "there are only
 , three-letter acronyms." (to be exact, there are ^
:tmrc: /tmerk'/ n. the tech model railroad club at mit, one of
 the wellsprings of hacker culture. the  `dictionary of
 the tmrc language' compiled by peter samson included several terms
 which became basics of the hackish vocabulary (see esp. {foo}
 and {frob}).
 by , tmrc's legendary layout was already a marvel of complexity
 (and has grown in the thirty years since; all the features
 described here are still present). the control system alone
 featured about  relays. there were {scram switch}es located
 at numerous places around the room that could be thwacked if
 something undesirable was about to occur, such as a train going
 full-bore at an obstruction. another feature of the system was a
 digital clock on the dispatch, board, which was itself something of
 a wonder in those bygone days before cheap leds and seven-segment
 displays (no model railroad can begin to approximate the scale
 distances between towns and stations, so model railroad timetables
 assume a fast clock so that it seems to take about the right amount
 of time for a train to complete its journey). when someone hit a
 scram switch the clock stopped and the display was replaced with the
 word `foo'; at tmrc the scram switches are therefore called `foo
 switches'.
 steven levy, in his book `hackers' (see the bibliography in
 {appendix c}), gives a stimulating account of those early
 years. tmrc's power and signals group included most of the early
 pdp- hackers and the people who later bacame the core of the mit
 ai lab staff. thirty years later that connection is still very
 much alive, and this lexicon accordingly includes a number of
 entries from a recent revision of the tmrc dictionary.
:tmrcie: /tmerk'ee/, /tuh-merk'ee/ [mit] n. a denizen of {tmrc}.
:to a first approximation: . [techspeak] when one is doing certain
 numerical computations, an approximate solution may be computed by
 any of several heuristic methods, then refined to a final value.
 by using the starting point of a first approximation of the answer,
 one can write an algorithm that converges more quickly to the
 correct result. . in jargon, a preface to any comment that
 indicates that the comment is only approximately true. the remark
 "to a first approximation, i feel good" might indicate that
 deeper questioning would reveal that not all is perfect (e.g., a
 nagging cough still remains after an illness).
:to a zeroth approximation: [from `to a first approximation'] a
 *really* sloppy approximation; a wild guess. compare
 {social science number}.
:toast: . n. any completely inoperable system or component, esp.
 one that has just crashed and burned: "uh, oh … i think the
 serial board is toast." . vt. to cause a system to crash
 accidentally, especially in a manner that requires manual
 rebooting. "rick just toasted the {firewall machine} again."
:toaster: n. . the archetypal really stupid application for an
 embedded microprocessor controller; often used in comments that
 imply that a scheme is inappropriate technology (but see
 {elevator controller}). "{dwim} for an assembler? that'd be
 as silly as running unix on your toaster!" . a very, very dumb
 computer. "you could run this program on any dumb toaster." see
 {bitty box}, {get a real computer!}, {toy}, {beige toaster}.
 . a macintosh, esp. the classic mac. some hold that this is
 implied by sense . . a peripheral device. "i bought my box
 without toasters, but since then i've added two boards and a second
 disk drive."
:toeprint: n. a {footprint} of especially small size.
:toggle: vt. to change a {bit} from whatever state it is in to the
 other state; to change from  to  or from  to . this comes from
 `toggle switches', such as standard light switches, though the
 word `toggle' actually refers to the mechanism that keeps the
 switch in the position to which it is flipped rather than to the
 fact that the switch has two positions. there are four things you
 can do to a bit: set it (force it to be ), clear (or zero) it,
 leave it alone, or toggle it. (mathematically, one would say that
 there are four distinct boolean-valued functions of one boolean
 argument, but saying that is much less fun than talking about
 toggling bits.)
:tool: . n. a program used primarily to create, manipulate, modify,
 or analyze other programs, such as a compiler or an editor or a
 cross-referencing program. oppose {app}, {operating system}.
 . [unix] an application program with a simple, `transparent'
 (typically text-stream) interface designed specifically to be used
 in programmed combination with other tools (see {filter}).
 . [mit: general to students there] vi. to work; to study (connotes
 tedium). the tmrc dictionary defined this as "to set one's brain
 to the grindstone". see {hack}. . [mit] n. a student who
 studies too much and hacks too little. (mit's student humor
 magazine rejoices in the name `tool and die'.)
:toolsmith: n. the software equivalent of a tool-and-die
specialist; one who specializes in making the {tool}s with which
other programmers create applications. many hackers consider this
more fun than applications per se; to understand why, see
{uninteresting}. jon bentley, in the "bumper-sticker computer
science" chapter of his book `more programming pearls', quotes dick
sites from dec as saying "i'd rather write programs to write programs
than write programs".
:topic drift: n. term used on genie, usenet and other electronic
 fora to describe the tendency of a {thread} to drift away from
 the original subject of discussion (and thus, from the subject
 header of the originating message), or the results of that
 tendency. often used in gentle reminders that the discussion has
 strayed off any useful track. "i think we started with a question
 about niven's last book, but we've ended up discussing the sexual
 habits of the common marmoset. now *that's* topic drift!"
:topic group: n. syn. {forum}.
:tops-:: /tops-ten/ n. dec's proprietary os for the fabled {pdp-}
 machines, long a favorite of hackers but now effectively extinct.
 a fountain of hacker folklore; see {appendix a}. see also {{its}},
 {{tops-}}, {{twenex}}, {vms}, {operating system}. tops- was
 sometimes called bots- (from `bottoms-ten') as a comment on the
 inappropriateness of describing it as the top of anything.
:tops-:: /tops-twen'tee/ n. see {{twenex}}.
:toto: /toh'toh/ n. this is reported to be the default scratch
 file name among french-speaking programmers —- in other words, a
 francophone {foo}. it is reported that the phonetic mutations
 "titi", "tata", and "tutu" canonically follow `toto',
 analogously to {bar}, {baz} and {quux} in english.
:tourist: [its] n. a guest on the system, especially one who
 generally logs in over a network from a remote location for {comm
 mode}, email, games, and other trivial purposes. one step below
 {luser}. hackers often spell this {turist}, perhaps by
 some sort of tenuous analogy with {luser} (this also expresses the
 its culture's penchant for six-letterisms). compare {twink},
 {read-only user}.
:tourist information: n. information in an on-line display that is
 not immediately useful, but contributes to a viewer's gestalt of
 what's going on with the software or hardware behind it. whether a
 given piece of info falls in this category depends partly on what
 the user is looking for at any given time. the `bytes free'
 information at the bottom of an ms-dos `dir' display is
 tourist information; so (most of the time) is the time information
 in a unix `ps()' display.
:touristic: adj. having the quality of a {tourist}. often used
 as a pejorative, as in `losing touristic scum'. often spelled
 `turistic' or `turistik', so that phrase might be more properly
 rendered `lusing turistic scum'.
:toy: n. a computer system; always used with qualifiers.
 . `nice toy': one that supports the speaker's hacking style
 adequately. . `just a toy': a machine that yields
 insufficient {computron}s for the speaker's preferred uses. this
 is not condemnatory, as is {bitty box}; toys can at least be fun.
 it is also strongly conditioned by one's expectations; cray xmp
 users sometimes consider the cray- a `toy', and certainly all risc
 boxes and mainframes are toys by their standards. see also {get
 a real computer!}.
:toy language: n. a language useful for instructional purposes or
 as a proof-of-concept for some aspect of computer-science theory,
 but inadequate for general-purpose programming. {bad thing}s
 can result when a toy language is promoted as a general purpose
 solution for programming (see {bondage-and-discipline
 language}); the classic example is {{pascal}}. several moderately
 well-known formalisms for conceptual tasks such as programming turing
 machines also qualify as toy languages in a less negative sense.
 see also {mftl}.
:toy problem: [ai] n. a deliberately oversimplified case of a
challenging problem used to investigate, prototype, or test
algorithms for a real problem. sometimes used pejoratively. see
also {gedanken}, {toy program}.
:toy program: n. . one that can be readily comprehended; hence, a
trivial program (compare {noddy}). . one for which the effort
of initial coding dominates the costs through its life cycle.
see also {noddy}.
:trampoline: n. an incredibly {hairy} technique, found in some
 {hll} and program-overlay implementations (e.g., on the
 macintosh), that involves on-the-fly generation of small executable
 (and, likely as not, self-modifying) code objects to do indirection
 between code sections. these pieces of {live data} are called
 `trampolines'. trampolines are notoriously difficult to understand
 in action; in fact, it is said by those who use this term that the
 trampoline that doesn't bend your brain is not the true
 trampoline. see also {snap}.
:trap: . n. a program interrupt, usually an interrupt caused by
 some exceptional situation in the user program. in most cases, the
 os performs some action, then returns control to the program.
 . vi. to cause a trap. "these instructions trap to the
 monitor." also used transitively to indicate the cause of the
 trap. "the monitor traps all input/output instructions."
 this term is associated with assembler programming (`interrupt'
 or `exception' is more common among {hll} programmers) and
 appears to be fading into history among programmers as the role of
 assembler continues to shrink. however, it is still important to
 computer architects and systems hackers (see {system},
 sense ), who use it to distinguish deterministically repeatable
 exceptions from timing-dependent ones (such as i/o interrupts).
:trap door: alt. `trapdoor' n. . syn. {back door} —- a
 {bad thing}. . [techspeak] a `trap-door function' is one
 which is easy to compute but very difficult to compute the inverse
 of. such functions are {good thing}s with important
 applications in cryptography, specifically in the construction of
 public-key cryptosystems.
:trash: vt. to destroy the contents of (said of a data structure).
 the most common of the family of near-synonyms including {mung},
 {mangle}, and {scribble}.
:trawl: v. to sift through large volumes of data (e.g. usenet
 postings or ftp archives) looking for something of interest.
:tree-killer: [sun] n. . a printer. . a person who wastes paper.
 this should be interpreted in a broad sense; `wasting paper'
 includes the production of {spiffy} but {content-free}
 documents. thus, most {suit}s are tree-killers. the negative
 loading of this term may reflect the epithet `tree-killer'
 applied by treebeard the ent to the orcs in j.r.r. tolkien's
 `lord of the rings' trilogy (see also {elvish}, {elder
 days}).
:trit: /trit/ [by analogy with `bit'] n. one base- digit; the
amount of information conveyed by a selection among one of three
equally likely outcomes (see also {bit}). these arise, for
example, in the context of a {flag} that should actually be able
to assume *three* values —- such as yes, no, or unknown. trits are
sometimes jokingly called `-state bits'. a trit may be
semi-seriously referred to as `a bit and a half', although it is
linearly equivalent to . bits (that is,
log()
bits).
:trivial: adj. . too simple to bother detailing. . not worth the
 speaker's time. . complex, but solvable by methods so well known
 that anyone not utterly {cretinous} would have thought of them
 already. . any problem one has already solved (some claim that
 hackish `trivial' usually evaluates to `i've seen it before').
 hackers' notions of triviality may be quite at variance with those
 of non-hackers. see {nontrivial}, {uninteresting}.
:troff: /tee'rof/ or /trof/ [unix] n. the gray eminence of unix
 text processing; a formatting and phototypesetting program, written
 originally in pdp- assembler and then in barely-structured early
 c by the late joseph ossana, modeled after the earlier roff which
 was in turn modeled after multics' runoff. a companion program,
 `nroff', formats output for terminals and line printers.
 in , brian kernighan modified troff so that it could drive
 phototypesetters other than the graphic systems cat. his paper
 describing that work ("a typesetter-independent troff," at&t cstr
 #) explains `troff''s durability. after discussing the
 program's "obvious deficiencies —- a rebarbative input syntax,
 mysterious and undocumented properties in some areas, and a
 voracious appetite for computer resources" and noting the ugliness
 and extreme hairiness of the code and internals, kernighan
 concludes:
 none of these remarks should be taken as denigrating
 ossana's accomplishment with troff. it has proven a
 remarkably robust tool, taking unbelievable abuse from a
 variety of preprocessors and being forced into uses that
 were never conceived of in the original design, all with
 considerable grace under fire.
 the success of tex and desktop publishing systems have reduced
 `troff''s relative importance, but this tribute perfectly
 captures the strengths that secured `troff' a place in hacker
 folklore; indeed, it could be taken more generally as an indication
 of those qualities of good programs which, in the long run, hackers
 most admire.
:troglodyte: [commodore] n. . a hacker who never leaves his
 cubicle. the term `gnoll' (from dungeons & dragons) is also
 reported. . a curmudgeon attached to an obsolescent computing
 environment. the combination `its troglodyte' was flung around
 some during the usenet and email wringle-wrangle attending the
 .x.x revision of the jargon file; at least one of the people it
 was intended to describe adopted it with pride.
:troglodyte mode: [rice university] n. programming with the lights
 turned off, sunglasses on, and the terminal inverted (black on
 white) because you've been up for so many days straight that your
 eyes hurt (see {raster burn}). loud music blaring from a stereo
 stacked in the corner is optional but recommended. see {larval
 stage}, {hack mode}.
:trojan horse: [coined by mit-hacker-turned-nsa-spook dan edwards]
n. a program designed to break security or damage a system that is
disguised as something else benign, such as a directory lister,
archiver, a game, or (in one notorious  case on the mac) a
program to find and destroy viruses! see {back door}, {virus},
{worm}.
:tron: [nrl, cmu; prob. fr. the movie `tron'] v. to become
inaccessible except via email or `talk()', especially when
one is normally available via telephone or in person. frequently
used in the past tense, as in: "ran seems to have tronned on us
this week" or "gee, ran, glad you were able to un-tron
yourself". one may also speak of `tron mode'.
:true-hacker: [analogy with `trufan' from sf fandom] n. one who
exemplifies the primary values of hacker culture, esp. competence
and helpfulness to other hackers. a high compliment. "he spent
 hours helping me bring up uucp and netnews on my foobar 
last week —- manifestly the act of a true-hacker." compare
{demigod}, oppose {munchkin}.
:tty: /t-t-y/ [unix], /tit'ee/ [its, but some unix people say it
 this way as well; this pronunciation is not considered to have
 sexual undertones] n. . a terminal of the teletype variety,
 characterized by a noisy mechanical printer, a very limited
 character set, and poor print quality. usage: antiquated (like the
 ttys themselves). see also {bit-paired keyboard}.
 . [especially unix] any terminal at all; sometimes used to refer
 to the particular terminal controlling a given job. . [unix] any
 serial port, whether or not the device connected to it is a
 terminal; so called because under unix such devices have names of
 the form tty*. ambiguity between senses  and  is common but
 seldom bothersome.
:tube: . n. a crt terminal. never used in the mainstream sense of
 tv; real hackers don't watch tv, except for loony toons, rocky &
 bullwinkle, trek classic, the simpsons, and the occasional cheesy
 old swashbuckler movie (see {appendix b}). . [ibm] to send
 a copy of something to someone else's terminal. "tube me that
 note?"
:tube time: n. time spent at a terminal or console. more inclusive
 than hacking time; commonly used in discussions of what parts of
 one's environment one uses most heavily. "i find i'm spending too
 much of my tube time reading mail since i started this revision."
:tunafish: n. in hackish lore, refers to the mutated punchline of
 an age-old joke to be found at the bottom of the manual pages of
 `tunefs()' in the original {bsd} . distribution. the
 joke was removed in later releases once commercial sites started
 using .. tunefs relates to the `tuning' of file-system
 parameters for optimum performance, and at the bottom of a few
 pages of wizardly inscriptions was a `bugs' section consisting of
 the line "you can tune a file system, but you can't tunafish".
 variants of this can be seen in other bsd versions, though it has
 been excised from some versions by humorless management
 {droid}s. the [nt]roff source for sunos .. contains a
 comment apparently designed to prevent this: "take this out and a
 unix demon will dog your steps from now until the `time_t''s
 wrap around."
:tune: [from automotive or musical usage] vt. to optimize a program
 or system for a particular environment, esp. by adjusting numerical
 parameters designed as {hook}s for tuning, e.g., by changing
 `#define' lines in c. one may `tune for time' (fastest
 execution), `tune for space' (least memory use), or
 `tune for configuration' (most efficient use of hardware). see
 {bum}, {hot spot}, {hand-hacking}.
:turbo nerd: n. see {computer geek}.
:turing tar-pit: n. . a place where anything is possible but
 nothing of interest is practical. alan turing helped lay the
 foundations of computer science by showing that all machines and
 languages capable of expressing a certain very primitive set of
 operations are logically equivalent in the kinds of computations
 they can carry out, and in principle have capabilities that differ
 only in speed from those of the most powerful and
 elegantly-designed computers. however, no machine or language
 exactly matching turing's primitive set has ever been built (other
 than possibly as a classroom exercise), because it would be
 horribly slow and far too painful to use. a `turing tar-pit' is
 any computer language or other tool which shares this property.
 that is, it's theoretically universal —- but in practice, the
 harder you struggle to get any real work done, the deeper its
 inadequacies suck you in. compare {bondage-and-discipline
 language}. . the perennial {holy wars} over whether language a
 or b is the "most powerful".
:turist: /too'rist/ n. var. sp. of {tourist}, q.v. also in
 adjectival form, `turistic'. poss. influenced by {luser} and
 `turing'.
:tweak: vt. . to change slightly, usually in reference to a value.
 also used synonymously with {twiddle}. if a program is almost
 correct, rather than figure out the precise problem you might
 just keep tweaking it until it works. see {frobnicate} and
 {fudge factor}; also see {shotgun debugging}. . to {tune}
 or {bum} a program; preferred usage in the u.k.
:tweeter: [university of waterloo] n. syn. {perf}, {chad}
 (sense ). this term (like {woofer}) has been in use at
 waterloo since , but is elsewhere unknown. in audio jargon, the word
 refers to the treble speaker(s) on a hi-fi.
:twenex:: /twe'neks/ n. the tops- operating system by dec —-
 the second proprietary os for the pdp- —- preferred by most
 pdp- hackers over tops- (that is, by those who were not
 {{its}} or {{waits}} partisans). tops- began in  as bolt,
 beranek & newman's tenex operating system using special paging
 hardware. by the early s, almost all of the systems on the
 arpanet ran tenex. dec purchased the rights to tenex from bbn and
 began work to make it their own. the first in-house code name for
 the operating system was viros (virtual memory operating system);
 when customers started asking questions, the name was changed to
 snark so dec could truthfully deny that there was any project
 called viros. when the name snark became known, the name was
 briefly reversed to become krans; this was quickly abandoned when
 it was discovered that `krans' meant `funeral wreath' in
 swedish. ultimately dec picked tops- as the name of the
 operating system, and it was as tops- that it was marketed. the
 hacker community, mindful of its origins, quickly dubbed it
 {{twenex}} (a contraction of `twenty tenex'), even though by this
 point very little of the original tenex code remained (analogously
 to the differences between at&t v unix and bsd). dec people
 cringed when they heard "twenex", but the term caught on
 nevertheless (the written abbreviation `x' was also used).
 twenex was successful and very popular; in fact, there was a period
 in the early s when it commanded as fervent a culture of
 partisans as unix or its —- but dec's decision to scrap all the
 internal rivals to the vax architecture and its relatively stodgy
 vms os killed the dec- and put a sad end to twenex's brief day in
 the sun. dec attempted to convince tops- hackers to convert to
 {vms}, but instead, by the late s, most of the tops-
 hackers had migrated to unix.
:twiddle: n. . tilde (ascii , `~'). also
 called `squiggle', `sqiggle' (sic —- pronounced /skig'l/),
 and `twaddle', but twiddle is the most common term. . a small
 and insignificant change to a program. usually fixes one bug and
 generates several new ones. . vt. to change something in a small
 way. bits, for example, are often twiddled. twiddling a switch or
 knob implies much less sense of purpose than toggling or tweaking
 it; see {frobnicate}. to speak of twiddling a bit connotes
 aimlessness, and at best doesn't specify what you're doing to the
 bit; `toggling a bit' has a more specific meaning (see {bit
 twiddling}, {toggle}).
:twilight zone: [irc] n. notionally, the area of cyberspace where {irc}
 operators live. an {op} is said to have a "connection to the
 twilight zone".
:twink: /twink/ [ucsc] n. equivalent to {read-only user}.
 also reported on the usenet group soc.motss; may derive from
 gay slang for a cute young thing with nothing upstairs (compare
 mainstream `chick').
:two pi: quant. the number of years it takes to finish one's
thesis. occurs in stories in the following form: "he started on
his thesis;  pi years later…"
:two-to-the-n: quant. an amount much larger than {n} but smaller
than {infinity}. "i have -to-the-n things to do before i can
go out for lunch" means you probably won't show up.
:twonkie: /twon'kee/ n. the software equivalent of a twinkie (a
 variety of sugar-loaded junk food, or (in gay slang) the male
 equivalent of `chick'); a useless `feature' added to look sexy
 and placate a {marketroid} (compare {saturday-night
 special}). this may also be related to "the twonky", title menace
 of a classic sf short story by lewis padgett (henry kuttner and
 c. l. moore), first published in the september 
 `astounding science fiction' and subsequently much
 anthologized.
:ubd: /u-b-d/ [abbreviation for `user brain damage'] an
 abbreviation used to close out trouble reports obviously due to
 utter cluelessness on the user's part. compare {pilot error};
 oppose {pbd}; see also {brain-damaged}.
:un*x: n. used to refer to the unix operating system (a trademark of
at&t) in writing, but avoiding the need for the ugly
{(tm)} typography.
also used to refer to any or all varieties of unixoid operating
systems. ironically, lawyers now say () that the requirement
for the tm-postfix has no legal force, but the asterisk usage
is entrenched anyhow. it has been suggested that there may be a
psychological connection to practice in certain religions
(especially judaism) in which the name of the deity is never
written out in full, e.g., `yhwh' or `g—d' is used. see also
{glob}.
:undefined external reference: excl. [unix] a message from unix's
 linker. used in speech to flag loose ends or dangling references
 in an argument or discussion.
:under the hood: prep. [hot-rodder talk] . used to introduce the
 underlying implementation of a product (hardware, software, or
 idea). implies that the implementation is not intuitively obvious
 from the appearance, but the speaker is about to enable the
 listener to {grok} it. "let's now look under the hood to see
 how …." . can also imply that the implementation is much
 simpler than the appearance would indicate: "under the hood, we
 are just fork/execing the shell." . inside a chassis, as in
 "under the hood, this baby has a mhz !"
:undocumented feature: n. see {feature}.
:uninteresting: adj. . said of a problem that, although
 {nontrivial}, can be solved simply by throwing sufficient
 resources at it. . also said of problems for which a solution
 would neither advance the state of the art nor be fun to design and
 code.
 hackers regard uninteresting problems as intolerable wastes of
 time, to be solved (if at all) by lesser mortals. *real*
 hackers (see {toolsmith}) generalize uninteresting problems
 enough to make them interesting and solve them —- thus solving the
 original problem as a special case (and, it must be admitted,
 occasionally turning a molehill into a mountain, or a mountain into
 a tectonic plate). see {wombat}, {smop}; compare {toy
 problem}, oppose {interesting}.
:unix:: /yoo'niks/ [in the authors' words, "a weak pun on
 multics"] n. (also `unix') an interactive time-sharing system
 originally invented in  by ken thompson after bell labs left
 the multics project, originally so he could play games on his
 scavenged pdp-. dennis ritchie, the inventor of c, is considered
 a co-author of the system. the turning point in unix's history
 came when it was reimplemented almost entirely in c during
 —, making it the first source-portable os. unix
 subsequently underwent mutations and expansions at the hands of
 many different people, resulting in a uniquely flexible and
 developer-friendly environment. in , unix is the most widely
 used multiuser general-purpose operating system in the world. many
 people consider this the most important victory yet of hackerdom
 over industry opposition (but see {unix weenie} and {unix
 conspiracy} for an opposing point of view). see {version },
:unix brain damage: n. something that has to be done to break a
 network program (typically a mailer) on a non-unix system so that
 it will interoperate with unix systems. the hack may qualify as
 `unix brain damage' if the program conforms to published standards
 and the unix program in question does not. unix brain damage
 happens because it is much easier for other (minority) systems to
 change their ways to match non-conforming behavior than it is to
 change all the hundreds of thousands of unix systems out there.
 an example of unix brain damage is a {kluge} in a mail server to
 recognize bare line feed (the unix newline) as an equivalent form
 to the internet standard newline, which is a carriage return
 followed by a line feed. such things can make even a hardened
 {jock} weep.
:unix conspiracy: [its] n. according to a conspiracy theory long
 popular among {{its}} and {{tops-}} fans, unix's growth is the
 result of a plot, hatched during the s at bell labs, whose
 intent was to hobble at&t's competitors by making them dependent
 upon a system whose future evolution was to be under at&t's
 control. this would be accomplished by disseminating an operating
 system that is apparently inexpensive and easily portable, but also
 relatively unreliable and insecure (so as to require continuing
 upgrades from at&t). this theory was lent a substantial impetus
 in  by the paper referenced in the {back door} entry.
 in this view, unix was designed to be one of the first computer
 viruses (see {virus}) —- but a virus spread to computers indirectly
 by people and market forces, rather than directly through disks and
 networks. adherents of this `unix virus' theory like to cite the
 fact that the well-known quotation "unix is snake oil" was
 uttered by dec president kenneth olsen shortly before dec began
 actively promoting its own family of unix workstations. (olsen now
 claims to have been misquoted.)
:unix weenie: [its] n. . a derogatory play on `unix wizard', common
 among hackers who use unix by necessity but would prefer
 alternatives. the implication is that although the person in question
 may consider mastery of unix arcana to be a wizardly skill, the
 only real skill involved is the ability to tolerate (and the bad
 taste to wallow in) the incoherence and needless complexity that is
 alleged to infest many unix programs. "this shell script tries to
 parse its arguments in  bletcherous ways. it must have been
 written by a real unix weenie." . a derogatory term for anyone
 who engages in uncritical praise of unix. often appearing in the
 context "stupid unix weenie". see {weenix}, {unix
 conspiracy}. see also {weenie}.
:unixism: n. a piece of code or a coding technique that depends on the
 protected multi-tasking environment with relatively low
 process-spawn overhead that exists on virtual-memory unix systems.
 common {unixism}s include: gratuitous use of `fork()'; the
 assumption that certain undocumented but well-known features of
 unix libraries such as `stdio()' are supported elsewhere;
 reliance on {obscure} side-effects of system calls (use of
 `sleep()' with a  argument to clue the scheduler that
 you're willing to give up your time-slice, for example); the
 assumption that freshly allocated memory is zeroed; and the assumption
 that fragmentation problems won't arise from never `free()'ing
 memory. compare {vaxocentrism}; see also {new jersey}.
:unleaded: adj. said of decaffeinated coffee, diet coke, and other
imitation {programming fluid}s. "do you want regular or
unleaded?". appears to be widespread among programmers associated
with the oil industry in texas (and probably elsewhere). usage:
silly, and probably unintelligable to the next generation of
hackers.
:unroll: v. to repeat the body of a loop several times in succession.
this optimization technique reduces the number of times the
loop-termination test has to be executed. but it only works if
the number of iterations desired is a multiple of the number of
repetitions of the body. something has to be done to take care
of any leftover iterations —- such as {duff's device}.
:unswizzle: v. see {swizzle}.
:unwind the stack: vi. . [techspeak] during the execution of a
 procedural language, one is said to `unwind the stack' from a
 called procedure up to a caller when one discards the stack frame
 and any number of frames above it, popping back up to the level of
 the given caller. in c this is done with
 `longjmp'/`setjmp', in lisp with `throw/catch'.
 see also {smash the stack}. . people can unwind the stack as
 well, by quickly dealing with a bunch of problems: "oh heck, let's
 do lunch. just a second while i unwind my stack."
:unwind-protect: [mit: from the name of a lisp operator] n. a task you
 must remember to perform before you leave a place or finish a
 project. "i have an unwind-protect to call my advisor."
:up: adj. . working, in order. "the down escalator is up."
 oppose {down}. . `bring up': vt. to create a working
 version and start it. "they brought up a down system."
 . `come up' vi. to become ready for production use.
:upload: /uhp'lohd/ v. . [techspeak] to transfer programs or data
 over a digital communications link from a smaller or peripheral
 `client' system to a larger or central `host' one. a transfer in
 the other direction is, of course, called a {download} (but see
 the note about ground-to-space comm under that entry).
 . [speculatively] to move the essential patterns and algorithms
 that make up one's mind from one's brain into a computer. only
 those who are convinced that such patterns and algorithms capture
 the complete essence of the self view this prospect with
 gusto.
:upthread: adv. earlier in the discussion (see {thread}), i.e.,
 `above'. "as joe pointed out upthread, …" see also
 {followup}.
:urchin: n. see {munchkin}.
:usenet: /yoos'net/ or /yooz'net/ [from `users' network'] n.
 a distributed {bboard} (bulletin board) system supported mainly
 by unix machines. originally implemented in - by steve
 bellovin, jim ellis, tom truscott, and steve daniel at duke
 university, it has swiftly grown to become international in scope
 and is now probably the largest decentralized information utility
 in existence. as of early , it hosts well over
  {newsgroup}s and an average of  megabytes (the equivalent
 of several thousand paper pages) of new technical articles, news,
 discussion, chatter, and {flamage} every day.
:user: n. . someone doing `real work' with the computer, using
 it as a means rather than an end. someone who pays to use a
 computer. see {real user}. . a programmer who will believe
 anything you tell him. one who asks silly questions. [gls
 observes: this is slightly unfair. it is true that users ask
 questions (of necessity). sometimes they are thoughtful or deep.
 very often they are annoying or downright stupid, apparently
 because the user failed to think for two seconds or look in the
 documentation before bothering the maintainer.] see {luser}.
 . someone who uses a program from the outside, however skillfully,
 without getting into the internals of the program. one who reports
 bugs instead of just going ahead and fixing them.
 the general theory behind this term is that there are two classes
 of people who work with a program: there are implementors (hackers)
 and {luser}s. the users are looked down on by hackers to some
 extent because they don't understand the full ramifications of the
 system in all its glory. (the few users who do are known as
 `real winners'.) the term is a relative one: a skilled hacker
 may be a user with respect to some program he himself does not
 hack. a lisp hacker might be one who maintains lisp or one who
 uses lisp (but with the skill of a hacker). a lisp user is one who
 uses lisp, whether skillfully or not. thus there is some overlap
 between the two terms; the subtle distinctions must be resolved by
 context.
:user-friendly: adj. programmer-hostile. generally used by hackers in
a critical tone, to describe systems that hold the user's hand so
obsessively that they make it painful for the more experienced and
knowledgeable to get any work done. see {menuitis}, {drool-proof
paper}, {macintrash}, {user-obsequious}.
:user-obsequious: adj. emphatic form of {user-friendly}. connotes
a system so verbose, inflexible, and determinedly simple-minded
that it is nearly unusable. "design a system any fool can use and
only a fool will want to use it." see {wimp environment},
{macintrash}.
:usg unix: /u-s-g yoo'niks/ n. refers to at&t unix
commercial versions after {version }, especially system iii and
system v releases , , and . so called because during most of
the life-span of those versions at&t's support crew was called the
`unix support group'. see {bsd}, {{unix}}.
:utsl: // [unix] n. on-line acronym for `use the source, luke' (a
 pun on obi-wan kenobi's "use the force, luke!" in `star
 wars') —- analogous to {rtfm} but more polite. this is a
 common way of suggesting that someone would be best off reading the
 source code that supports whatever feature is causing confusion,
 rather than making yet another futile pass through the manuals or
 broadcasting questions that haven't attracted {wizard}s to
 answer them. in theory, this is appropriately directed only at
 associates of some outfit with a unix source license; in practice,
 bootlegs of unix source code (made precisely for reference
 purposes) are so ubiquitous that one may utter this at almost
 anyone on the network without concern. in the near future
 (this written in ) source licenses may become even less
 important; after the recent release of the mach . microkernel,
 given the continuing efforts of the {gnu} project, and with the
 .bsd release on the horizon, complete free source code for
 unix-clone toolsets and kernels should soon be widely available.
:uucpnet: n. the store-and-forward network consisting of all the
 world's connected unix machines (and others running some clone of
 the uucp (unix-to-unix copy) software). any machine reachable only
 via a {bang path} is on uucpnet. see {network address}.
:vadding: /vad'ing/ [from vad, a permutation of adv (i.e.,
 {advent}), used to avoid a particular {admin}'s continual
 search-and-destroy sweeps for the game] n. a leisure-time activity
 of certain hackers involving the covert exploration of the
 `secret' parts of large buildings —- basements, roofs, freight
 elevators, maintenance crawlways, steam tunnels, and the like. a
 few go so far as to learn locksmithing in order to synthesize
 vadding keys. the verb is `to vad' (compare {phreaking}; see
 also {hack}, sense ). this term dates from the late s,
 before which such activity was simply called `hacking'; the older
 usage is still prevalent at mit.
 the most extreme and dangerous form of vadding is `elevator
 rodeo', a.k.a. `elevator surfing', a sport played by wrasslin'
 down a thousand-pound elevator car with a -foot piece of
 string, and then exploiting this mastery in various stimulating
 ways (such as elevator hopping, shaft exploration, rat-racing, and
 the ever-popular drop experiments). kids, don't try this at home!
 see also {hobbit} (sense ).
:vanilla: [from the default flavor of ice cream in the u.s.] adj.
 ordinary {flavor}, standard. when used of food, very often does
 not mean that the food is flavored with vanilla extract! for
 example, `vanilla wonton soup' means ordinary wonton soup, as
 opposed to hot-and-sour wonton soup. applied to hardware and
 software, as in "vanilla version  unix can't run on a
 vanilla /." also used to orthogonalize chip nomenclature; for
 instance, a v means what ti calls a , as distinct from
 a ls, etc. this word differs from {canonical} in that the
 latter means `default', whereas vanilla simply means `ordinary'.
 for example, when hackers go on a {great-wall}, hot-and-sour
 wonton soup is the {canonical} wonton soup to get (because that
 is what most of them usually order) even though it isn't the
 vanilla wonton soup.
:vannevar: /van'*-var/ n. a bogus technological prediction or a
 foredoomed engineering concept, esp. one that fails by implicitly
 assuming that technologies develop linearly, incrementally, and in
 isolation from one another when in fact the learning curve tends to
 be highly nonlinear, revolutions are common, and competition is the
 rule. the prototype was vannevar bush's prediction of
 `electronic brains' the size of the empire state building with a
 niagara-falls-equivalent cooling system for their tubes and relays,
 made at a time when the semiconductor effect had already been
 demonstrated. other famous vannevars have included magnetic-bubble
 memory, lisp machines, {videotex}, and a paper from the
 late s that computed a purported ultimate limit on areal
 density for ics that was in fact less than the routine densities of
  years later.
:vaporware: /vay'pr-weir/ n. products announced far in advance of
any release (which may or may not actually take place).
:var: /veir/ or /var/ n. short for `variable'. compare {arg},
{param}.
:vax: /vaks/ n. . [from virtual address extension] the most
 successful minicomputer design in industry history, possibly
 excepting its immediate ancestor, the pdp-. between its release
 in  and its eclipse by {killer micro}s after about , the
 vax was probably the hacker's favorite machine of them all, esp.
 after the  release of . bsd unix (see {bsd}). esp.
 noted for its large, assembler-programmer-friendly instruction set
 —- an asset that became a liability after the risc revolution.
 . a major brand of vacuum cleaner in britain. cited here because
 its alleged sales pitch, "nothing sucks like a vax!" became a
 sort of battle-cry of risc partisans. it is sometimes claimed that
 this slogan was *not* actually used by the vax vacuum-cleaner
 people, but was actually that of a rival brand called electrolux
 (as in "nothing sucks like…"); your editors have not yet
 been able to verify either version of the legend. it is also
 claimed that dec actually entered a cross-licensing deal with the
 vacuum-vax people that allowed them to market vax computers in the
 u.k. in return for not challenging the vacuum cleaner trademark in
 the u.s.
:vaxectomy: /vak-sek't*-mee/ [by analogy with `vasectomy'] n. a
 vax removal. dec's microvaxen, especially, are much slower than
 newer risc-based workstations such as the sparc. thus, if one knows
 one has a replacement coming, vax removal can be cause for
 celebration.
:vaxen: /vak'sn/ [from `oxen', perhaps influenced by `vixen'] n.
 (alt. `vaxen') the plural canonically used among hackers for the
 dec vax computers. "our installation has four pdp-s and twenty
 vaxen." see {boxen}.
:vaxherd: n. /vaks'herd/ [from `oxherd'] a vax operator.
:vaxism: /vak'sizm/ n. a piece of code that exhibits
 {vaxocentrism} in critical areas. compare {pc-ism},
 {unixism}.
:vaxocentrism: /vak`soh-sen'trizm/ [analogy with
 `ethnocentrism'] n. a notional disease said to afflict
 c programmers who persist in coding according to certain
 assumptions that are valid (esp. under unix) on {vaxen} but
 false elsewhere. among these are:
 . the assumption that dereferencing a null pointer is safe because it
 is all bits , and location  is readable and . problem: this may
 instead cause an illegal-address trap on non-vaxen, and even on
 vaxen under oses other than bsd unix. usually this is an implicit
 assumption of sloppy code (forgetting to check the pointer before
 using it), rather than deliberate exploitation of a misfeature.)
 . the assumption that characters are signed.
 . the assumption that a pointer to any one type can freely be cast
 into a pointer to any other type. a stronger form of this is the
 assumption that all pointers are the same size and format, which
 means you don't have to worry about getting the types correct in
 calls. problem: this fails on word-oriented machines or others
 with multiple pointer formats.
 . the assumption that the parameters of a routine are stored in
 memory, contiguously, and in strictly ascending or descending
 order. problem: this fails on many risc architectures.
 . the assumption that pointer and integer types are the same size,
 and that pointers can be stuffed into integer variables (and
 vice-versa) and drawn back out without being truncated or mangled.
 problem: this fails on segmented architectures or word-oriented
 machines with funny pointer formats.
 . the assumption that a data type of any size may begin at any byte
 address in memory (for example, that you can freely construct and
 dereference a pointer to a word- or greater-sized object at an odd
 char address). problem: this fails on many (esp. risc)
 architectures better optimized for {hll} execution speed, and can
 cause an illegal address fault or bus error.
 . the (related) assumption that there is no padding at the end of
 types and that in an array you can thus step right from the last
 byte of a previous component to the first byte of the next one.
 this is not only machine- but compiler-dependent.
 . the assumption that memory address space is globally flat and that
 the array reference `foo[-]' is necessarily valid. problem: this
 fails at , or other places on segment-addressed machines like
 intel chips (yes, segmentation is universally considered a
 {brain-damaged} way to design machines (see {moby}), but that is a
 separate issue).
 . the assumption that objects can be arbitrarily large with no
 special considerations. problem: this fails on segmented
 architectures and under non-virtual-addressing environments.
. the assumption that the stack can be as large as memory. problem:
this fails on segmented architectures or almost anything else
without virtual addressing and a paged stack.
. the assumption that bits and addressable units within an object are
ordered in the same way and that this order is a constant of
nature. problem: this fails on {big-endian} machines.
 . the assumption that it is meaningful to compare pointers to
 different objects not located within the same array, or to objects
 of different types. problem: the former fails on segmented
 architectures, the latter on word-oriented machines or others with
 multiple pointer formats.
 . the assumption that an `int' is  bits, or (nearly equivalently)
 the assumption that `sizeof(int) == sizeof(long)'. problem: this
 fails on pdp-s, -based systems and even on  and 
 systems under some compilers.
 . the assumption that `argv[]' is writable. problem: this fails in
 many embedded-systems c environments and even under a few flavors
 of unix.
 note that a programmer can validly be accused of vaxocentrism
 even if he or she has never seen a vax. some of these assumptions
 (esp. —) were valid on the pdp-, the original c machine, and
 became endemic years before the vax. the terms `vaxocentricity'
 and `all-the-world's-a-vax syndrome' have been used synonymously.
:vdiff: /vee'dif/ v.,n. visual diff. the operation of finding
 differences between two files by {eyeball search}. the term
 `optical diff' has also been reported, and is sometimes more
 specifically used for the act of superimposing two nearly identical
 printouts on one another and holding them up to a light to spot
 differences. though this method is poor for detecting omissions in
 the `rear' file, it can also be used with printouts of graphics, a
 claim few if any diff programs can make. see {diff}.
:veeblefester: /vee'b*l-fes`tr/ [from the "born loser"
 comix via commodore; prob. originally from `mad' magazine's
 `veeblefeetzer' parodies ca. ] n. any obnoxious person engaged
 in the (alleged) professions of marketing or management. antonym
 of {hacker}. compare {suit}, {marketroid}.
:venus flytrap: [after the insect-eating plant] n. see {firewall
 machine}.
:verbage: /ver'b*j/ n. a deliberate misspelling and mispronunciation of
 {verbiage} that assimilates it to the word `garbage'. compare
 {content-free}. more pejorative than `verbiage'.
:verbiage: n. when the context involves a software or hardware
 system, this refers to {{documentation}}. this term borrows the
 connotations of mainstream `verbiage' to suggest that the
 documentation is of marginal utility and that the motives behind
 its production have little to do with the ostensible subject.
:version : alt. v /vee' se'vn/ n. the  unsupported release of
 {{unix}} ancestral to all current commercial versions. before
 the release of the posix/svid standards, v's features were often
 treated as a unix portability baseline. see {bsd}, {usg unix},
 {{unix}}. some old-timers impatient with commercialization and
 kernel bloat still maintain that v was the last true unix.
:vgrep: /vee'grep/ v.,n. visual grep. the operation of finding
 patterns in a file optically rather than digitally (also called an
 `optical grep'). see {grep}; compare {vdiff}.
:vi: /v-i/, *not* /vi:/ and *never* /siks/ [from
 `visual interface'] n. a screen editor crufted together by bill joy
 for an early {bsd} release. became the de facto standard
 unix editor and a nearly undisputed hacker favorite outside of mit
 until the rise of {emacs} after about . tends to frustrate
 new users no end, as it will neither take commands while expecting
 input text nor vice versa, and the default setup provides no
 indication of which mode one is in (one correspondent accordingly
 reports that he has often heard the editor's name pronounced
 /vi:l/). nevertheless it is still widely used (about half the
 respondents in a  usenet poll preferred it), and even emacs
 fans often resort to it as a mail editor and for small editing jobs
 (mainly because it starts up faster than the bulkier versions of
 emacs). see {holy wars}.
:videotex: n. obs. an electronic service offering people the
 privilege of paying to read the weather on their television screens
 instead of having somebody read it to them for free while they
 brush their teeth. the idea bombed everywhere it wasn't
 government-subsidized, because by the time videotex was practical
 the installed base of personal computers could hook up to
 timesharing services and do the things for which videotex might
 have been worthwhile better and cheaper. videotex planners badly
 overestimated both the appeal of getting information from a
 computer and the cost of local intelligence at the user's end.
 like the {gorilla arm} effect, this has been a cautionary tale
 to hackers ever since. see also {vannevar}.
:virgin: adj. unused; pristine; in a known initial state. "let's
 bring up a virgin system and see if it crashes again." (esp.
 useful after contracting a {virus} through {sex}.) also, by
 extension, buffers and the like within a program that have not yet
 been used.
:virtual: [via the technical term `virtual memory', prob. from
 the term `virtual image' in optics] adj. . common alternative
 to {logical}; often used to refer to the artificial objects
 created by a computer system to help the system control access to
 shared resources. . simulated; performing the functions of
 something that isn't really there. an imaginative child's doll may
 be a virtual playmate. oppose {real}.
:virtual friday: n. the last day before an extended weekend, if
 that day is not a `real' friday. for example, the u.s. holiday
 thanksgiving is always on a thursday. the next day is often also a
 holiday or taken as an extra day off, in which case wednesday of
 that week is a virtual friday (and thursday is a virtual saturday,
 as is friday). there are also `virtual mondays' that are
 actually tuesdays, after the three-day weekends associated with
 many national holidays in the u.s.
:virtual reality: n. . computer simulations that use -d graphics
 and devices such as the dataglove to allow the user to interact
 with the simulation. see {cyberspace}. . a form of network
 interaction incorporating aspects of role-playing games,
 interactive theater, improvisational comedy, and `true confessions'
 magazines. in a virtual reality forum (such as usenet's
 alt.callahans newsgroup or the {mud} experiments on internet),
 interaction between the participants is written like a shared novel
 complete with scenery, `foreground characters' that may be
 personae utterly unlike the people who write them, and common
 `background characters' manipulable by all parties. the one
 iron law is that you may not write irreversible changes to a
 character without the consent of the person who `owns' it.
 otherwise anything goes. see {bamf}, {cyberspace}.
:virus: [from the obvious analogy with biological viruses, via sf]
 n. a cracker program that searches out other programs and `infects'
 them by embedding a copy of itself in them, so that they become
 {trojan horse}s. when these programs are executed, the embedded
 virus is executed too, thus propagating the `infection'. this
 normally happens invisibly to the user. unlike a {worm}, a
 virus cannot infect other computers without assistance. it is
 propagated by vectors such as humans trading programs with their
 friends (see {sex}). the virus may do nothing but propagate
 itself and then allow the program to run normally. usually,
 however, after propagating silently for a while, it starts doing
 things like writing cute messages on the terminal or playing
 strange tricks with your display (some viruses include nice
 {display hack}s). many nasty viruses, written by particularly
 perversely minded {cracker}s, do irreversible damage, like
 nuking all the user's files.
 in the s, viruses have become a serious problem, especially
 among ibm pc and macintosh users (the lack of security on these
 machines enables viruses to spread easily, even infecting the
 operating system). the production of special anti-virus software
 has become an industry, and a number of exaggerated media reports
 have caused outbreaks of near hysteria among users; many
 {luser}s tend to blame *everything* that doesn't work as
 they had expected on virus attacks. accordingly, this sense of
 `virus' has passed not only into techspeak but into also popular
 usage (where it is often incorrectly used to denote a {worm} or
 even a {trojan horse}). compare {back door}; see also
 {unix conspiracy}.
:visionary: n. . one who hacks vision, in the sense of an
 artificial intelligence researcher working on the problem of
 getting computers to `see' things using tv cameras. (there isn't
 any problem in sending information from a tv camera to a computer.
 the problem is, how can the computer be programmed to make use of
 the camera information? see {smop}, {ai-complete}.) . [ibm]
 one who reads the outside literature. at ibm, apparently, such a
 penchant is viewed with awe and wonder.
:vms: /v-m-s/ n. dec's proprietary operating system for its vax
 minicomputer; one of the seven or so environments that loom largest
 in hacker folklore. many unix fans generously concede that vms
 would probably be the hacker's favorite commercial os if unix
 didn't exist; though true, this makes vms fans furious. one major
 hacker gripe with vms concerns its slowness —- thus the following
 limerick:
there once was a system called vms
of cycles by no means abstemious.
it's chock-full of hacks
and runs on a vax
and makes my poor stomach all squeamious.
—- the great quux
 see also {vax}, {{tops-}}, {{tops-}}, {{unix}}, {runic}.
:voice: vt. to phone someone, as opposed to emailing them or
 connecting in {talk mode}. "i'm busy now; i'll voice you later."
:voice-net: n. hackish way of referring to the telephone system,
 analogizing it to a digital network. usenet {sig block}s not
 uncommonly include the sender's phone next to a "voice:" or
 "voice-net:" header; common variants of this are "voicenet" and
 "v-net". compare {paper-net}, {snail-mail}.
:voodoo programming: [from george bush's "voodoo economics"] n.
 the use by guess or cookbook of an {obscure} or {hairy} system,
 feature, or algorithm that one does not truly understand. the
 implication is that the technique may not work, and if it doesn't,
 one will never know why. almost synonymous with {black magic},
 except that black magic typically isn't documented and
 *nobody* understands it. compare {magic}, {deep magic},
 {heavy wizardry}, {rain dance}, {cargo cult programming},
 {wave a dead chicken}.
:vr: // [mud] n. on-line abbrev for {virtual reality}, as
 opposed to {rl}.
:vulcan nerve pinch: n. [from the old "star trek" tv series via
 commodore amiga hackers] the keyboard combination that forces a
 soft-boot or jump to rom monitor (on machines that support such a
 feature). on many micros this is ctrl-alt-del; on suns, l-a; on
 some macintoshes, it is <cmd>-<power switch>! also called
 {three-finger salute}. compare {quadruple bucky}.
:vulture capitalist: n. pejorative hackerism for `venture
 capitalist', deriving from the common practice of pushing contracts
 that deprive inventors of control over their own innovations and
 most of the money they ought to have made from them.
:wabbit: /wab'it/ [almost certainly from elmer fudd's immortal
 line "you wascawwy wabbit!"] n. . a legendary early hack
 reported on a system/ at rpi and elsewhere around ; this may
 have descended (if only by inspiration) from hack called rabbits
 reported from  on a burroughs  at the university of
 washington computer center. the program would make two copies of
 itself every time it was run, eventually crashing the system.
 . by extension, any hack that includes infinite self-replication
 but is not a {virus} or {worm}. see {fork bomb}, see also
 {cookie monster}.
:waits:: /wayts/ n. the mutant cousin of {{tops-}} used on a
 handful of systems at {{sail}} up to . there was never an
 `official' expansion of waits (the name itself having been arrived
 at by a rather sideways process), but it was frequently glossed as
 `west-coast alternative to its'. though waits was less visible
 than its, there was frequent exchange of people and ideas between
 the two communities, and innovations pioneered at waits exerted
 enormous indirect influence. the early screen modes of {emacs},
 for example, were directly inspired by waits's `e' editor —- one
 of a family of editors that were the first to do `real-time
 editing', in which the editing commands were invisible and where
 one typed text at the point of insertion/overwriting. the modern
 style of multi-region windowing is said to have originated there,
 and waits alumni at xerox parc and elsewhere played major roles in
 the developments that led to the xerox star, the macintosh, and the
 sun workstations. {bucky bits} were also invented there —-
 thus, the alt key on every ibm pc is a waits legacy. one notable
 waits feature seldom duplicated elsewhere was a news-wire interface
 that allowed waits hackers to read, store, and filter ap and upi
 dispatches from their terminals; the system also featured a
 still-unusual level of support for what is now called `multimedia'
 computing, allowing analog audio and video signals to be switched
 to programming terminals.
:waldo: /wol'doh/ [from robert a. heinlein's story "waldo"]
 . a mechanical agent, such as a gripper arm, controlled by a human
 limb. when these were developed for the nuclear industry in the
 mid-s they were named after the invention described by heinlein
 in the story, which he wrote in . now known by the more
 generic term `telefactoring', this technology is of intense
 interest to nasa for tasks like space station maintenance. . at
 harvard (particularly by tom cheatham and students), this is used
 instead of {foobar} as a metasyntactic variable and general
 nonsense word. see {foo}, {bar}, {foobar}, {quux}.
:walk: n.,vt. traversal of a data structure, especially an array or
 linked-list data structure in {core}. see also {codewalker},
 {silly walk}, {clobber}.
:walk off the end of: vt. to run past the end of an array, list, or
 medium after stepping through it —- a good way to land in trouble.
 often the result of an {off-by-one error}. compare
 {clobber}, {roach}, {smash the stack}.
:walking drives: n. an occasional failure mode of magnetic-disk
 drives back in the days when they were huge, clunky {washing
 machine}s. those old {dinosaur} parts carried terrific angular
 momentum; the combination of a misaligned spindle or worn bearings
 and stick-slip interactions with the floor could cause them to
 `walk' across a room, lurching alternate corners forward a couple
 of millimeters at a time. there is a legend about a drive that
 walked over to the only door to the computer room and jammed it
 shut; the staff had to cut a hole in the wall in order to get at
 it! walking could also be induced by certain patterns of drive
 access (a fast seek across the whole width of the disk, followed by
 a slow seek in the other direction). some bands of old-time
 hackers figured out how to induce disk-accessing patterns that
 would do this to particular drive models and held disk-drive races.
:wall: [wpi] interj. . an indication of confusion, usually spoken
 with a quizzical tone: "wall??" . a request for further
 explication. compare {octal forty}. . [unix] v. to send a message
 to everyone currently logged in, esp. with the wall() utility.
 it is said that sense  came from the idiom `like talking to a
 blank wall'. it was originally used in situations where, after you
 had carefully answered a question, the questioner stared at you
 blankly, clearly having understood nothing that was explained. you
 would then throw out a "hello, wall?" to elicit some sort of
 response from the questioner. later, confused questioners began
 voicing "wall?" themselves.
:wall follower: n. a person or algorithm that compensates for lack
 of sophistication or native stupidity by efficiently following some
 simple procedure shown to have been effective in the past. used of
 an algorithm, this is not necessarily pejorative; it recalls
 `harvey wallbanger', the winning robot in an early ai contest
 (named, of course, after the cocktail). harvey successfully solved
 mazes by keeping a `finger' on one wall and running till it came
 out the other end. this was inelegant, but it was mathematically
 guaranteed to work on simply-connected mazes —- and, in fact,
 harvey outperformed more sophisticated robots that tried to
 `learn' each maze by building an internal representation of it.
 used of humans, the term *is* pejorative and implies an
 uncreative, bureaucratic, by-the-book mentality. see also {code
 grinder}, {droid}.
:wall time: n. (also `wall clock time') . `real world' time (what
 the clock on the wall shows), as opposed to the system clock's idea
 of time. . the real running time of a program, as opposed to the
 number of {clocks} required to execute it (on a timesharing
 system these will differ, as no one program gets all the
 {clocks}, and on multiprocessor systems with good thread support
 one may get more processor clocks than real-time clocks).
:wallpaper: n. . a file containing a listing (e.g., assembly
 listing) or a transcript, esp. a file containing a transcript of
 all or part of a login session. (the idea was that the paper for
 such listings was essentially good only for wallpaper, as evidenced
 at stanford, where it was used to cover windows.) now rare,
 esp. since other systems have developed other terms for it (e.g.,
 photo on twenex). however, the unix world doesn't have an
 equivalent term, so perhaps {wallpaper} will take hold there.
 the term probably originated on its, where the commands to begin
 and end transcript files were `:walbeg' and `:walend',
 with default file `wall paper' (the space was a path
 delimiter). . the background pattern used on graphical
 workstations (this is techspeak under the `windows' graphical user
 interface to ms-dos). . `wallpaper file' n. the file that
 contains the wallpaper information before it is actually printed on
 paper. (even if you don't intend ever to produce a real paper copy
 of the file, it is still called a wallpaper file.)
:wango: /wang'goh/ n. random bit-level {grovel}ling going on in
 a system during some unspecified operation. often used in
 combination with {mumble}. for example: "you start with the `.o'
 file, run it through this postprocessor that does mumble-wango —-
 and it comes out a snazzy object-oriented executable."
:wank: /wangk/ [columbia university: prob. by mutation from
 commonwealth slang v. `wank', to masturbate] n.,v. used much as
 {hack} is elsewhere, as a noun denoting a clever technique or
 person or the result of such cleverness. may describe (negatively)
 the act of hacking for hacking's sake ("quit wanking, let's go get
 supper!") or (more positively) a {wizard}. adj. `wanky'
 describes something particularly clever (a person, program, or
 algorithm). conversations can also get wanky when there are too
 many wanks involved. this excess wankiness is signalled by an
 overload of the `wankometer' (compare {bogometer}). when the
 wankometer overloads, the conversation's subject must be changed,
 or all non-wanks will leave. compare `neep-neeping' (under
 {neep-neep}). usage: u.s. only. in britain and the commonwealth
 this word is *extremely* rude and is best avoided unless one
 intends to give offense.
:wannabee: /won'*-bee/ (also, more plausibly, spelled
 `wannabe') [from a term recently used to describe madonna fans
 who dress, talk, and act like their idol; prob. originally from
 biker slang] n. a would-be {hacker}. the connotations of this
 term differ sharply depending on the age and exposure of the
 subject. used of a person who is in or might be entering
 {larval stage}, it is semi-approving; such wannabees can be
 annoying but most hackers remember that they, too, were once such
 creatures. when used of any professional programmer, cs academic,
 writer, or {suit}, it is derogatory, implying that said person
 is trying to cuddle up to the hacker mystique but doesn't,
 fundamentally, have a prayer of understanding what it is all about.
 overuse of terms from this lexicon is often an indication of the
 {wannabee} nature. compare {newbie}.
 historical note: the wannabee phenomenon has a slightly different
 flavor now () than it did ten or fifteen years ago. when the
 people who are now hackerdom's tribal elders were in {larval
 stage}, the process of becoming a hacker was largely unconscious
 and unaffected by models known in popular culture —- communities
 formed spontaneously around people who, *as individuals*, felt
 irresistibly drawn to do hackerly things, and what wannabees
 experienced was a fairly pure, skill-focused desire to become
 similarly wizardly. those days of innocence are gone forever;
 society's adaptation to the advent of the microcomputer after 
 included the elevation of the hacker as a new kind of folk hero,
 and the result is that some people semi-consciously set out to
 *be hackers* and borrow hackish prestige by fitting the
 popular image of hackers. fortunately, to do this really well, one
 has to actually become a wizard. nevertheless, old-time hackers
 tend to share a poorly articulated disquiet about the change; among
 other things, it gives them mixed feelings about the effects of
 public compendia of lore like this one.
:warlording: [from the usenet group alt.fan.warlord] v. the act
 of excoriating a bloated, ugly, or derivative {sig block}.
 common grounds for warlording include the presence of a signature
 rendered in a {buaf}, over-used or cliched {sig quote}s, ugly
 {ascii art}, or simply excessive size. the original `warlord'
 was a {biff}-like {newbie} c. who featured in his sig a
 particularly large and obnoxious ascii graphic resembling the sword
 of conan the barbarian in the  john milius movie; the group
 name alt.fan.warlord was sarcasm, and the characteristic mode
 of warlording is devastatingly sarcastic praise.
:warm boot: n. see {boot}.
:wart: n. a small, {crock}y {feature} that sticks out of an
otherwise {clean} design. something conspicuous for localized
ugliness, especially a special-case exception to a general rule.
for example, in some versions of `csh()', single quotes
literalize every character inside them except `!'. in ansi c,
the `??' syntax used obtaining ascii characters in a foreign
environment is a wart. see also {miswart}.
:washing machine: n. old-style -inch hard disks in floor-standing
 cabinets. so called because of the size of the cabinet and the
 `top-loading' access to the media packs —- and, of course, they
 were always set on `spin cycle'. the washing-machine idiom
 transcends language barriers; it is even used in russian hacker
 jargon. see also {walking drives}. the thick channel cables
 connecting these were called `bit hoses' (see {hose}).
:water mips: n. (see {mips}, sense ) large, water-cooled
 machines of either today's ecl-supercomputer flavor or yesterday's
 traditional {mainframe} type.
:wave a dead chicken: v. to perform a ritual in the direction of
 crashed software or hardware that one believes to be futile but
 is nevertheless necessary so that others are satisfied that an
 appropriate degree of effort has been expended. "i'll wave a dead
 chicken over the source code, but i really think we've run into an
 os bug." compare {voodoo programming}, {rain dance}.
:weasel: n. [cambridge] a na"ive user, one who deliberately or
 accidentally does things that are stupid or ill-advised. roughly
 synonymous with {loser}.
:wedged: [from a common description of recto-cranial inversion]
 adj. . to be stuck, incapable of proceeding without help. this
 is different from having crashed. if the system has crashed, then
 it has become totally non-functioning. if the system is wedged, it
 is trying to do something but cannot make progress; it may be
 capable of doing a few things, but not be fully operational. for
 example, a process may become wedged if it {deadlock}s with
 another (but not all instances of wedging are deadlocks). see also
 {gronk}, {locked up}, {hosed}. describes a
 {deadlock}ed condition. . often refers to humans suffering
 misconceptions. "he's totally wedged —- he's convinced that he
 can levitate through meditation." . [unix] specifically used to
 describe the state of a tty left in a losing state by abort of a
 screen-oriented program or one that has messed with the line
 discipline in some obscure way.
:wedgie: [fairchild] n. a bug. prob. related to {wedged}.
:wedgitude: /wedj'i-t[y]ood/ n. the quality or state of being
 {wedged}.
:weeble: /weeb'l/ [cambridge] interj. used to denote frustration,
 usually at amazing stupidity. "i stuck the disk in upside down."
 "weeble…." compare {gurfle}.
:weeds: n. . refers to development projects or algorithms that have
 no possible relevance or practical application. comes from `off in
 the weeds'. used in phrases like "lexical analysis for microcode
 is serious weeds…." . at cdc/eta before its demise, the
 phrase `go off in the weeds' was equivalent to ibm's {branch to
 fishkill} and mainstream hackerdom's {jump off into never-never
 land}.
:weenie: n. . [on bbses] any of a species of luser resembling a
 less amusing version of {biff} that infests many {bbs}
 systems. the typical weenie is a teenage boy with poor social
 skills travelling under a grandiose {handle} derived from
 fantasy or heavy-metal rock lyrics. among sysops, `the weenie
 problem' refers to the marginally literate and profanity-laden
 {flamage} weenies tend to spew all over a newly-discovered bbs.
 compare {spod}, {computer geek}, {terminal junkie}.
 . [among hackers] when used with a qualifier (for example, as in
 {unix weenie}, vms weenie, ibm weenie) this can be either an
 insult or a term of praise, depending on context, tone of voice,
 and whether or not it is applied by a person who considers him or
 herself to be the same sort of weenie. implies that the weenie has
 put a major investment of time, effort, and concentration into the
 area indicated; whether this is positive or negative depends on the
 hearer's judgment of how the speaker feels about that area. see
 also {bigot}. . the semicolon character, `;' (ascii
:weenix: /wee'niks/ [its] n. a derogatory term for {{unix}},
derived from {unix weenie}. according to one noted ex-itser, it
is "the operating system preferred by unix weenies: typified by
poor modularity, poor reliability, hard file deletion, no file
version numbers, case sensitivity everywhere, and users who believe
that these are all advantages". some its fans behave as though
they believe unix stole a future that rightfully belonged to them.
see {{its}}, sense .
:well-behaved: adj. . [primarily {{ms-dos}}] said of software
 conforming to system interface guidelines and standards.
 well-behaved software uses the operating system to do chores such
 as keyboard input, allocating memory and drawing graphics. oppose
 {ill-behaved}. . software that does its job quietly and
 without counterintuitive effects. esp. said of software having
 an interface spec sufficiently simple and well-defined that it can
 be used as a {tool} by other software. see {cat}.
:well-connected: adj. said of a computer installation, this means
that it has reliable email links with the network and/or that
it relays a large fraction of available {usenet} newsgroups.
`well-known' can be almost synonymous, but also implies that the
site's name is familiar to many (due perhaps to an archive service
or active usenet users).
:wetware: /wet'weir/ [prob. from the novels of rudy rucker] n.
. the human nervous system, as opposed to computer hardware or
software. "wetware has  plus or minus  temporary registers."
. human beings (programmers, operators, administrators) attached
to a computer system, as opposed to the system's hardware or
software. see {liveware}, {meatware}.
:whack: v. according to arch-hacker james gosling, to "…modify a
program with no idea whatsoever how it works." (see {whacker}.)
it is actually possible to do this in nontrivial circumstances if
the change is small and well-defined and you are very good at
{glark}ing things from context. as a trivial example, it is
relatively easy to change all `stderr' writes to `stdout'
writes in a piece of c filter code which remains otherwise
mysterious.
:whacker: [university of maryland: from {hacker}] n. . a person,
 similar to a {hacker}, who enjoys exploring the details of
 programmable systems and how to stretch their capabilities.
 whereas a hacker tends to produce great hacks, a whacker only ends
 up whacking the system or program in question. whackers are often
 quite egotistical and eager to claim {wizard} status,
 regardless of the views of their peers. . a person who is good at
 programming quickly, though rather poorly and ineptly.
:whales: n. see {like kicking dead whales down the beach}.
:whalesong: n. the peculiar clicking and whooshing sounds made by a
 pep modem such as the telebit trailblazer as it tries to
 synchronize with another pep modem for their special high-speed
 mode. this sound isn't anything like the normal two-tone handshake
 between conventional modems and is instantly recognizable to anyone
 who has heard it more than once. it sounds, in fact, very much
 like whale songs. this noise is also called "the moose call" or
 "moose tones".
:what's a spline?: [xerox parc] this phrase expands to: "you have
 just used a term that i've heard for a year and a half, and i feel
 i should know, but don't. my curiosity has finally overcome my
 guilt." the parc lexicon adds "moral: don't hesitate to ask
 questions, even if they seem obvious."
:wheel: [from slang `big wheel' for a powerful person] n. a
 person who has an active {wheel bit}. "we need to find a
 wheel to unwedge the hung tape drives." (see {wedged}, sense
:wheel bit: n. a privilege bit that allows the possessor to perform
 some restricted operation on a timesharing system, such as read or
 write any file on the system regardless of protections, change or
 look at any address in the running monitor, crash or reload the
 system, and kill or create jobs and user accounts. the term was
 invented on the tenex operating system, and carried over to
 tops-, xerox-ifs, and others. the state of being in a privileged
